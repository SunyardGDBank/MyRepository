[15:55:42.111][INFO ](main) Loading Webapp 'webroot' (Moqui Root Webapp) on ROOT, located at: D:\IDEAWorkSpace\trunk\execwartmp\ROOT\webapp [MoquiContextListener.class]
[15:55:42.527][INFO ](main) Initializing Moqui Framework version 2.1.0
 - runtime directory: D:\IDEAWorkSpace\trunk\runtime
 - runtime config:    D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:55:43.122][INFO ](main) Added component tools              at file:D:/IDEAWorkSpace/trunk/runtime/base-component/tools [ExecutionContextFactoryImpl.class]
[15:55:43.139][INFO ](main) Added component webroot            at file:D:/IDEAWorkSpace/trunk/runtime/base-component/webroot [ExecutionContextFactoryImpl.class]
[15:55:43.146][INFO ](main) Added component nacs-access        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-access [ExecutionContextFactoryImpl.class]
[15:55:43.149][INFO ](main) Added component nacs-admin         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-admin [ExecutionContextFactoryImpl.class]
[15:55:43.153][INFO ](main) Added component nacs-be            at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be [ExecutionContextFactoryImpl.class]
[15:55:43.157][INFO ](main) Added component nacs-be-spd        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be-spd [ExecutionContextFactoryImpl.class]
[15:55:43.161][INFO ](main) Added component nacs-channel       at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel [ExecutionContextFactoryImpl.class]
[15:55:43.164][INFO ](main) Added component nacs-channel-unionpay at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel-unionpay [ExecutionContextFactoryImpl.class]
[15:55:43.168][INFO ](main) Added component nacs-check         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-check [ExecutionContextFactoryImpl.class]
[15:55:43.173][INFO ](main) Added component nacs-clear         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-clear [ExecutionContextFactoryImpl.class]
[15:55:43.177][INFO ](main) Added component nacs-main          at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-main [ExecutionContextFactoryImpl.class]
[15:55:43.181][INFO ](main) Added component nacs-mrchnt        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-mrchnt [ExecutionContextFactoryImpl.class]
[15:55:43.185][INFO ](main) Added component nacs-route         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-route [ExecutionContextFactoryImpl.class]
[15:55:43.191][INFO ](main) Added component nacs-udm           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-udm [ExecutionContextFactoryImpl.class]
[15:55:43.196][INFO ](main) Added component nacs-usl           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-usl [ExecutionContextFactoryImpl.class]
[15:55:43.198][INFO ](main) Components after depends-on sort: [tools, webroot, nacs-access, nacs-udm, nacs-admin, nacs-be, nacs-be-spd, nacs-channel, nacs-channel-unionpay, nacs-check, nacs-clear, nacs-main, nacs-mrchnt, nacs-route, nacs-usl] [ExecutionContextFactoryImpl.class]
[15:55:43.225][INFO ](main) Merging runtime configuration at D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:55:43.305][INFO ](main) Found default_time_zone US/Pacific: sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:55:43.306][INFO ](main) Default locale en_US, time zone sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:55:43.513][INFO ](main) Initializing worker ThreadPoolExecutor: queue limit 65535, pool-core 4, pool-max 16, pool-alive 60s [ExecutionContextFactoryImpl.class]
[15:55:43.726][INFO ](main) Added JARs from component webroot: [closure-compiler-v20160208.jar, gradle-js-plugin-2.14.1.jar, html2js-0.1.jar] [ExecutionContextFactoryImpl.class]
[15:55:43.753][INFO ](main) Added JARs from component nacs-be-spd: [cxf-2.7.18.jar, cxf-rt-ws-policy-2.7.18.jar, dom4j-1.6.1.jar, nacs-be-spd-1.0.0.jar, wsdl4j-1.6.3.jar] [ExecutionContextFactoryImpl.class]
[15:55:43.788][INFO ](main) Added JARs from component nacs-channel-unionpay: [bcprov-jdk15on-1.54.jar, commons-codec-1.6.jar, commons-io-2.2.jar, commons-lang-2.5.jar, javax.servlet-api-3.1.0.jar, log4j-1.2.17.jar, nacs-channel-unionpay-1.0.0.jar, nacs-unionpay-1.0.0.jar, slf4j-api-1.5.11.jar, slf4j-log4j12-1.5.11.jar, upacp_sdk-1.1.0-20151216.jar] [ExecutionContextFactoryImpl.class]
[15:55:43.791][INFO ](main) Added JARs from component nacs-check: [nacs-check-1.0.0.jar] [ExecutionContextFactoryImpl.class]
[15:55:43.797][INFO ](main) Added JARs from component nacs-usl: [commons-net-1.4.1.jar, javolution-5.4.3.jar] [ExecutionContextFactoryImpl.class]
[15:55:43.798][INFO ](main) Initialized ClassLoader in 269ms [ExecutionContextFactoryImpl.class]
[15:55:43.802][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.JackrabbitRunToolFactory [ExecutionContextFactoryImpl.class]
[15:55:43.803][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.SubEthaSmtpToolFactory [ExecutionContextFactoryImpl.class]
[15:55:43.810][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.MCacheToolFactory [ExecutionContextFactoryImpl.class]
[15:55:43.835][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.H2ServerToolFactory [ExecutionContextFactoryImpl.class]
[15:55:43.875][INFO ](main) Cache Facade initialized [ExecutionContextFactoryImpl.class]
[15:55:44.213][INFO ](main) Resource Facade initialized [ExecutionContextFactoryImpl.class]
[15:55:44.276][INFO ](main) Bitronix Transaction Manager version 3.0.0-SNAPSHOT [BitronixTransactionManager.class]
[15:55:44.282][WARN ](main) Cannot get the unique server ID for this JVM ('bitronix.tm.serverId'). Make sure it is configured and you use only US-ASCII characters. Will use IP address instead (unsafe for production usage!). [Configuration.class]
[15:55:44.285][INFO ](main) JVM unique ID: <192.168.191.1> - Using this server ID to ensure uniqueness of transaction IDs across the network. [Configuration.class]
[15:55:44.305][WARN ](main) active log file is unclean, did you call BitronixTransactionManager.shutdown() at the end of the last run? [DiskJournal.class]
[15:55:44.439][INFO ](main) recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 0 resource(s) [] (restricted to serverId '192.168.191.1') [Recoverer.class]
[15:55:44.470][INFO ](main) Transaction Facade initialized [ExecutionContextFactoryImpl.class]
[15:55:44.572][INFO ](main) Database time zone is sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [EntityFacadeImpl.class]
[15:55:44.728][INFO ](main) Initializing DataSource transactional_DS (h2) with properties: [user:sa, url:jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui;lock_timeout=30000] [TransactionInternalBitronix.class]
[15:55:46.251][INFO ](main) incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [transactional_DS] (restricted to serverId '192.168.191.1') [IncrementalRecoverer.class]
[15:55:46.253][INFO ](main) Init DataSource transactional_DS (h2) isolation READ_COMMITTED (2), max pool 50 [TransactionInternalBitronix.class]
[15:55:46.284][INFO ](main) Loaded 0 Entity ECA rules from 0 .eecas.xml files [EntityFacadeImpl.class]
[15:55:46.301][INFO ](main) Entity Cache initialized, distributed cache invalidate enabled: false [EntityCache.class]
[15:55:46.338][INFO ](main) Entity Facade initialized [ExecutionContextFactoryImpl.class]
[15:55:46.408][INFO ](main) Loaded 0 Service ECA rules from 0 .secas.xml files [ServiceFacadeImpl.class]
[15:55:46.641][INFO ](main) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[15:55:46.659][INFO ](main) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[15:55:46.664][INFO ](main) Loaded REST API files, 2 roots, in 227ms [RestApi.class]
[15:55:46.746][INFO ](main) No distributed-factory specified, distributed async service calls will be run local only [ServiceFacadeImpl.class]
[15:55:46.808][INFO ](main) Service Facade initialized [ExecutionContextFactoryImpl.class]
[15:55:46.837][INFO ](main) Screen Facade initialized [ExecutionContextFactoryImpl.class]
[15:55:46.838][INFO ](main) Loading entity definitions [ExecutionContextFactoryImpl.class]
[15:55:47.066][INFO ](main) Found entities in 20 files in 227ms [EntityFacadeImpl.class]
[15:55:47.398][INFO ](main) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:55:48.000][INFO ](main) Loaded 199 entity definitions in 1162ms [ExecutionContextFactoryImpl.class]
[15:55:48.001][INFO ](main) Initializing ToolFactory: MCache [ExecutionContextFactoryImpl.class]
[15:55:48.001][INFO ](main) Initializing ToolFactory: H2Server [ExecutionContextFactoryImpl.class]
[15:55:48.123][INFO ](main) Started H2 remote server on port 9092 status: TCP server running at tcp://192.168.191.1:9092 (only local connections) [H2ServerToolFactory.class]
[15:55:48.123][INFO ](main) H2 args: [-tcpPort, 9092, -ifExists, -baseDir, D:\IDEAWorkSpace\trunk\runtime/db/h2] [H2ServerToolFactory.class]
[15:55:48.152][INFO ](main) Found shutdown hook: org.eclipse.jetty.util.thread.ShutdownThread Thread[Thread-0,5,main] [H2ServerToolFactory.class]
[15:55:48.154][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-13,5,main] [H2ServerToolFactory.class]
[15:55:48.156][INFO ](main) Found shutdown hook: java.lang.Thread Thread[pool-1-thread-1,5,main] [H2ServerToolFactory.class]
[15:55:48.157][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-12,5,main] [H2ServerToolFactory.class]
[15:55:48.157][INFO ](main) Found shutdown hook: java.util.logging.LogManager$Cleaner Thread[Thread-9,5,main] [H2ServerToolFactory.class]
[15:55:48.479][INFO ](main) Execution Context Factory initialized in 6.134 seconds [ExecutionContextFactoryImpl.class]
[15:55:48.500][DEBUG](main) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM ENUMERATION [EntityFindBuilder.class]
[15:55:48.502][DEBUG](main) Executed query with SQL [SELECT COUNT(*)  FROM ENUMERATION] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:55:48.504][INFO ](main) Found 289 Enumeration records, NOT loading empty-db-load data types (all) [ExecutionContextFactoryImpl.class]
[15:55:48.646][INFO ](main) Initializing webapp webroot http://null:null https://null:null https enabled? false [ExecutionContextFactoryImpl.class]
[15:55:48.658][INFO ](main) Added webapp listener org.moqui.impl.webapp.MoquiSessionListener [MoquiContextListener.class]
[15:55:48.739][INFO ](main) Added servlet MoquiServlet on: [/*] [MoquiContextListener.class]
[15:55:48.751][INFO ](main) Added servlet MoquiFopServlet on: [/fop/*] [MoquiContextListener.class]
[15:55:48.763][INFO ](main) Added servlet H2Console on: [/h2/*] [MoquiContextListener.class]
[15:55:48.764][INFO ](main) Found WebSocket ServerContainer org.eclipse.jetty.websocket.jsr356.server.ServerContainer [MoquiContextListener.class]
[15:55:48.789][INFO ](main) Added WebSocket endpoint /notws for class org.moqui.impl.webapp.NotificationEndpoint [MoquiContextListener.class]
[15:55:48.789][INFO ](main) Moqui Framework initialized in 6.704 seconds [MoquiContextListener.class]
[15:55:48.840][INFO ](main) MoquiServlet initialized for webapp webroot [MoquiServlet.class]
[15:57:46.882][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL [EntityFindBuilder.class]
[15:57:46.888][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:47.009][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:47.017][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:57:47.019][WARN ](pool-2-thread-4) Lock expired: found lock for job HandleChkBeFile from 2018-03-11T19:40:35.543-07:00[US/Pacific], more than 1440 minutes old, ignoring lock [ScheduledJobRunner.class]
[15:57:47.019][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:57:47.019][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:57:47.019][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:57:47.031][INFO ](pool-2-thread-4) Built entity.data.feed.info cache for in 11ms, entries for 0 entities [EntityDataFeed.class]
[15:57:47.032][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:57:47.032][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:47.032][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:47.032][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:47.033][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:57:47.033][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:57:47.033][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:57:47.034][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:57:47.034][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:57:47.038][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:57:47.051][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 00:57:46.987, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:47.051][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:57:47.052][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:57:47.052][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:57:47.052][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:57:47.088][TRACE](pool-2-thread-4) processing "0/3" at 2018-04-09T00:57:47.088-07:00[US/Pacific] [EveryFieldValueGenerator.class]
[15:57:47.107][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:47.108][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.service.job.ServiceJobRun]] in [0] seconds [EntityQueryBuilder.class]
[15:57:47.109][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:57:47.109][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:57:47.110][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:57:47.110][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:57:47.110][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:57:47.110][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:57:47.110][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:57:47.110][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:57:47.110][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:57:47.110][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:57:47.111][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:57:47.113][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:57:47.115][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100560, lastUpdatedStamp:2018-04-09 00:57:47.1, seqName:moqui.service.job.ServiceJobRun]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:47.115][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:57:47.115][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:57:47.115][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:57:47.115][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:57:47.132][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:57:48.165][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [1] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.165][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:57:48.166][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:57:48.166][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:57:48.166][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:57:48.167][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.167][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.167][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.168][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:57:48.168][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:57:48.168][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:57:48.168][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:57:48.169][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:57:48.169][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:57:48.171][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100510, lastRunTime:2018-04-09 00:57:46.846, lastUpdatedStamp:2018-04-09 00:57:46.987, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.171][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:57:48.172][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:57:48.172][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:57:48.172][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:57:48.173][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100510 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T00:57-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:57:48.222][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ? [EntityFindBuilder.class]
[15:57:48.225][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ?] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:57:48.279][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:57:48.389][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ALL_USERS]] in [0] seconds [EntityQueryBuilder.class]
[15:57:48.427][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:48.429][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:57:48.431][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:57:48.432][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.432][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:57:48.433][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:57:48.434][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:57:48.434][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:57:48.434][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:57:48.435][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100511, lastRunTime:2018-04-09 00:57:46.846, lastUpdatedStamp:2018-04-09 00:57:48.426, jobName:clean_ArtifactData_daily]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.435][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:57:48.435][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:57:48.435][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:57:48.435][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:57:48.436][INFO ](pool-2-thread-4) Running job clean_ArtifactData_daily run 100511 (last run 2018-03-12 02:02:19.403, schedule 2018-04-08T02:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:57:48.439][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ? [EntityFindBuilder.class]
[15:57:48.439][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:57:48.439][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:57:48.439][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:57:48.439][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:57:48.439][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:57:48.439][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:57:48.440][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ?] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:57:48.440][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:57:48.440][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:57:48.440][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:57:48.440][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:57:48.440][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:57:48.440][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:57:48.441][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:57:48.441][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:57:48.493][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 00:57:48.438, lastUpdatedStamp:2018-04-09 00:57:48.438, jobRunId:100510]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.494][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:57:48.494][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:57:48.494][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:57:48.494][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:57:48.570][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:57:48.571][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:57:48.571][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:57:48.571][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:57:48.571][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:48.571][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:48.572][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:48.572][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:48.572][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:57:48.573][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:57:48.573][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:57:48.573][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:57:48.573][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:57:48.578][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:48.580][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:57:48.582][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:57:48.589][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.589][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:57:48.589][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:57:48.590][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:57:48.590][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:57:48.590][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.590][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.590][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:57:48.590][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:57:48.590][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:57:48.591][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:57:48.591][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:57:48.591][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:57:48.591][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:57:48.592][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100512, lastRunTime:2018-04-09 00:57:46.846, lastUpdatedStamp:2018-04-09 00:57:48.566, jobName:clean_ServiceJobRun_daily]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.592][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:57:48.592][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:57:48.592][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:57:48.593][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:57:48.594][INFO ](pool-2-thread-4) Running job clean_ServiceJobRun_daily run 100512 (last run 2018-03-12 02:02:19.403, schedule 2018-04-08T02:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:57:48.598][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:57:48.612][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 00:57:48.569, lastUpdatedStamp:2018-04-09 00:57:48.57, jobRunId:100511]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.613][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:57:48.613][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:57:48.613][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:57:48.616][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:57:48.626][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ? [EntityFindBuilder.class]
[15:57:48.627][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ?] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:57:48.675][INFO ](pool-2-thread-4) Ran 3 Service Jobs starting 2018-04-09T00:57:46.846-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:57:48.679][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:57:48.680][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:57:48.680][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:57:48.680][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:57:48.680][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:48.680][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:48.680][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:48.680][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:48.680][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:57:48.681][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:57:48.681][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:57:48.681][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:57:48.681][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:57:48.681][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:57:48.683][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 00:57:48.678, lastUpdatedStamp:2018-04-09 00:57:48.679, jobRunId:100512]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:48.683][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:57:48.684][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:57:48.684][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:57:48.700][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:57:49.890][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, ERROR_MESSAGE, REQUEST_URL, REFERRER_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP FROM ARTIFACT_HIT WHERE START_DATE_TIME < ? [EntityFindBuilder.class]
[15:57:49.902][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:57:51.441][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, ERROR_MESSAGE, REQUEST_URL, REFERRER_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP FROM ARTIFACT_HIT WHERE START_DATE_TIME < ?] and parameters [[startDateTime:2018-01-09 00:57:49.619]] in [1] seconds [EntityQueryBuilder.class]
[15:57:51.451][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:57:51.452][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:51.466][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP FROM ARTIFACT_HIT_BIN WHERE BIN_END_DATE_TIME < ? [EntityFindBuilder.class]
[15:57:51.477][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:57:51.477][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:57:51.563][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:57:51.566][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:57:52.047][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP FROM ARTIFACT_HIT_BIN WHERE BIN_END_DATE_TIME < ?] and parameters [[binEndDateTime:2018-01-09 00:57:49.619]] in [0] seconds [EntityQueryBuilder.class]
[15:57:52.048][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT JOB_RUN_ID, JOB_NAME, USER_ID, PARAMETERS, RESULTS, MESSAGES, HAS_ERROR, ERRORS, HOST_ADDRESS, HOST_NAME, RUN_THREAD, START_TIME, END_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN WHERE START_TIME < ? [EntityFindBuilder.class]
[15:57:52.051][INFO ](MoquiWorker-2) Removed 0 ArtifactHit records and 0 ArtifactHitBin records. [LoggerFacadeImpl.class]
[15:57:52.105][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:57:52.105][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:57:52.105][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:57:52.106][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:57:52.106][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:52.106][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:57:52.106][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:57:52.107][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:57:52.107][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:57:52.107][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:57:52.236][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT JOB_RUN_ID, JOB_NAME, USER_ID, PARAMETERS, RESULTS, MESSAGES, HAS_ERROR, ERRORS, HOST_ADDRESS, HOST_NAME, RUN_THREAD, START_TIME, END_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN WHERE START_TIME < ?] and parameters [[startTime:2018-03-10 00:57:50.107]] in [0] seconds [EntityQueryBuilder.class]
[15:57:52.248][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:57:52.264][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastUpdatedStamp:2018-04-09 00:57:52.105, jobName:clean_ArtifactData_daily]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:52.266][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:57:52.266][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:57:52.268][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:57:52.268][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:57:52.270][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:57:52.270][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:57:52.270][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:57:52.270][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:57:52.271][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:52.271][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:52.271][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:52.271][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:52.271][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:57:52.271][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:57:52.272][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:57:52.272][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:57:52.272][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:57:52.272][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:57:52.273][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:57:52.281][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{"artifactHitBinsRemoved":0,"artifactHitsRemoved":0}, messages:null, hasError:N, errors:null, endTime:2018-04-09 00:57:52.104, lastUpdatedStamp:2018-04-09 00:57:52.27, jobRunId:100511]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:52.282][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:57:52.282][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:57:52.282][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:57:52.283][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:57:53.058][INFO ](MoquiWorker-3) Removed 86 ServiceJobRun records. [LoggerFacadeImpl.class]
[15:57:53.074][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:57:53.075][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:57:53.075][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:57:53.075][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:57:53.075][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:53.075][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:57:53.075][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:57:53.075][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:57:53.076][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:57:53.076][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:57:53.085][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:57:53.087][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastUpdatedStamp:2018-04-09 00:57:53.073, jobName:clean_ServiceJobRun_daily]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:53.088][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:57:53.088][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:57:53.088][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:57:53.088][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:57:53.166][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:57:53.167][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:57:53.167][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:57:53.167][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:57:53.167][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:53.168][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:53.168][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:53.168][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:53.169][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:57:53.170][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:57:53.170][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:57:53.170][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:57:53.170][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:57:53.170][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:57:53.171][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:57:53.173][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{"recordsRemoved":86}, messages:null, hasError:N, errors:null, endTime:2018-04-09 00:57:53.072, lastUpdatedStamp:2018-04-09 00:57:53.166, jobRunId:100512]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:53.176][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:57:53.176][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:57:53.176][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:57:53.176][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:58:12.562][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:58:12.563][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:58:12.575][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:58:12.581][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:58:12.608][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:58:12.646][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:58:12.647][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:58:12.647][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:58:12.654][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:58:13.849][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:58:13.867][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:58:13.918][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:58:13.934][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:58:13.936][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:58:13.939][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:58:13.939][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:58:13.951][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:58:13.951][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:58:13.951][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:58:13.951][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:58:13.951][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:58:13.951][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:58:13.951][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:58:13.952][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:58:13.952][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:58:13.952][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:58:13.952][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:58:13.952][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:58:13.953][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 00:58:13.951, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:13.954][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:58:13.954][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:58:13.954][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:58:13.954][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:58:13.956][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:58:13.957][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:58:13.957][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:58:13.959][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:58:13.959][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:58:13.959][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:58:13.960][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:58:13.961][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 00:58:13.95, lastUpdatedStamp:2018-04-09 00:58:13.955, jobRunId:100510]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:13.961][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:58:13.962][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:58:13.962][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:58:13.962][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:58:46.817][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:58:46.818][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:58:46.819][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:58:46.820][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:58:46.820][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:58:46.821][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:58:46.821][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:58:46.821][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:58:46.821][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100513, lastRunTime:2018-04-09 00:58:46.812, lastUpdatedStamp:2018-04-09 00:58:46.815, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:46.822][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:58:46.822][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:58:46.822][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:58:46.822][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:58:46.822][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100513 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T00:57-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:58:46.830][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:58:46.831][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:58:46.832][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:58:46.833][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:58:46.833][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:58:46.833][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:58:46.833][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:58:46.834][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:58:46.834][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:58:46.834][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:58:46.834][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:58:46.834][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:58:46.834][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:58:46.834][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:58:46.834][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:58:46.835][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:58:46.837][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 00:58:46.832, lastUpdatedStamp:2018-04-09 00:58:46.832, jobRunId:100513]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:46.837][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:58:46.837][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:58:46.837][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:58:46.837][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:58:46.841][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:58:46.842][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:58:46.855][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T00:58:46.812-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:58:47.012][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:58:47.016][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:58:47.017][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:47.017][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:58:47.018][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:58:47.020][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:58:47.020][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:59:08.049][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:59:08.049][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:59:08.049][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:59:08.052][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:59:08.053][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:59:08.057][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:59:08.057][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:59:08.057][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:59:08.111][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:59:09.447][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:59:09.475][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:59:09.598][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:59:09.600][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:59:09.604][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:59:09.611][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:59:09.611][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:59:09.617][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:59:09.617][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:59:09.618][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:59:09.618][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:59:09.618][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:59:09.618][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:59:09.618][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:59:09.629][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:59:09.629][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:59:09.629][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:59:09.629][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:59:09.629][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:59:09.630][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 00:59:09.617, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:59:09.631][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:59:09.631][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:59:09.631][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:59:09.631][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:59:09.632][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:59:09.632][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:59:09.633][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:59:09.634][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:59:09.635][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 00:59:09.617, lastUpdatedStamp:2018-04-09 00:59:09.632, jobRunId:100513]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:59:09.635][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:59:09.635][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:59:09.635][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:59:09.635][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:59:46.815][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:59:46.816][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:59:46.816][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:59:46.817][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:59:46.817][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:59:46.817][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:59:46.817][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:59:46.817][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:59:46.818][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:59:46.818][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:59:46.818][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:59:46.818][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:59:46.818][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:59:46.818][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:59:46.818][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:59:46.818][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:59:46.818][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:59:46.819][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100514, lastRunTime:2018-04-09 00:59:46.814, lastUpdatedStamp:2018-04-09 00:59:46.815, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:59:46.819][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:59:46.819][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:59:46.819][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:59:46.819][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:59:46.820][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100514 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T00:57-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:59:46.825][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:59:46.825][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:59:46.825][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:59:46.825][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:59:46.825][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:59:46.825][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:59:46.825][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:59:46.826][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:59:46.826][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:59:46.826][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:59:46.826][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:59:46.826][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:59:46.826][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:59:46.826][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:59:46.829][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:59:46.838][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:59:46.845][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 00:59:46.824, lastUpdatedStamp:2018-04-09 00:59:46.825, jobRunId:100514]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:59:46.845][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:59:46.846][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:59:46.846][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:59:46.846][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:59:46.848][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:59:46.849][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:59:46.851][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T00:59:46.814-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:59:46.955][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:59:46.958][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:59:46.958][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:59:46.959][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:59:46.960][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:59:46.962][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:59:46.962][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[16:00:08.043][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[16:00:08.044][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:00:08.044][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[16:00:08.047][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:00:08.049][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:00:08.055][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[16:00:08.055][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:00:08.055][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:00:08.067][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:00:10.517][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:00:10.530][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:00:10.550][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:00:10.553][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:00:10.556][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:00:10.558][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:00:10.564][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:00:10.567][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:00:10.567][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:00:10.567][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:00:10.567][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:00:10.567][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:00:10.567][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:00:10.567][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:00:10.567][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:00:10.568][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:00:10.568][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:00:10.568][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:00:10.568][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:00:10.569][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:00:10.567, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:00:10.569][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:00:10.569][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:00:10.569][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:00:10.570][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:00:10.571][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:00:10.571][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:00:10.571][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:00:10.571][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:00:10.572][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:00:10.572][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:00:10.572][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:00:10.572][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:00:10.572][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:00:10.572][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:00:10.572][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:00:10.574][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:00:10.574][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:00:10.575][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:00:10.575][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:00:10.590][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:00:10.566, lastUpdatedStamp:2018-04-09 01:00:10.571, jobRunId:100514]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:00:10.594][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:00:10.594][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:00:10.594][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:00:10.594][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:00:46.869][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:00:46.871][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:00:46.939][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:00:46.940][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:00:46.940][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:00:46.941][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:00:46.941][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:00:46.941][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:00:46.942][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:00:46.942][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:00:46.942][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:00:46.942][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:00:46.943][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:00:46.943][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:00:46.943][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:00:46.944][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:00:46.944][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:00:46.945][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100515, lastRunTime:2018-04-09 01:00:46.868, lastUpdatedStamp:2018-04-09 01:00:46.869, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:00:46.945][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:00:46.946][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:00:46.946][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:00:46.946][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:00:46.946][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100515 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:00:47.353][INFO ](pool-2-thread-1) Found entities in 20 files in 269ms [EntityFacadeImpl.class]
[16:00:47.387][INFO ](pool-2-thread-1) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[16:00:47.391][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:00:47.393][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:00:47.398][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:00:47.399][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:00:47.403][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:00:46.868-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:00:47.678][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:00:47.678][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:00:47.678][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:00:47.678][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:00:47.679][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:00:47.679][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:00:47.681][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:00:47.681][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:00:47.681][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:00:47.681][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:00:47.681][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:00:47.681][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:00:47.681][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:00:47.681][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:00:47.685][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:00:47.677, lastUpdatedStamp:2018-04-09 01:00:47.678, jobRunId:100515]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:00:47.685][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:00:47.685][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:00:47.685][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:00:47.685][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:00:47.927][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:00:47.929][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:00:47.929][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:00:47.930][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:00:47.931][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:00:47.938][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:00:47.938][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:00:59.647][INFO ](main) Initializing Moqui Framework version 2.1.0
 - runtime directory: D:\IDEAWorkSpace\trunk\runtime
 - runtime config:    D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[16:01:00.536][INFO ](main) Added component tools              at file:D:/IDEAWorkSpace/trunk/runtime/base-component/tools [ExecutionContextFactoryImpl.class]
[16:01:00.556][INFO ](main) Added component webroot            at file:D:/IDEAWorkSpace/trunk/runtime/base-component/webroot [ExecutionContextFactoryImpl.class]
[16:01:00.561][INFO ](main) Added component nacs-access        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-access [ExecutionContextFactoryImpl.class]
[16:01:00.565][INFO ](main) Added component nacs-admin         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-admin [ExecutionContextFactoryImpl.class]
[16:01:00.568][INFO ](main) Added component nacs-be            at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be [ExecutionContextFactoryImpl.class]
[16:01:00.570][INFO ](main) Added component nacs-be-spd        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be-spd [ExecutionContextFactoryImpl.class]
[16:01:00.573][INFO ](main) Added component nacs-channel       at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel [ExecutionContextFactoryImpl.class]
[16:01:00.578][INFO ](main) Added component nacs-channel-unionpay at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel-unionpay [ExecutionContextFactoryImpl.class]
[16:01:00.582][INFO ](main) Added component nacs-check         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-check [ExecutionContextFactoryImpl.class]
[16:01:00.585][INFO ](main) Added component nacs-clear         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-clear [ExecutionContextFactoryImpl.class]
[16:01:00.589][INFO ](main) Added component nacs-main          at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-main [ExecutionContextFactoryImpl.class]
[16:01:00.593][INFO ](main) Added component nacs-mrchnt        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-mrchnt [ExecutionContextFactoryImpl.class]
[16:01:00.597][INFO ](main) Added component nacs-route         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-route [ExecutionContextFactoryImpl.class]
[16:01:00.601][INFO ](main) Added component nacs-udm           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-udm [ExecutionContextFactoryImpl.class]
[16:01:00.605][INFO ](main) Added component nacs-usl           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-usl [ExecutionContextFactoryImpl.class]
[16:01:00.607][INFO ](main) Components after depends-on sort: [tools, webroot, nacs-access, nacs-udm, nacs-admin, nacs-be, nacs-be-spd, nacs-channel, nacs-channel-unionpay, nacs-check, nacs-clear, nacs-main, nacs-mrchnt, nacs-route, nacs-usl] [ExecutionContextFactoryImpl.class]
[16:01:00.626][INFO ](main) Merging runtime configuration at D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[16:01:00.705][INFO ](main) Found default_time_zone US/Pacific: sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[16:01:00.706][INFO ](main) Default locale en_US, time zone sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[16:01:00.945][INFO ](main) Initializing worker ThreadPoolExecutor: queue limit 65535, pool-core 4, pool-max 16, pool-alive 60s [ExecutionContextFactoryImpl.class]
[16:01:01.064][INFO ](main) Added JARs from component webroot: [closure-compiler-v20160208.jar, gradle-js-plugin-2.14.1.jar, html2js-0.1.jar] [ExecutionContextFactoryImpl.class]
[16:01:01.135][INFO ](main) Added JARs from component nacs-be-spd: [cxf-2.7.18.jar, cxf-rt-ws-policy-2.7.18.jar, dom4j-1.6.1.jar, nacs-be-spd-1.0.0.jar, wsdl4j-1.6.3.jar] [ExecutionContextFactoryImpl.class]
[16:01:01.217][INFO ](main) Added JARs from component nacs-channel-unionpay: [bcprov-jdk15on-1.54.jar, commons-codec-1.6.jar, commons-io-2.2.jar, commons-lang-2.5.jar, javax.servlet-api-3.1.0.jar, log4j-1.2.17.jar, nacs-channel-unionpay-1.0.0.jar, nacs-unionpay-1.0.0.jar, slf4j-api-1.5.11.jar, slf4j-log4j12-1.5.11.jar, upacp_sdk-1.1.0-20151216.jar] [ExecutionContextFactoryImpl.class]
[16:01:01.219][INFO ](main) Added JARs from component nacs-check: [nacs-check-1.0.0.jar] [ExecutionContextFactoryImpl.class]
[16:01:01.240][INFO ](main) Added JARs from component nacs-usl: [commons-net-1.4.1.jar, javolution-5.4.3.jar] [ExecutionContextFactoryImpl.class]
[16:01:01.240][INFO ](main) Initialized ClassLoader in 266ms [ExecutionContextFactoryImpl.class]
[16:01:01.245][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.JackrabbitRunToolFactory [ExecutionContextFactoryImpl.class]
[16:01:01.245][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.SubEthaSmtpToolFactory [ExecutionContextFactoryImpl.class]
[16:01:01.250][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.MCacheToolFactory [ExecutionContextFactoryImpl.class]
[16:01:01.264][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.H2ServerToolFactory [ExecutionContextFactoryImpl.class]
[16:01:01.311][INFO ](main) Cache Facade initialized [ExecutionContextFactoryImpl.class]
[16:01:01.566][INFO ](main) Resource Facade initialized [ExecutionContextFactoryImpl.class]
[16:01:01.621][INFO ](main) Bitronix Transaction Manager version 3.0.0-SNAPSHOT [BitronixTransactionManager.class]
[16:01:01.626][WARN ](main) Cannot get the unique server ID for this JVM ('bitronix.tm.serverId'). Make sure it is configured and you use only US-ASCII characters. Will use IP address instead (unsafe for production usage!). [Configuration.class]
[16:01:01.628][INFO ](main) JVM unique ID: <192.168.191.1> - Using this server ID to ensure uniqueness of transaction IDs across the network. [Configuration.class]
[16:01:09.051][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:01:09.051][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:01:09.052][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:01:09.111][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:01:09.111][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:01:09.115][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:01:09.115][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:01:09.115][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:01:09.116][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:01:09.660][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:01:09.674][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:01:09.729][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:01:09.733][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:01:09.737][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:01:09.739][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:01:09.740][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:01:09.747][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:01:09.747][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:01:09.747][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:01:09.747][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:01:09.748][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:01:09.748][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:01:09.748][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:01:09.748][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:01:09.748][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:01:09.748][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:01:09.748][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:01:09.749][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:01:09.750][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:01:09.747, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:01:09.750][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:01:09.750][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:01:09.750][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:01:09.750][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:01:09.752][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:01:09.752][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:01:09.754][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:01:09.754][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:01:09.754][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:01:09.755][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:01:09.756][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:01:09.760][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:01:09.746, lastUpdatedStamp:2018-04-09 01:01:09.751, jobRunId:100515]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:01:09.760][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:01:09.760][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:01:09.760][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:01:09.760][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:01:46.820][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:01:46.821][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:01:46.822][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:01:46.823][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:01:46.823][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:01:46.823][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:01:46.823][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:01:46.824][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:01:46.824][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:01:46.825][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100516, lastRunTime:2018-04-09 01:01:46.816, lastUpdatedStamp:2018-04-09 01:01:46.819, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:01:46.825][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:01:46.825][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:01:46.825][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:01:46.840][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:01:46.886][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100516 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:01:46.898][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:01:46.898][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:01:46.899][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:01:46.901][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:01:46.902][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 01:01:46.898, lastUpdatedStamp:2018-04-09 01:01:46.898, jobRunId:100516]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:01:46.902][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:01:46.902][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:01:46.902][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:01:46.902][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:01:46.913][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:01:46.964][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:01:46.966][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:01:46.967][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:01:46.968][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:01:46.816-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:01:47.169][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:01:47.170][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:01:47.171][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:01:47.172][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:01:47.172][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[16:01:47.190][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:01:47.190][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[16:02:08.188][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[16:02:08.189][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:02:08.189][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[16:02:08.193][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:02:08.194][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:02:08.196][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[16:02:08.196][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:02:08.196][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:02:08.197][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:02:08.639][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:02:08.641][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:02:08.666][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:02:08.672][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:02:08.673][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:02:08.675][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:02:08.676][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:02:08.677][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:02:08.678][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:02:08.678][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:02:08.678][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:02:08.678][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:02:08.678][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:02:08.678][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:02:08.678][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:02:08.679][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:02:08.679][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:02:08.679][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:02:08.679][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:02:08.680][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:02:08.677, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:02:08.680][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:02:08.680][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:02:08.680][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:02:08.680][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:02:08.683][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:02:08.683][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:02:08.683][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:02:08.683][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:02:08.683][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:02:08.684][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:02:08.684][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:02:08.685][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:02:08.677, lastUpdatedStamp:2018-04-09 01:02:08.683, jobRunId:100516]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:02:08.685][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:02:08.685][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:02:08.685][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:02:08.685][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:02:46.817][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:02:46.818][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:02:46.819][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:02:46.820][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:02:46.820][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:02:46.821][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:02:46.821][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:02:46.821][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:02:46.821][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:02:46.822][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100517, lastRunTime:2018-04-09 01:02:46.817, lastUpdatedStamp:2018-04-09 01:02:46.817, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:02:46.822][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:02:46.822][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:02:46.822][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:02:46.822][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:02:46.822][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100517 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:02:46.828][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:02:46.829][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:02:46.829][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:02:46.829][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:02:46.829][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:02:46.829][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:02:46.832][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:02:46.839][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:02:46.840][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:02:46.841][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:02:46.827, lastUpdatedStamp:2018-04-09 01:02:46.828, jobRunId:100517]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:02:46.842][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:02:46.842][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:02:46.817-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:02:46.842][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:02:46.842][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:02:46.842][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:02:47.064][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:02:47.065][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:02:47.066][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:02:47.066][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:02:47.067][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:02:47.070][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:02:47.070][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:03:08.078][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:03:08.078][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:03:08.078][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:03:08.080][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:03:08.082][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:03:08.085][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:03:08.085][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:03:08.085][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:03:08.086][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:03:08.755][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:03:08.758][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:03:09.130][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:03:09.132][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:03:09.137][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:03:09.152][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:03:09.153][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:03:09.183][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:03:09.183][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:03:09.184][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:03:09.184][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:03:09.184][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:03:09.190][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:03:09.190][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:03:09.191][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:03:09.191][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:03:09.191][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:03:09.191][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:03:09.191][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:03:09.192][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:03:09.183, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:09.192][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:03:09.192][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:03:09.192][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:03:09.192][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:03:09.194][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:03:09.195][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:03:09.196][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:03:09.183, lastUpdatedStamp:2018-04-09 01:03:09.194, jobRunId:100517]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:09.196][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:03:09.196][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:03:09.196][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:03:09.196][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:03:24.850][INFO ](main) Loading Webapp 'webroot' (Moqui Root Webapp) on ROOT, located at: D:\IDEAWorkSpace\trunk\execwartmp\ROOT\webapp [MoquiContextListener.class]
[16:03:25.216][INFO ](main) Initializing Moqui Framework version 2.1.0
 - runtime directory: D:\IDEAWorkSpace\trunk\runtime
 - runtime config:    D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[16:03:25.771][INFO ](main) Added component tools              at file:D:/IDEAWorkSpace/trunk/runtime/base-component/tools [ExecutionContextFactoryImpl.class]
[16:03:25.786][INFO ](main) Added component webroot            at file:D:/IDEAWorkSpace/trunk/runtime/base-component/webroot [ExecutionContextFactoryImpl.class]
[16:03:25.792][INFO ](main) Added component nacs-access        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-access [ExecutionContextFactoryImpl.class]
[16:03:25.796][INFO ](main) Added component nacs-admin         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-admin [ExecutionContextFactoryImpl.class]
[16:03:25.801][INFO ](main) Added component nacs-be            at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be [ExecutionContextFactoryImpl.class]
[16:03:25.806][INFO ](main) Added component nacs-be-spd        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be-spd [ExecutionContextFactoryImpl.class]
[16:03:25.809][INFO ](main) Added component nacs-channel       at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel [ExecutionContextFactoryImpl.class]
[16:03:25.814][INFO ](main) Added component nacs-channel-unionpay at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel-unionpay [ExecutionContextFactoryImpl.class]
[16:03:25.817][INFO ](main) Added component nacs-check         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-check [ExecutionContextFactoryImpl.class]
[16:03:25.822][INFO ](main) Added component nacs-clear         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-clear [ExecutionContextFactoryImpl.class]
[16:03:25.826][INFO ](main) Added component nacs-main          at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-main [ExecutionContextFactoryImpl.class]
[16:03:25.829][INFO ](main) Added component nacs-mrchnt        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-mrchnt [ExecutionContextFactoryImpl.class]
[16:03:25.833][INFO ](main) Added component nacs-route         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-route [ExecutionContextFactoryImpl.class]
[16:03:25.836][INFO ](main) Added component nacs-udm           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-udm [ExecutionContextFactoryImpl.class]
[16:03:25.839][INFO ](main) Added component nacs-usl           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-usl [ExecutionContextFactoryImpl.class]
[16:03:25.840][INFO ](main) Components after depends-on sort: [tools, webroot, nacs-access, nacs-udm, nacs-admin, nacs-be, nacs-be-spd, nacs-channel, nacs-channel-unionpay, nacs-check, nacs-clear, nacs-main, nacs-mrchnt, nacs-route, nacs-usl] [ExecutionContextFactoryImpl.class]
[16:03:25.859][INFO ](main) Merging runtime configuration at D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[16:03:25.934][INFO ](main) Found default_time_zone US/Pacific: sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[16:03:25.935][INFO ](main) Default locale en_US, time zone sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[16:03:26.139][INFO ](main) Initializing worker ThreadPoolExecutor: queue limit 65535, pool-core 4, pool-max 16, pool-alive 60s [ExecutionContextFactoryImpl.class]
[16:03:26.246][INFO ](main) Added JARs from component webroot: [closure-compiler-v20160208.jar, gradle-js-plugin-2.14.1.jar, html2js-0.1.jar] [ExecutionContextFactoryImpl.class]
[16:03:26.301][INFO ](main) Added JARs from component nacs-be-spd: [cxf-2.7.18.jar, cxf-rt-ws-policy-2.7.18.jar, dom4j-1.6.1.jar, nacs-be-spd-1.0.0.jar, wsdl4j-1.6.3.jar] [ExecutionContextFactoryImpl.class]
[16:03:26.336][INFO ](main) Added JARs from component nacs-channel-unionpay: [bcprov-jdk15on-1.54.jar, commons-codec-1.6.jar, commons-io-2.2.jar, commons-lang-2.5.jar, javax.servlet-api-3.1.0.jar, log4j-1.2.17.jar, nacs-channel-unionpay-1.0.0.jar, nacs-unionpay-1.0.0.jar, slf4j-api-1.5.11.jar, slf4j-log4j12-1.5.11.jar, upacp_sdk-1.1.0-20151216.jar] [ExecutionContextFactoryImpl.class]
[16:03:26.338][INFO ](main) Added JARs from component nacs-check: [nacs-check-1.0.0.jar] [ExecutionContextFactoryImpl.class]
[16:03:26.348][INFO ](main) Added JARs from component nacs-usl: [commons-net-1.4.1.jar, javolution-5.4.3.jar] [ExecutionContextFactoryImpl.class]
[16:03:26.349][INFO ](main) Initialized ClassLoader in 192ms [ExecutionContextFactoryImpl.class]
[16:03:26.355][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.JackrabbitRunToolFactory [ExecutionContextFactoryImpl.class]
[16:03:26.356][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.SubEthaSmtpToolFactory [ExecutionContextFactoryImpl.class]
[16:03:26.371][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.MCacheToolFactory [ExecutionContextFactoryImpl.class]
[16:03:26.394][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.H2ServerToolFactory [ExecutionContextFactoryImpl.class]
[16:03:26.436][INFO ](main) Cache Facade initialized [ExecutionContextFactoryImpl.class]
[16:03:26.757][INFO ](main) Resource Facade initialized [ExecutionContextFactoryImpl.class]
[16:03:26.820][INFO ](main) Bitronix Transaction Manager version 3.0.0-SNAPSHOT [BitronixTransactionManager.class]
[16:03:26.830][WARN ](main) Cannot get the unique server ID for this JVM ('bitronix.tm.serverId'). Make sure it is configured and you use only US-ASCII characters. Will use IP address instead (unsafe for production usage!). [Configuration.class]
[16:03:26.834][INFO ](main) JVM unique ID: <192.168.191.1> - Using this server ID to ensure uniqueness of transaction IDs across the network. [Configuration.class]
[16:03:26.876][WARN ](main) active log file is unclean, did you call BitronixTransactionManager.shutdown() at the end of the last run? [DiskJournal.class]
[16:03:27.007][INFO ](main) recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 0 resource(s) [] (restricted to serverId '192.168.191.1') [Recoverer.class]
[16:03:27.034][INFO ](main) Transaction Facade initialized [ExecutionContextFactoryImpl.class]
[16:03:27.149][INFO ](main) Database time zone is sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [EntityFacadeImpl.class]
[16:03:27.340][INFO ](main) Initializing DataSource transactional_DS (h2) with properties: [user:sa, url:jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui;lock_timeout=30000] [TransactionInternalBitronix.class]
[16:03:28.666][INFO ](main) incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [transactional_DS] (restricted to serverId '192.168.191.1') [IncrementalRecoverer.class]
[16:03:28.668][INFO ](main) Init DataSource transactional_DS (h2) isolation READ_COMMITTED (2), max pool 50 [TransactionInternalBitronix.class]
[16:03:28.697][INFO ](main) Loaded 0 Entity ECA rules from 0 .eecas.xml files [EntityFacadeImpl.class]
[16:03:28.715][INFO ](main) Entity Cache initialized, distributed cache invalidate enabled: false [EntityCache.class]
[16:03:28.751][INFO ](main) Entity Facade initialized [ExecutionContextFactoryImpl.class]
[16:03:28.813][INFO ](main) Loaded 0 Service ECA rules from 0 .secas.xml files [ServiceFacadeImpl.class]
[16:03:28.981][INFO ](main) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[16:03:28.995][INFO ](main) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[16:03:28.998][INFO ](main) Loaded REST API files, 2 roots, in 166ms [RestApi.class]
[16:03:29.068][INFO ](main) No distributed-factory specified, distributed async service calls will be run local only [ServiceFacadeImpl.class]
[16:03:29.111][INFO ](main) Service Facade initialized [ExecutionContextFactoryImpl.class]
[16:03:29.132][INFO ](main) Screen Facade initialized [ExecutionContextFactoryImpl.class]
[16:03:29.133][INFO ](main) Loading entity definitions [ExecutionContextFactoryImpl.class]
[16:03:29.256][INFO ](main) Found entities in 20 files in 123ms [EntityFacadeImpl.class]
[16:03:29.561][INFO ](main) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[16:03:30.185][INFO ](main) Loaded 199 entity definitions in 1052ms [ExecutionContextFactoryImpl.class]
[16:03:30.186][INFO ](main) Initializing ToolFactory: MCache [ExecutionContextFactoryImpl.class]
[16:03:30.186][INFO ](main) Initializing ToolFactory: H2Server [ExecutionContextFactoryImpl.class]
[16:03:30.263][INFO ](main) Started H2 remote server on port 9092 status: TCP server running at tcp://192.168.191.1:9092 (only local connections) [H2ServerToolFactory.class]
[16:03:30.263][INFO ](main) H2 args: [-tcpPort, 9092, -ifExists, -baseDir, D:\IDEAWorkSpace\trunk\runtime/db/h2] [H2ServerToolFactory.class]
[16:03:30.267][INFO ](main) Found shutdown hook: org.eclipse.jetty.util.thread.ShutdownThread Thread[Thread-0,5,main] [H2ServerToolFactory.class]
[16:03:30.268][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-12,5,main] [H2ServerToolFactory.class]
[16:03:30.269][INFO ](main) Found shutdown hook: java.lang.Thread Thread[pool-1-thread-1,5,main] [H2ServerToolFactory.class]
[16:03:30.270][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-13,5,main] [H2ServerToolFactory.class]
[16:03:30.270][INFO ](main) Found shutdown hook: java.util.logging.LogManager$Cleaner Thread[Thread-9,5,main] [H2ServerToolFactory.class]
[16:03:30.619][INFO ](main) Execution Context Factory initialized in 5.583 seconds [ExecutionContextFactoryImpl.class]
[16:03:30.637][DEBUG](main) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM ENUMERATION [EntityFindBuilder.class]
[16:03:30.641][DEBUG](main) Executed query with SQL [SELECT COUNT(*)  FROM ENUMERATION] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:03:30.648][INFO ](main) Found 289 Enumeration records, NOT loading empty-db-load data types (all) [ExecutionContextFactoryImpl.class]
[16:03:30.745][INFO ](main) Initializing webapp webroot http://null:null https://null:null https enabled? false [ExecutionContextFactoryImpl.class]
[16:03:30.761][INFO ](main) Added webapp listener org.moqui.impl.webapp.MoquiSessionListener [MoquiContextListener.class]
[16:03:30.828][INFO ](main) Added servlet MoquiServlet on: [/*] [MoquiContextListener.class]
[16:03:30.838][INFO ](main) Added servlet MoquiFopServlet on: [/fop/*] [MoquiContextListener.class]
[16:03:30.848][INFO ](main) Added servlet H2Console on: [/h2/*] [MoquiContextListener.class]
[16:03:30.848][INFO ](main) Found WebSocket ServerContainer org.eclipse.jetty.websocket.jsr356.server.ServerContainer [MoquiContextListener.class]
[16:03:30.870][INFO ](main) Added WebSocket endpoint /notws for class org.moqui.impl.webapp.NotificationEndpoint [MoquiContextListener.class]
[16:03:30.870][INFO ](main) Moqui Framework initialized in 6.054 seconds [MoquiContextListener.class]
[16:03:30.908][INFO ](main) MoquiServlet initialized for webapp webroot [MoquiServlet.class]
[16:03:39.643][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.672][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.719][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.721][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.722][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.725][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.743][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.744][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.745][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.746][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.747][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.748][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.759][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.761][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.762][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.763][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.764][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.765][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.770][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.773][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.774][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.774][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.777][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.778][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.785][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.786][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.788][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.788][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.789][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.791][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.796][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.797][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.797][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.798][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.799][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.800][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.808][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.809][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.810][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.811][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.812][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:39.813][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.820][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:39.821][DEBUG](qtp379110473-16) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.863][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:39.864][DEBUG](qtp379110473-16) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/vapps.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.873][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ? [EntityFindBuilder.class]
[16:03:39.874][DEBUG](qtp379110473-16) Executed query with SQL [SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ?] and parameters [[visitorId:100101]] in [0] seconds [EntityQueryBuilder.class]
[16:03:39.874][INFO ](qtp379110473-16) Got invalid visitorId [100101] in moqui.visitor cookie in session [node0bjlf0js7erd5vzsdlmej7hh10], throwing away and making a new one [UserFacadeImpl.class]
[16:03:39.925][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[16:03:39.934][DEBUG](qtp379110473-16) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ALL_USERS]] in [0] seconds [EntityQueryBuilder.class]
[16:03:40.014][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:03:40.018][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.Visitor]] in [0] seconds [EntityQueryBuilder.class]
[16:03:40.019][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[16:03:40.019][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[16:03:40.019][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[16:03:40.027][INFO ](RequireNewTx) Built entity.data.feed.info cache for in 7ms, entries for 0 entities [EntityDataFeed.class]
[16:03:40.028][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[16:03:40.028][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:03:40.028][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:03:40.028][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[16:03:40.028][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[16:03:40.029][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[16:03:40.029][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[16:03:40.029][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[16:03:40.032][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[16:03:40.038][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100201, lastUpdatedStamp:2018-04-09 01:03:40.001, seqName:moqui.server.Visitor]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:40.038][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[16:03:40.039][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[16:03:40.039][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[16:03:40.039][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[16:03:40.055][DEBUG](qtp379110473-16) making crud PreparedStatement for SQL: INSERT INTO VISITOR (VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:03:40.056][DEBUG](qtp379110473-16) Executed update with SQL [INSERT INTO VISITOR (VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:40.058][INFO ](qtp379110473-16) Created new Visitor with ID [100101] in session [node0bjlf0js7erd5vzsdlmej7hh10] [UserFacadeImpl.class]
[16:03:40.083][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:03:40.085][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.Visit]] in [0] seconds [EntityQueryBuilder.class]
[16:03:40.085][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[16:03:40.093][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[16:03:40.094][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[16:03:40.095][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[16:03:40.095][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:03:40.095][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:03:40.096][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[16:03:40.097][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[16:03:40.097][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[16:03:40.097][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[16:03:40.097][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[16:03:40.097][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[16:03:40.099][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100605, lastUpdatedStamp:2018-04-09 01:03:40.083, seqName:moqui.server.Visit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:40.099][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[16:03:40.100][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[16:03:40.100][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[16:03:40.100][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[16:03:40.134][DEBUG](qtp379110473-16) making crud PreparedStatement for SQL: INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:40.186][DEBUG](qtp379110473-16) Executed update with SQL [INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:40.194][INFO ](qtp379110473-16) Created new Visit with ID [100505] in session [node0bjlf0js7erd5vzsdlmej7hh10] [UserFacadeImpl.class]
[16:03:41.083][INFO ](qtp379110473-16) Redirecting to /Login instead of rendering [vapps, nacs-admin, Channel, ChannelList] [ScreenRenderImpl.class]
[16:03:41.094][INFO ](qtp379110473-16) vapps/nacs-admin/Channel/ChannelList [] in 866ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:03:41.153][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:41.154][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/Login.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.646][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.647][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.648][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.649][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.650][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.651][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.656][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.657][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.657][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.658][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.659][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.659][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.688][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[16:03:41.694][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_STYLESHEET]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.744][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[16:03:41.745][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SCRIPT]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.746][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[16:03:41.750][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SHORTCUT_ICON]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.753][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[16:03:41.756][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_BODY_CLASS]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.830][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.832][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.832][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.833][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.836][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.836][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.837][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.838][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.839][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.840][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.840][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.841][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.917][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT [EntityFindBuilder.class]
[16:03:41.918][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.928][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.928][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.929][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.929][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.930][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.931][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.951][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.952][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.953][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.953][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.954][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.955][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.959][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.961][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.961][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.962][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.963][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.964][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.965][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.966][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.966][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.967][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.992][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.993][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.994][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.995][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.996][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.996][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.997][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:41.997][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.999][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.000][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.001][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.001][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.003][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.004][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.005][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.006][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.007][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.011][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.013][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.016][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.018][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.019][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.020][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.020][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.021][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.022][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.023][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.024][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.025][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.025][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.026][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.027][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.028][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.028][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.029][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.030][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.035][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.035][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.036][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.037][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.038][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.038][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.039][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.040][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.041][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.041][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.042][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.042][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.043][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:42.044][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.120][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[16:03:42.131][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.134][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[16:03:42.134][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[16:03:42.148][INFO ](qtp379110473-11) Login [] in 999ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:03:45.285][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:03:45.289][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHit]] in [0] seconds [EntityQueryBuilder.class]
[16:03:45.289][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[16:03:45.289][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[16:03:45.289][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[16:03:45.290][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[16:03:45.290][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:03:45.290][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:03:45.290][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[16:03:45.290][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[16:03:45.290][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[16:03:45.290][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[16:03:45.291][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[16:03:45.291][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[16:03:45.293][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100605, lastUpdatedStamp:2018-04-09 01:03:45.285, seqName:moqui.server.ArtifactHit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.294][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[16:03:45.294][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[16:03:45.295][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[16:03:45.295][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[16:03:45.306][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.308][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.308][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.310][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.310][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.312][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.312][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.313][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.313][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.314][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.315][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.326][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.327][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.328][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.328][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.329][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.329][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.330][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.331][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.337][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.345][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.362][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.363][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.364][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.364][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.365][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:45.366][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:45.366][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:53.700][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ? [EntityFindBuilder.class]
[16:03:53.701][DEBUG](qtp379110473-13) Executed query with SQL [SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ?] and parameters [[username:admin]] in [0] seconds [EntityQueryBuilder.class]
[16:03:53.741][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ? [EntityFindBuilder.class]
[16:03:53.742][DEBUG](qtp379110473-13) Executed query with SQL [SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ?] and parameters [[visitId:100505]] in [0] seconds [EntityQueryBuilder.class]
[16:03:53.743][INFO ](qtp379110473-13) 更 [EntityValueBase.class]
[16:03:53.743][INFO ](qtp379110473-13) 更1 [EntityValueBase.class]
[16:03:53.743][INFO ](qtp379110473-13) 更2 [EntityValueBase.class]
[16:03:53.743][INFO ](qtp379110473-13) 更4 [EntityValueBase.class]
[16:03:53.744][INFO ](qtp379110473-13) 更5 [EntityValueBase.class]
[16:03:53.744][INFO ](qtp379110473-13) 更5.5 [EntityValueBase.class]
[16:03:53.744][INFO ](qtp379110473-13) 更9 [EntityValueBase.class]
[16:03:53.744][INFO ](qtp379110473-13) 更10 [EntityValueBase.class]
[16:03:53.744][INFO ](qtp379110473-13) 更11 [EntityValueBase.class]
[16:03:53.745][INFO ](qtp379110473-13) 打SQL！ [EntityValueImpl.class]
[16:03:53.745][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: UPDATE VISIT SET USER_ID=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:03:53.757][DEBUG](qtp379110473-13) Executed update with SQL [UPDATE VISIT SET USER_ID=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[userId:EP_ADMIN, lastUpdatedStamp:2018-04-09 01:03:53.614, visitId:100505]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:53.758][INFO ](qtp379110473-13) 更12 [EntityValueBase.class]
[16:03:53.758][INFO ](qtp379110473-13) 更13 [EntityValueBase.class]
[16:03:53.758][INFO ](qtp379110473-13) 更7 [EntityValueBase.class]
[16:03:53.758][INFO ](qtp379110473-13) 更8 [EntityValueBase.class]
[16:03:53.888][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT USER_ID, FROM_DATE, THRU_DATE, VISIT_ID, PASSWORD_USED, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP FROM USER_LOGIN_HISTORY WHERE (FROM_DATE = ? AND USER_ID = ?) [EntityFindBuilder.class]
[16:03:53.890][DEBUG](qtp379110473-13) Executed query with SQL [SELECT USER_ID, FROM_DATE, THRU_DATE, VISIT_ID, PASSWORD_USED, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP FROM USER_LOGIN_HISTORY WHERE (FROM_DATE = ? AND USER_ID = ?)] and parameters [[fromDate:2018-04-09 01:03:53.884, userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:53.899][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO USER_LOGIN_HISTORY (USER_ID, FROM_DATE, VISIT_ID, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:53.903][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO USER_LOGIN_HISTORY (USER_ID, FROM_DATE, VISIT_ID, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:53.921][INFO ](qtp379110473-13) Transition Login/login in 344ms, redirecting to screen path URL: http://localhost:8080/vapps/nacs-admin/Channel/ChannelList [ScreenRenderImpl.class]
[16:03:54.024][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ? [EntityFindBuilder.class]
[16:03:54.026][DEBUG](qtp379110473-14) Executed query with SQL [SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ?] and parameters [[userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.028][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[16:03:54.047][DEBUG](qtp379110473-14) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.264][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.264][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.265][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.266][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.266][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.267][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Applications, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.268][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.268][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.269][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.270][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.271][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.272][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.274][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ? [EntityFindBuilder.class]
[16:03:54.276][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ?] and parameters [[visitId:100505]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.318][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.319][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.319][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.323][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.324][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.324][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.326][INFO ](MoquiWorker-1) IP address not a IPv4 address [MessageFacadeImpl.class]
[16:03:54.378][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[16:03:54.380][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_NAVBAR_COMP]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.380][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[16:03:54.381][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_LOGO]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.384][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[16:03:54.385][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_TITLE]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.391][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.392][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.393][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.393][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.394][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.394][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.395][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.396][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.396][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.397][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.397][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:54.398][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:54.406][INFO ](qtp379110473-14) vapps/nacs-admin/Channel/ChannelList [] in 386ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:03:55.304][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:55.339][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:55.340][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:55.341][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:55.342][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:55.342][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:55.343][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:55.346][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:55.346][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:55.361][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:55.361][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:55.362][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:55.363][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:03:55.365][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:03:55.371][INFO ](qtp379110473-17) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:60387 [NotificationEndpoint.class]
[16:03:55.395][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.395][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/apps.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.451][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.453][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.454][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.455][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.455][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.456][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.486][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.488][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Security, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.496][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.496][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.503][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.504][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.505][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.506][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.506][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.507][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.516][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.517][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.517][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.518][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.518][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.519][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.520][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.520][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Channel.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.526][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.527][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelList.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.609][INFO ](qtp379110473-13) Created 257 automatic reverse relationships [EntityFacadeImpl.class]
[16:03:55.694][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.694][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.696][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.697][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Charts.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.766][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.767][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:NacsAdmin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.801][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.802][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.802][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.803][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.803][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.803][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.821][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.822][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.823][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.823][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.824][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.824][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.919][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.920][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Dashboard, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.920][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.921][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.923][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.924][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.926][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.926][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:System, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.944][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:55.945][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Artifact Stats, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.993][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.994][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:55.996][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:55.998][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.005][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.006][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.008][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.008][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.009][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.009][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.010][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.010][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.036][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.037][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.060][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.061][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.066][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.066][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.067][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.068][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.070][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.071][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount/UserAccountList.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.077][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.078][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.079][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.079][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.080][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.080][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.105][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.106][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.107][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.108][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.109][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.110][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.115][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.116][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.117][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.118][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.118][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.119][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.119][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.120][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Mrchnt.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.130][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.131][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-mrchnt/screen/NacsMrchnt/MrchntList.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.227][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.227][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.228][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.228][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.229][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.229][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.230][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.230][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.231][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.231][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.232][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.232][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.245][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.249][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.253][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.254][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.254][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.255][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.263][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.263][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.264][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.265][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.266][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.267][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.268][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.268][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Route.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.273][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.274][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-route/screen/NacsRoute/RouteList.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.297][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.298][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.299][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.300][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.301][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.301][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.309][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.310][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.311][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.311][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.312][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.313][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.319][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.319][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.320][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.320][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.321][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.321][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.325][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.325][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.325][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.326][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.326][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.327][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.329][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.330][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.330][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.331][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.331][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.332][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.869][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.869][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Check.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.877][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.877][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-check/screen/NacsCheck/ChannelCheckList.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.880][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.882][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.883][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.884][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.884][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.885][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.892][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.892][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.893][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.894][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.897][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.898][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.902][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.903][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.904][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.904][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.905][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.905][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.906][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.906][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Clear.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.910][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.911][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-clear/screen/NacsClear/ChannelClearList.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.913][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.913][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.914][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.914][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.915][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.915][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.980][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.981][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.984][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:56.985][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/TxItem.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.993][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.994][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.995][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.995][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:56.996][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:56.997][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.012][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:57.012][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.014][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:57.015][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System/ServiceJob.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.025][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:57.025][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.026][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:57.026][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.027][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:57.027][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.028][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:57.029][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Nacs Admin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.429][INFO ](qtp379110473-15) apps/nacs-admin [] in 243ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:03:57.499][INFO ](qtp379110473-14) apps/nacs-admin/Channel [] in 16ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:03:57.845][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:03:57.847][DEBUG](qtp379110473-17) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.849][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:03:57.849][DEBUG](qtp379110473-17) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.897][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[16:03:57.911][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:OpnFlg]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.913][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST [EntityFindBuilder.class]
[16:03:57.914][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST] and parameters [[enumTypeId:VerifiedFlg]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.915][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:57.916][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.916][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:57.917][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:57.917][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:57.917][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.054][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.055][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.056][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.057][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.079][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.080][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.080][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.081][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.081][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.082][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.100][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.102][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.102][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.103][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.103][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.103][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.105][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.106][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.106][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.107][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.107][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.108][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.109][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.109][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.110][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.110][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.110][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.117][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.172][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.172][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.173][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.173][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.174][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.174][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.175][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.175][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.175][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.176][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.176][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.177][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.192][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.193][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.193][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.194][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.194][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.194][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.210][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.210][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.211][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.212][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.212][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.213][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.213][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.214][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.215][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.215][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.215][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.216][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.232][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.233][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行开启时间, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.233][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.233][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行开启时间, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.234][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.234][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行开启时间, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.236][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.237][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.238][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.238][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.238][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.239][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.241][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.241][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行关闭时间, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.242][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.242][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行关闭时间, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.243][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.243][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行关闭时间, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.246][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.247][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约验证标志, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.247][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.247][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约验证标志, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.248][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.248][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约验证标志, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.289][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.290][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NON-VERIFIED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.291][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.291][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NON-VERIFIED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.292][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.292][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NON-VERIFIED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.293][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.293][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:非验证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.293][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.294][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:非验证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.294][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.294][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:非验证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.296][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.296][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:VERIFIED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.297][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.297][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:VERIFIED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.297][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.298][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:VERIFIED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.298][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.298][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:验证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.300][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.300][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:验证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.301][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.301][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:验证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.304][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.305][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.306][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.306][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.307][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.307][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.308][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.308][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.308][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.309][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.405][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.406][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.406][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.407][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.407][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.407][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.440][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:03:58.441][DEBUG](qtp379110473-17) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelDetail.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.475][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.476][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Update, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.476][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.490][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Update, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.491][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.496][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.496][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.497][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.497][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:03:58.497][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:03:58.536][INFO ](qtp379110473-17) apps/nacs-admin/Channel/ChannelList [] in 967ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:04:00.281][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:00.281][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:00.282][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:00.282][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:00.283][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:00.283][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:00.284][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:00.284][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:10.238][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.239][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.242][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.242][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.246][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.246][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.246][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.247][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.250][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.251][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.251][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.252][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.255][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.256][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.256][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.273][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.275][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.276][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.276][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.277][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.279][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.279][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.280][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:10.280][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.522][INFO ](qtp379110473-13) apps/nacs-admin [] in 286ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:04:10.739][INFO ](qtp379110473-15) apps/nacs-admin/Channel [] in 6ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:04:10.789][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:04:10.789][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.790][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:04:10.791][DEBUG](qtp379110473-14) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:04:10.911][INFO ](qtp379110473-14) apps/nacs-admin/Channel/ChannelList [] in 126ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:04:15.282][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:15.283][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:15.284][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:15.285][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:15.285][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:15.286][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:32.511][INFO ](qtp379110473-15) apps/nacs-admin [channelNm:中国银联, channelNo:10001, channelSeqId:100004] in 134ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:04:32.638][INFO ](qtp379110473-14) apps/nacs-admin/Channel [channelNm:中国银联, channelNo:10001, channelSeqId:100004] in 3ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:04:33.114][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, SINGLETRAN_LIMIT, SINGL_TODAY_LIMIT, SINGL_TODAY_SUM, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_QUOTA WHERE CHANNEL_SEQ_ID = ? [EntityFindBuilder.class]
[16:04:33.115][DEBUG](qtp379110473-17) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, SINGLETRAN_LIMIT, SINGL_TODAY_LIMIT, SINGL_TODAY_SUM, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_QUOTA WHERE CHANNEL_SEQ_ID = ?] and parameters [[channelSeqId:100004]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.117][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[16:04:33.119][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:TrxCtgy]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.125][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL [EntityFindBuilder.class]
[16:04:33.125][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.132][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID = ? [EntityFindBuilder.class]
[16:04:33.133][DEBUG](qtp379110473-17) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID = ?] and parameters [[channelSeqId:100004]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.134][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[16:04:33.159][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:FeeChargeMode]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.167][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, BIZ_TP, SUPPORT_FLG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_BUSINESS WHERE CHANNEL_SEQ_ID = ? ORDER BY 1 OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:04:33.168][DEBUG](qtp379110473-17) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, BIZ_TP, SUPPORT_FLG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_BUSINESS WHERE CHANNEL_SEQ_ID = ? ORDER BY 1 OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[channelSeqId:100004]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.169][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL_BUSINESS WHERE CHANNEL_SEQ_ID = ? [EntityFindBuilder.class]
[16:04:33.170][DEBUG](qtp379110473-17) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL_BUSINESS WHERE CHANNEL_SEQ_ID = ?] and parameters [[channelSeqId:100004]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.171][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL [EntityFindBuilder.class]
[16:04:33.172][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.174][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[16:04:33.175][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:BizTp]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.176][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST [EntityFindBuilder.class]
[16:04:33.177][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST] and parameters [[enumTypeId:SupportFlg]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.201][INFO ](qtp379110473-17) channelSeqId====100004 [LoggerFacadeImpl.class]
[16:04:33.217][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.217][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.218][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.218][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.218][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.219][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.220][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.221][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道名称, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.221][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.224][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道名称, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.225][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.225][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道名称, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.227][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.228][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道限额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.228][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.228][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道限额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.229][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.229][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道限额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.248][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.249][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易类别, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.249][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.250][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易类别, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.250][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.251][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易类别, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.291][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.292][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000501, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.292][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.293][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000501, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.293][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.294][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000501, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.294][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.294][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代收, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.295][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.295][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代收, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.296][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.296][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代收, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.297][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.297][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000401, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.297][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.298][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000401, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.300][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.301][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000401, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.301][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.302][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代付, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.302][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.302][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代付, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.303][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.303][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代付, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.304][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.305][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔交易限额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.305][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.305][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔交易限额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.306][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.306][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔交易限额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.307][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.308][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:当日累计最大限额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.308][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.309][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:当日累计最大限额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.309][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.309][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:当日累计最大限额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.314][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.315][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:当日累计最大笔数, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.315][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.316][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:当日累计最大笔数, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.317][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.317][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:当日累计最大笔数, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.344][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ? [EntityFindBuilder.class]
[16:04:33.350][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ?] and parameters [[enumId:000401]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.356][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ? [EntityFindBuilder.class]
[16:04:33.356][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ?] and parameters [[enumId:000501]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.362][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.362][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道手续费, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.363][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.363][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道手续费, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.363][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.364][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道手续费, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.383][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.384][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.384][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.384][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.385][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.385][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.399][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.400][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.400][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.402][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.402][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.403][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.403][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.404][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.404][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.404][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.405][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.405][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.406][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.406][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.406][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.407][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.407][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.407][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.408][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.408][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.409][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.409][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.409][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.410][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.410][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.410][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.411][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.411][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.412][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.412][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.412][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.412][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.413][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.413][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.414][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.414][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.415][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.415][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:金额上限, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.416][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.416][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:金额上限, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.416][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.416][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:金额上限, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.418][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.419][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:金额下限, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.420][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.422][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:金额下限, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.422][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.423][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:金额下限, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.426][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.427][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.428][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.428][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.429][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.429][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.493][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.493][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道业务品种, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.494][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.494][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道业务品种, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.513][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.518][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道业务品种, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.579][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.579][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:业务品种, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.580][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.580][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:业务品种, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.582][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.584][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:业务品种, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.601][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.602][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支持标志, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.602][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.603][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支持标志, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.603][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.604][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支持标志, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.659][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.659][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NO_SUPPORT, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.660][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.660][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NO_SUPPORT, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.660][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.661][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NO_SUPPORT, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.661][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.662][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:不支持, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.662][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.663][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:不支持, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.663][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.663][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:不支持, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.664][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.664][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:SUPPORT, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.667][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.667][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:SUPPORT, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.668][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.668][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:SUPPORT, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.668][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.669][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支持, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.669][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.669][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支持, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.670][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.671][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支持, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.703][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ? [EntityFindBuilder.class]
[16:04:33.704][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ?] and parameters [[enumId:0005]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.720][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.721][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0005, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.722][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.722][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0005, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.722][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.723][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0005, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.724][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.727][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一代发, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.728][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.728][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一代发, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.728][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.729][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一代发, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.732][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ? [EntityFindBuilder.class]
[16:04:33.735][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ?] and parameters [[enumId:0006]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.737][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.737][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0006, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.738][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.738][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0006, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.739][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.739][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0006, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.739][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.740][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一查询, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.740][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.740][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一查询, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.741][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.741][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一查询, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.744][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ? [EntityFindBuilder.class]
[16:04:33.744][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ?] and parameters [[enumId:0002]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.748][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.748][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0002, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.748][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.749][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0002, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.749][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.750][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0002, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.750][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.750][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一客户签约, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.750][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.751][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一客户签约, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.751][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.751][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一客户签约, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.755][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ? [EntityFindBuilder.class]
[16:04:33.755][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ?] and parameters [[enumId:0004]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.756][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.756][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0004, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.757][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.757][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0004, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.758][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.758][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0004, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.758][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.759][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一代扣, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.759][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.760][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一代扣, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.760][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:04:33.761][DEBUG](qtp379110473-17) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一代扣, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:04:33.771][INFO ](qtp379110473-17) apps/nacs-admin/Channel/ChannelDetail [channelNm:中国银联, channelNo:10001, channelSeqId:100004] in 1093ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:04:35.282][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:35.290][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:35.290][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:35.292][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:35.293][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:35.294][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:04:35.294][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:04:35.298][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:05:29.161][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL [EntityFindBuilder.class]
[16:05:29.163][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:05:29.167][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:05:29.168][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:05:29.187][TRACE](pool-2-thread-3) processing "0/3" at 2018-04-09T01:05:29.187-07:00[US/Pacific] [EveryFieldValueGenerator.class]
[16:05:29.191][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:05:29.192][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.service.job.ServiceJobRun]] in [0] seconds [EntityQueryBuilder.class]
[16:05:29.192][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[16:05:29.192][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[16:05:29.192][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[16:05:29.192][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[16:05:29.192][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:05:29.193][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:05:29.193][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[16:05:29.193][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[16:05:29.193][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[16:05:29.193][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[16:05:29.193][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[16:05:29.193][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[16:05:29.194][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100611, lastUpdatedStamp:2018-04-09 01:05:29.19, seqName:moqui.service.job.ServiceJobRun]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:05:29.194][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[16:05:29.194][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[16:05:29.194][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[16:05:29.194][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[16:05:29.199][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:05:29.200][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:05:29.200][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:05:29.200][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:05:29.200][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:05:29.201][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:05:29.203][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:05:29.203][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100561, lastRunTime:2018-04-09 01:05:29.138, lastUpdatedStamp:2018-04-09 01:05:29.164, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:05:29.203][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:05:29.203][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:05:29.203][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:05:29.204][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:05:29.204][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100561 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:03-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:05:29.222][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ? [EntityFindBuilder.class]
[16:05:29.222][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ?] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:05:29.243][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:05:29.243][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:05:29.244][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:05:29.269][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:05:29.273][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:05:29.244][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:05:29.274][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:05:29.274][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:05:29.276][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:05:29.138-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:05:29.282][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:05:29.242, lastUpdatedStamp:2018-04-09 01:05:29.243, jobRunId:100561]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:05:29.282][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:05:29.282][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:05:29.282][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:05:29.282][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:05:29.445][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:05:29.448][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:05:29.448][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:05:29.457][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:05:29.458][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:05:29.504][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:05:29.506][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:05:50.501][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:05:50.501][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:05:50.510][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:05:50.521][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:05:50.526][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:05:50.546][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:05:50.546][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:05:50.548][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:05:50.549][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:05:51.120][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:05:51.136][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:05:51.168][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:05:51.177][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:05:51.179][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:05:51.182][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:05:51.183][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:05:51.195][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:05:51.195][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:05:51.195][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:05:51.195][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:05:51.196][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:51.196][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:51.196][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:05:51.196][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:05:51.196][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:05:51.196][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:05:51.196][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:05:51.196][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:05:51.198][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:05:51.195, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:05:51.199][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:05:51.199][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:05:51.199][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:05:51.199][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:05:51.200][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:05:51.201][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:05:51.201][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:05:51.201][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:05:51.201][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:51.201][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:51.202][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:51.202][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:51.202][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:05:51.202][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:05:51.202][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:05:51.202][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:05:51.202][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:05:51.202][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:05:51.203][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:05:51.213][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:05:51.195, lastUpdatedStamp:2018-04-09 01:05:51.2, jobRunId:100561]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:05:51.213][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:05:51.213][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:05:51.213][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:05:51.213][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:06:29.117][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:06:29.118][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:06:29.119][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:06:29.121][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:06:29.121][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:06:29.121][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:06:29.122][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:06:29.122][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:06:29.123][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100562, lastRunTime:2018-04-09 01:06:29.116, lastUpdatedStamp:2018-04-09 01:06:29.116, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:06:29.124][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:06:29.124][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:06:29.124][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:06:29.124][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:06:29.124][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100562 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:06-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:06:29.127][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:06:29.128][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:06:29.129][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:06:29.130][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:06:29.131][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:06:29.116-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:06:29.141][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:06:29.141][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:06:29.141][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:06:29.142][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:06:29.142][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:29.142][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:29.142][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:29.142][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:29.142][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:06:29.148][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:06:29.148][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:06:29.148][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:06:29.148][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:06:29.148][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:06:29.149][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:06:29.138, lastUpdatedStamp:2018-04-09 01:06:29.141, jobRunId:100562]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:06:29.149][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:06:29.149][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:06:29.149][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:06:29.149][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:06:29.314][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:06:29.316][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:06:29.317][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:06:29.321][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:06:29.322][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:06:29.323][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:06:29.324][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:06:50.324][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:06:50.324][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:06:50.324][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:06:50.326][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:06:50.327][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:06:50.337][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:06:50.337][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:06:50.337][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:06:50.341][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:06:50.835][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:06:50.838][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:06:50.860][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:06:50.864][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:06:50.867][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:06:50.872][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:06:50.875][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:06:50.877][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:06:50.877][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:06:50.877][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:06:50.878][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:06:50.878][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:50.878][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:50.878][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:06:50.878][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:06:50.878][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:06:50.878][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:06:50.879][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:06:50.879][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:06:50.881][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:06:50.877, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:06:50.881][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:06:50.881][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:06:50.881][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:06:50.881][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:06:50.883][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:06:50.883][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:06:50.884][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:06:50.884][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:06:50.884][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:50.884][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:50.884][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:50.884][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:50.884][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:06:50.885][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:06:50.885][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:06:50.885][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:06:50.885][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:06:50.885][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:06:50.885][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:06:50.886][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:06:50.876, lastUpdatedStamp:2018-04-09 01:06:50.883, jobRunId:100562]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:06:50.887][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:06:50.887][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:06:50.887][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:06:50.887][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:07:29.116][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:07:29.117][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:07:29.118][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:07:29.118][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:07:29.118][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:07:29.121][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:07:29.121][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:07:29.121][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:07:29.121][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:07:29.121][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:07:29.122][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:07:29.122][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:07:29.122][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:07:29.122][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:07:29.122][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:07:29.122][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:07:29.123][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:07:29.123][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100563, lastRunTime:2018-04-09 01:07:29.116, lastUpdatedStamp:2018-04-09 01:07:29.116, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:07:29.124][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:07:29.124][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:07:29.124][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:07:29.124][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:07:29.125][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100563 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:06-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:29.128][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:07:29.129][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:07:29.129][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:07:29.129][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:07:29.129][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:07:29.129][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:07:29.130][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 01:07:29.127, lastUpdatedStamp:2018-04-09 01:07:29.128, jobRunId:100563]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:07:29.130][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:07:29.130][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:07:29.130][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:07:29.130][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:07:29.147][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:07:29.148][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:07:29.152][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:07:29.153][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:07:29.155][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:07:29.116-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:07:29.213][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:07:29.215][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:07:29.216][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:07:29.217][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:07:29.217][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[16:07:29.219][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:07:29.219][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[16:07:50.212][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[16:07:50.213][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:07:50.213][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[16:07:50.216][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:07:50.217][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:07:50.219][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[16:07:50.219][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:07:50.219][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:07:50.219][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:07:50.739][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:07:50.742][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:07:50.764][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:07:50.768][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:07:50.771][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:07:50.773][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:07:50.773][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:07:50.776][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:07:50.776][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:07:50.777][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:07:50.778][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:07:50.776, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:07:50.778][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:07:50.778][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:07:50.778][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:07:50.778][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:07:50.779][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:07:50.779][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:07:50.779][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:07:50.779][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:07:50.779][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:07:50.780][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:07:50.780][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:07:50.783][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:07:50.775, lastUpdatedStamp:2018-04-09 01:07:50.779, jobRunId:100563]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:07:50.783][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:07:50.783][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:07:50.783][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:07:50.783][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:08:29.119][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:08:29.119][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:08:29.120][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:08:29.120][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:08:29.121][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:08:29.126][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:08:29.127][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100564, lastRunTime:2018-04-09 01:08:29.118, lastUpdatedStamp:2018-04-09 01:08:29.118, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:08:29.127][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:08:29.127][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:08:29.127][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:08:29.127][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:08:29.127][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100564 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:06-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:08:29.166][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:08:29.166][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:08:29.167][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:08:29.167][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:08:29.169][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:08:29.169][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:08:29.174][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 01:08:29.159, lastUpdatedStamp:2018-04-09 01:08:29.166, jobRunId:100564]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:08:29.174][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:08:29.174][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:08:29.174][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:08:29.174][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:08:29.178][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:08:29.187][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:08:29.189][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:08:29.118-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:08:29.301][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:08:29.368][INFO ](MoquiWorker-1) Found entities in 20 files in 67ms [EntityFacadeImpl.class]
[16:08:29.368][INFO ](MoquiWorker-1) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[16:08:29.371][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:08:29.371][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:08:29.372][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:08:29.372][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[16:08:29.374][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:08:29.374][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[16:08:50.377][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[16:08:50.377][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:08:50.377][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[16:08:50.384][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:08:50.385][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:08:50.389][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[16:08:50.389][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:08:50.389][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:08:50.390][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:08:50.702][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:08:50.704][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:08:50.721][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:08:50.727][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:08:50.730][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:08:50.733][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:08:50.733][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:08:50.735][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:08:50.735][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:08:50.735][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:08:50.736][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:08:50.736][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:50.736][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:50.736][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:08:50.736][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:08:50.736][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:08:50.736][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:08:50.736][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:08:50.737][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:08:50.739][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:08:50.735, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:08:50.739][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:08:50.739][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:08:50.740][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:08:50.740][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:08:50.741][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:08:50.741][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:08:50.741][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:08:50.742][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:08:50.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:50.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:50.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:50.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:50.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:08:50.742][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:08:50.742][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:08:50.743][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:08:50.743][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:08:50.743][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:08:50.743][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:08:50.746][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:08:50.735, lastUpdatedStamp:2018-04-09 01:08:50.741, jobRunId:100564]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:08:50.747][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:08:50.747][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:08:50.747][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:08:50.747][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:09:29.119][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:09:29.120][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:09:29.121][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:09:29.127][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:09:29.127][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[16:09:29.128][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[16:09:29.129][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[16:09:29.129][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:09:29.130][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100565, lastRunTime:2018-04-09 01:09:29.119, lastUpdatedStamp:2018-04-09 01:09:29.119, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:09:29.130][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[16:09:29.130][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[16:09:29.130][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[16:09:29.130][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[16:09:29.130][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100565 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:09-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:09:29.132][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:09:29.132][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:09:29.132][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:09:29.132][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:09:29.133][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:09:29.133][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:09:29.134][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:09:29.132, lastUpdatedStamp:2018-04-09 01:09:29.132, jobRunId:100565]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:09:29.134][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:09:29.134][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:09:29.134][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:09:29.134][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:09:29.134][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:09:29.154][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:09:29.159][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:09:29.160][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:09:29.161][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T01:09:29.119-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:09:29.228][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:09:29.229][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:09:29.230][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:09:29.230][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:09:29.231][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:09:29.232][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:09:29.232][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:09:50.238][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:09:50.238][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:09:50.238][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:09:50.240][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:09:50.241][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:09:50.245][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:09:50.245][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:09:50.245][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:09:50.246][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:09:50.709][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:09:50.712][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:09:50.728][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:09:50.730][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:09:50.733][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:09:50.750][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:09:50.751][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:09:50.753][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:09:50.753][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:09:50.753][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:09:50.753][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:09:50.753][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:50.753][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:50.753][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:09:50.754][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:09:50.754][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:09:50.754][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:09:50.754][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:09:50.754][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:09:50.755][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:09:50.753, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:09:50.755][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:09:50.755][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:09:50.755][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:09:50.755][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:09:50.757][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:09:50.758][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:09:50.758][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:09:50.759][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:09:50.753, lastUpdatedStamp:2018-04-09 01:09:50.757, jobRunId:100565]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:09:50.759][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:09:50.759][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:09:50.759][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:09:50.759][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:10:11.642][WARN ](qtp379110473-14) Error in WebSocket Session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:60387, User EP_ADMIN (admin) [MoquiAbstractEndpoint.class]
org.eclipse.jetty.io.EofException: null
	at org.eclipse.jetty.io.ChannelEndPoint.flush(ChannelEndPoint.java:292) ~[moqui_temp7005565050514340974execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:429) ~[moqui_temp7005565050514340974execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:322) [moqui_temp7005565050514340974execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:372) [moqui_temp7005565050514340974execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.FrameFlusher$Flusher.flush(FrameFlusher.java:153) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.FrameFlusher$Flusher.process(FrameFlusher.java:217) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:241) [moqui_temp7986588684636617107execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224) [moqui_temp7986588684636617107execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.FrameFlusher.enqueue(FrameFlusher.java:382) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.outgoingFrame(AbstractWebSocketConnection.java:614) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onConnectionStateChange(AbstractWebSocketConnection.java:473) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.IOState.notifyStateListeners(IOState.java:184) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.IOState.onReadFailure(IOState.java:498) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.readParse(AbstractWebSocketConnection.java:666) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:511) [moqui_temp5689606248398003935execlib_websocket-common-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) [moqui_temp7005565050514340974execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104) [moqui_temp7005565050514340974execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) [moqui_temp7005565050514340974execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) [moqui_temp7986588684636617107execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) [moqui_temp7986588684636617107execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) [moqui_temp7986588684636617107execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243) [moqui_temp7986588684636617107execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) [moqui_temp7986588684636617107execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) [moqui_temp7986588684636617107execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method) ~[?:1.8.0_31]
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55) ~[?:1.8.0_31]
	at sun.nio.ch.IOUtil.write(IOUtil.java:148) ~[?:1.8.0_31]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:503) ~[?:1.8.0_31]
	at org.eclipse.jetty.io.ChannelEndPoint.flush(ChannelEndPoint.java:272) ~[moqui_temp7005565050514340974execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	... 24 more
[16:10:14.280][INFO ](qtp379110473-17) vapps/nacs-admin/Channel/ChannelDetail [channelNm:中国银联, channelNo:10001, channelSeqId:100004] in 276ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:10:15.343][INFO ](qtp379110473-14) Notification subscribe user null topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:60424 [NotificationEndpoint.class]
[16:10:15.733][INFO ](qtp379110473-17) apps/nacs-admin [channelNm:中国银联, channelNo:10001, channelSeqId:100004] in 228ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:10:15.792][INFO ](qtp379110473-15) apps/nacs-admin/Channel [channelNm:中国银联, channelNo:10001, channelSeqId:100004] in 2ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:10:15.837][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL [EntityFindBuilder.class]
[16:10:15.838][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:15.840][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, BIZ_TP, SUPPORT_FLG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_BUSINESS WHERE CHANNEL_SEQ_ID = ? ORDER BY 1 OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:10:15.841][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, BIZ_TP, SUPPORT_FLG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_BUSINESS WHERE CHANNEL_SEQ_ID = ? ORDER BY 1 OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[channelSeqId:100004]] in [0] seconds [EntityQueryBuilder.class]
[16:10:15.842][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL_BUSINESS WHERE CHANNEL_SEQ_ID = ? [EntityFindBuilder.class]
[16:10:15.843][DEBUG](qtp379110473-14) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL_BUSINESS WHERE CHANNEL_SEQ_ID = ?] and parameters [[channelSeqId:100004]] in [0] seconds [EntityQueryBuilder.class]
[16:10:15.843][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL [EntityFindBuilder.class]
[16:10:15.844][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:15.844][INFO ](qtp379110473-14) channelSeqId====100004 [LoggerFacadeImpl.class]
[16:10:16.015][INFO ](qtp379110473-14) apps/nacs-admin/Channel/ChannelDetail [channelNm:中国银联, channelNo:10001, channelSeqId:100004] in 184ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:10:17.127][INFO ](qtp379110473-14) apps/nacs-admin [] in 3ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:10:17.314][INFO ](qtp379110473-13) apps/nacs-admin/Channel [] in 5ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:10:17.356][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:10:17.357][DEBUG](qtp379110473-17) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:17.357][DEBUG](qtp379110473-17) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:10:17.359][DEBUG](qtp379110473-17) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:17.426][INFO ](qtp379110473-17) apps/nacs-admin/Channel/ChannelList [] in 72ms (text/html;charset=utf-8) session node0bjlf0js7erd5vzsdlmej7hh10 [ScreenRenderImpl.class]
[16:10:20.288][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:20.289][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:20.289][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:20.290][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:20.290][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:20.291][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:20.291][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:20.291][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:20.292][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:20.292][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:20.292][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:20.293][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:20.293][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:20.293][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:20.294][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:20.294][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:24.334][DEBUG](qtp379110473-15) making crud PreparedStatement for SQL: INSERT INTO VISITOR (VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:10:24.335][DEBUG](qtp379110473-15) Executed update with SQL [INSERT INTO VISITOR (VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:24.336][INFO ](qtp379110473-15) Created new Visitor with ID [100102] in session [node01m2ad83aau7kyoh2zdbhl4xlx1] [UserFacadeImpl.class]
[16:10:24.337][DEBUG](qtp379110473-15) making crud PreparedStatement for SQL: INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:24.337][DEBUG](qtp379110473-15) Executed update with SQL [INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:24.339][INFO ](qtp379110473-15) Created new Visit with ID [100506] in session [node01m2ad83aau7kyoh2zdbhl4xlx1] [UserFacadeImpl.class]
[16:10:24.340][INFO ](qtp379110473-15) Redirecting to /Login instead of rendering [vapps, nacs-admin, Channel] [ScreenRenderImpl.class]
[16:10:24.340][INFO ](qtp379110473-15) vapps/nacs-admin/Channel [] in 1ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:24.511][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT [EntityFindBuilder.class]
[16:10:24.512][DEBUG](qtp379110473-14) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:24.530][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[16:10:24.531][DEBUG](qtp379110473-14) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[16:10:24.532][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[16:10:24.533][DEBUG](qtp379110473-14) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[16:10:24.536][INFO ](qtp379110473-14) Login [] in 185ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:25.288][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.289][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.290][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.290][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.291][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.291][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.292][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.292][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.293][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.294][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.299][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.300][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.300][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.303][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.303][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.304][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.305][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.306][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.306][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.307][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.307][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.308][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.309][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.310][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.310][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.311][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.311][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:25.312][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:25.475][INFO ](qtp379110473-13) Redirecting to /Login instead of rendering [vapps, nacs-admin, Channel] [ScreenRenderImpl.class]
[16:10:25.475][INFO ](qtp379110473-13) vapps/nacs-admin/Channel [] in 1ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:25.499][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT [EntityFindBuilder.class]
[16:10:25.499][DEBUG](qtp379110473-15) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:25.503][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[16:10:25.504][DEBUG](qtp379110473-15) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[16:10:25.504][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[16:10:25.505][DEBUG](qtp379110473-15) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[16:10:25.507][INFO ](qtp379110473-15) Login [] in 17ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:29.120][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:10:29.121][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:10:29.123][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:10:29.124][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:29.124][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:10:29.124][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:10:29.124][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:10:29.124][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:10:29.124][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:10:29.127][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:10:29.129][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:10:29.129][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:10:29.129][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:10:29.129][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:10:29.129][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:10:29.129][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:10:29.129][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:10:29.129][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100566, lastRunTime:2018-04-09 01:10:29.119, lastUpdatedStamp:2018-04-09 01:10:29.12, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:29.130][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:10:29.130][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:10:29.130][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:10:29.130][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:10:29.130][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100566 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:09-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:10:29.135][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:10:29.135][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:29.135][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:10:29.136][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:10:29.136][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:10:29.136][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:10:29.136][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:10:29.136][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:10:29.137][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:10:29.135, lastUpdatedStamp:2018-04-09 01:10:29.135, jobRunId:100566]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:29.137][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:10:29.137][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:10:29.137][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:10:29.137][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:10:29.138][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:10:29.139][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:10:29.141][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:10:29.119-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:10:29.237][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:10:29.238][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:10:29.240][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:29.240][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:10:29.241][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:10:29.249][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:10:29.249][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:10:29.967][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ? [EntityFindBuilder.class]
[16:10:29.967][DEBUG](qtp379110473-14) Executed query with SQL [SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ?] and parameters [[visitId:100506]] in [0] seconds [EntityQueryBuilder.class]
[16:10:29.968][INFO ](qtp379110473-14) 更 [EntityValueBase.class]
[16:10:29.968][INFO ](qtp379110473-14) 更1 [EntityValueBase.class]
[16:10:29.968][INFO ](qtp379110473-14) 更2 [EntityValueBase.class]
[16:10:29.968][INFO ](qtp379110473-14) 更4 [EntityValueBase.class]
[16:10:29.968][INFO ](qtp379110473-14) 更5 [EntityValueBase.class]
[16:10:29.968][INFO ](qtp379110473-14) 更5.5 [EntityValueBase.class]
[16:10:29.969][INFO ](qtp379110473-14) 更9 [EntityValueBase.class]
[16:10:29.969][INFO ](qtp379110473-14) 更10 [EntityValueBase.class]
[16:10:29.969][INFO ](qtp379110473-14) 更11 [EntityValueBase.class]
[16:10:29.969][INFO ](qtp379110473-14) 打SQL！ [EntityValueImpl.class]
[16:10:29.969][DEBUG](qtp379110473-14) making crud PreparedStatement for SQL: UPDATE VISIT SET USER_ID=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:10:29.971][DEBUG](qtp379110473-14) Executed update with SQL [UPDATE VISIT SET USER_ID=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[userId:EP_ADMIN, lastUpdatedStamp:2018-04-09 01:10:29.966, visitId:100506]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:29.971][INFO ](qtp379110473-14) 更12 [EntityValueBase.class]
[16:10:29.971][INFO ](qtp379110473-14) 更13 [EntityValueBase.class]
[16:10:29.971][INFO ](qtp379110473-14) 更7 [EntityValueBase.class]
[16:10:29.971][INFO ](qtp379110473-14) 更8 [EntityValueBase.class]
[16:10:29.975][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT USER_ID, FROM_DATE, THRU_DATE, VISIT_ID, PASSWORD_USED, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP FROM USER_LOGIN_HISTORY WHERE (FROM_DATE = ? AND USER_ID = ?) [EntityFindBuilder.class]
[16:10:29.976][DEBUG](qtp379110473-14) Executed query with SQL [SELECT USER_ID, FROM_DATE, THRU_DATE, VISIT_ID, PASSWORD_USED, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP FROM USER_LOGIN_HISTORY WHERE (FROM_DATE = ? AND USER_ID = ?)] and parameters [[fromDate:2018-04-09 01:10:29.975, userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[16:10:29.978][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO USER_LOGIN_HISTORY (USER_ID, FROM_DATE, VISIT_ID, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:29.978][INFO ](qtp379110473-14) Transition Login/login in 13ms, redirecting to screen path URL: http://localhost:8080/vapps/nacs-admin/Channel [ScreenRenderImpl.class]
[16:10:30.002][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO USER_LOGIN_HISTORY (USER_ID, FROM_DATE, VISIT_ID, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:30.173][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ? [EntityFindBuilder.class]
[16:10:30.174][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ?] and parameters [[visitId:100506]] in [0] seconds [EntityQueryBuilder.class]
[16:10:30.175][INFO ](MoquiWorker-2) IP address not a IPv4 address [MessageFacadeImpl.class]
[16:10:30.302][INFO ](qtp379110473-16) vapps/nacs-admin/Channel [] in 290ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:30.321][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:30.323][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:31.983][INFO ](qtp379110473-15) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:60435 [NotificationEndpoint.class]
[16:10:32.130][INFO ](qtp379110473-16) apps/nacs-admin [] in 130ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:32.166][INFO ](qtp379110473-14) apps/nacs-admin/Channel [] in 2ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:32.236][DEBUG](qtp379110473-55) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:10:32.237][DEBUG](qtp379110473-55) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:32.237][DEBUG](qtp379110473-55) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:10:32.238][DEBUG](qtp379110473-55) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:32.284][INFO ](qtp379110473-55) apps/nacs-admin/Channel/ChannelList [] in 49ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:35.288][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.289][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.289][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.290][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.290][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.290][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.290][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.291][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.291][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.292][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.292][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.292][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.292][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.293][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.293][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.293][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.294][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.294][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:35.294][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:35.295][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:37.576][INFO ](qtp379110473-13) 更 [EntityValueBase.class]
[16:10:37.576][INFO ](qtp379110473-13) 更1 [EntityValueBase.class]
[16:10:37.576][INFO ](qtp379110473-13) 更2 [EntityValueBase.class]
[16:10:37.576][INFO ](qtp379110473-13) 更3 [EntityValueBase.class]
[16:10:37.577][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL WHERE SEQ_ID=? [EntityQueryBuilder.class]
[16:10:37.577][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL WHERE SEQ_ID=?] and parameters [[seqId:100004]] in [0] seconds [EntityQueryBuilder.class]
[16:10:37.578][INFO ](qtp379110473-13) 更4 [EntityValueBase.class]
[16:10:37.578][INFO ](qtp379110473-13) 更5 [EntityValueBase.class]
[16:10:37.578][INFO ](qtp379110473-13) 更5.5 [EntityValueBase.class]
[16:10:37.578][INFO ](qtp379110473-13) 更9 [EntityValueBase.class]
[16:10:37.578][INFO ](qtp379110473-13) 更10 [EntityValueBase.class]
[16:10:37.579][INFO ](qtp379110473-13) 更11 [EntityValueBase.class]
[16:10:37.580][INFO ](qtp379110473-13) 打SQL！ [EntityValueImpl.class]
[16:10:37.580][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: UPDATE CHANNEL SET SIGN_CHECK_FLAG=?, LAST_UPDATED_STAMP=? WHERE SEQ_ID=? [EntityQueryBuilder.class]
[16:10:37.581][DEBUG](qtp379110473-13) Executed update with SQL [UPDATE CHANNEL SET SIGN_CHECK_FLAG=?, LAST_UPDATED_STAMP=? WHERE SEQ_ID=?] and parameters [[signCheckFlag:VERIFIED, lastUpdatedStamp:2018-04-09 01:10:37.423, seqId:100004]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:37.581][INFO ](qtp379110473-13) 更12 [EntityValueBase.class]
[16:10:37.581][INFO ](qtp379110473-13) 更13 [EntityValueBase.class]
[16:10:37.583][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:10:37.584][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.entity.EntityAuditLog]] in [0] seconds [EntityQueryBuilder.class]
[16:10:37.585][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[16:10:37.585][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[16:10:37.586][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[16:10:37.586][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[16:10:37.586][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101325, lastUpdatedStamp:2018-04-09 01:10:37.583, seqName:moqui.entity.EntityAuditLog]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:37.587][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[16:10:37.587][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[16:10:37.587][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[16:10:37.587][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[16:10:37.593][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, OLD_VALUE_TEXT, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:37.599][DEBUG](qtp379110473-13) Executed update with SQL [INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, OLD_VALUE_TEXT, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:37.599][INFO ](qtp379110473-13) 更7 [EntityValueBase.class]
[16:10:37.599][INFO ](qtp379110473-13) 更8 [EntityValueBase.class]
[16:10:37.630][INFO ](qtp379110473-13) Created 28 automatic reverse relationships [EntityFacadeImpl.class]
[16:10:37.647][INFO ](qtp379110473-13) Transition apps/nacs-admin/Channel/ChannelList/updateChannel in 257ms, JSON redirect to: /apps/nacs-admin/Channel/ChannelList?pageIndex=0 [ScreenRenderImpl.class]
[16:10:37.706][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:10:37.707][DEBUG](qtp379110473-16) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:37.709][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:10:37.709][DEBUG](qtp379110473-16) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:10:37.848][INFO ](qtp379110473-16) apps/nacs-admin/Channel/ChannelList [pageIndex:0] in 144ms (text/html;charset=utf-8) session node01m2ad83aau7kyoh2zdbhl4xlx1 [ScreenRenderImpl.class]
[16:10:40.289][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:40.290][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:40.290][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:40.291][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:40.291][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:40.292][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:40.292][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:40.292][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:50.246][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:10:50.246][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:10:50.247][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:10:50.252][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:10:50.253][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:10:50.258][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:10:50.259][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:10:50.259][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:10:50.265][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:10:50.765][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:10:50.773][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:10:50.825][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:10:50.828][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:10:50.832][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:10:50.834][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:10:50.834][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:10:50.836][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:10:50.836][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:10:50.836][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:10:50.836][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:10:50.836][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:50.836][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:50.836][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:10:50.837][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:10:50.837][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:10:50.837][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:10:50.837][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:10:50.837][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:10:50.838][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:10:50.836, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:50.838][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:10:50.838][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:10:50.838][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:10:50.838][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:10:50.839][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:10:50.839][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:10:50.839][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:10:50.839][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:10:50.839][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:50.839][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:50.840][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:50.855][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:50.855][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:10:50.855][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:10:50.855][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:10:50.855][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:10:50.855][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:10:50.855][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:10:50.855][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:10:50.856][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:10:50.836, lastUpdatedStamp:2018-04-09 01:10:50.839, jobRunId:100566]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:50.856][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:10:50.857][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:10:50.857][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:10:50.857][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:11:29.121][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:11:29.122][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:11:29.122][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:11:29.123][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:11:29.123][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:11:29.124][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:11:29.124][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:11:29.124][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:11:29.124][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100567, lastRunTime:2018-04-09 01:11:29.121, lastUpdatedStamp:2018-04-09 01:11:29.121, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:11:29.124][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:11:29.124][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:11:29.124][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:11:29.124][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:11:29.124][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100567 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:09-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:11:29.133][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:11:29.134][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:11:29.136][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:11:29.136][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:11:29.137][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:11:29.121-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:11:29.138][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:11:29.138][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:11:29.139][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:11:29.140][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:11:29.140][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:11:29.138, lastUpdatedStamp:2018-04-09 01:11:29.138, jobRunId:100567]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:11:29.140][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:11:29.140][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:11:29.140][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:11:29.141][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:11:29.230][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:11:29.232][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:11:29.232][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:11:29.233][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:11:29.233][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:11:29.236][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:11:29.237][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:11:50.239][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:11:50.239][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:11:50.239][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:11:50.241][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:11:50.241][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:11:50.244][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:11:50.244][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:11:50.244][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:11:50.245][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:11:50.555][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:11:50.556][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:11:50.566][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:11:50.569][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:11:50.571][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:11:50.574][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:11:50.574][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:11:50.576][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:11:50.576][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:11:50.576][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:11:50.576][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:11:50.576][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:50.576][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:50.576][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:11:50.577][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:11:50.577][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:11:50.577][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:11:50.577][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:11:50.577][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:11:50.578][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:11:50.576, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:11:50.578][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:11:50.579][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:11:50.579][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:11:50.579][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:11:50.580][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:11:50.581][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:11:50.581][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:11:50.582][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:11:50.576, lastUpdatedStamp:2018-04-09 01:11:50.58, jobRunId:100567]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:11:50.582][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:11:50.582][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:11:50.582][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:11:50.582][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:12:29.122][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:12:29.123][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:12:29.123][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:12:29.124][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:12:29.124][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:12:29.124][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:12:29.127][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100568, lastRunTime:2018-04-09 01:12:29.122, lastUpdatedStamp:2018-04-09 01:12:29.122, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:29.127][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:12:29.127][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:12:29.127][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:12:29.127][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:12:29.128][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100568 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:12-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:12:29.135][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:12:29.135][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:12:29.135][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:12:29.136][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:12:29.137][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:12:29.137][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 01:12:29.135, lastUpdatedStamp:2018-04-09 01:12:29.135, jobRunId:100568]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:29.137][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:12:29.138][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:12:29.138][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:12:29.138][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:12:29.149][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:12:29.150][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:12:29.152][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:12:29.153][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:12:29.154][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:12:29.122-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:12:29.229][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:12:29.231][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:12:29.231][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:12:29.232][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:12:29.232][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[16:12:29.234][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:12:29.234][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[16:12:50.236][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[16:12:50.237][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:12:50.237][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[16:12:50.238][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:12:50.239][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:12:50.242][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[16:12:50.242][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:12:50.242][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:12:50.243][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:12:50.651][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:12:50.653][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:12:50.671][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:12:50.673][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:12:50.675][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:12:50.677][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:12:50.677][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:12:50.679][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:12:50.679][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:12:50.679][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:12:50.679][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:12:50.679][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:50.679][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:50.679][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:12:50.679][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:12:50.682][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:12:50.682][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:12:50.682][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:12:50.683][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:12:50.683][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:12:50.679, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:50.683][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:12:50.683][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:12:50.684][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:12:50.684][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:12:50.685][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:12:50.686][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:12:50.687][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:12:50.679, lastUpdatedStamp:2018-04-09 01:12:50.685, jobRunId:100568]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:50.688][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:12:50.688][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:12:50.688][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:12:50.688][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:13:29.123][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:13:29.124][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:13:29.124][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:13:29.125][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:29.125][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:13:29.125][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:13:29.126][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:13:29.126][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:13:29.126][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:13:29.126][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:13:29.126][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:13:29.126][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:13:29.126][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:13:29.127][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:13:29.127][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:13:29.127][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:13:29.127][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:13:29.128][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100569, lastRunTime:2018-04-09 01:13:29.123, lastUpdatedStamp:2018-04-09 01:13:29.123, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:29.128][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:13:29.128][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:13:29.129][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:13:29.129][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:13:29.129][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100569 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:12-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:13:29.131][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:13:29.132][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:13:29.132][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:13:29.132][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:13:29.132][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:29.132][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:29.132][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:29.133][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:29.133][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:13:29.133][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:13:29.133][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:13:29.133][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:13:29.133][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:13:29.133][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:13:29.134][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 01:13:29.131, lastUpdatedStamp:2018-04-09 01:13:29.131, jobRunId:100569]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:29.134][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:13:29.134][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:13:29.134][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:13:29.134][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:13:29.144][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:13:29.144][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:13:29.145][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:13:29.145][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:13:29.146][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:13:29.123-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:13:29.220][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:13:29.222][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:13:29.222][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:13:29.223][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:13:29.223][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[16:13:29.225][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:13:29.225][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[16:13:50.226][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[16:13:50.226][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:13:50.226][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[16:13:50.232][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:13:50.233][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:13:50.269][INFO ](MoquiWorker-2) Found entities in 20 files in 34ms [EntityFacadeImpl.class]
[16:13:50.269][INFO ](MoquiWorker-2) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[16:13:50.270][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[16:13:50.270][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:13:50.271][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:13:50.272][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:13:50.664][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:13:50.665][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:13:50.677][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:13:50.679][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:13:50.681][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:13:50.684][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:13:50.684][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:13:50.685][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:13:50.685][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:13:50.685][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:13:50.685][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:13:50.686][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:50.686][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:50.686][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:13:50.686][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:13:50.686][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:13:50.686][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:13:50.686][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:13:50.686][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:13:50.687][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:13:50.685, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:50.687][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:13:50.687][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:13:50.687][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:13:50.687][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:13:50.688][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:13:50.689][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:13:50.689][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:13:50.690][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:13:50.685, lastUpdatedStamp:2018-04-09 01:13:50.688, jobRunId:100569]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:50.690][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:13:50.690][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:13:50.690][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:13:50.690][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:14:21.426][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:14:21.427][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:14:21.427][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:14:21.429][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-09 01:14:21.426, lastUpdatedStamp:2018-04-09 01:14:21.426, visitId:100404]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:21.429][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:14:21.429][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:14:21.429][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:14:21.429][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:14:21.430][INFO ](Scheduler-990398217) Closed visit 100404 at 2018-04-09 01:14:21.426 for session node0grr84i0ilt61z9m9ypo2rhsk0 [MoquiSessionListener.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:14:21.431][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:14:21.431][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:14:21.432][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-09 01:14:21.43, lastUpdatedStamp:2018-04-09 01:14:21.431, visitId:100404]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:21.432][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:14:21.432][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:14:21.432][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:14:21.432][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:14:21.433][INFO ](Scheduler-990398217) Closed visit 100404 at 2018-04-09 01:14:21.43 for session node0grr84i0ilt61z9m9ypo2rhsk0 [MoquiSessionListener.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:14:21.442][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:14:21.442][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:14:21.444][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-09 01:14:21.441, lastUpdatedStamp:2018-04-09 01:14:21.442, visitId:100303]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:21.444][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:14:21.444][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:14:21.445][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:14:21.445][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:14:21.450][INFO ](Scheduler-990398217) Closed visit 100303 at 2018-04-09 01:14:21.441 for session node01l1cxjcvqsto5v9j0n263iw7q0 [MoquiSessionListener.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:14:21.452][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:14:21.453][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:14:21.453][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:14:21.453][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-09 01:14:21.452, lastUpdatedStamp:2018-04-09 01:14:21.452, visitId:100303]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:21.453][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:14:21.453][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:14:21.454][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:14:21.454][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:14:21.464][INFO ](Scheduler-990398217) Closed visit 100303 at 2018-04-09 01:14:21.452 for session node01l1cxjcvqsto5v9j0n263iw7q0 [MoquiSessionListener.class]
[16:14:29.124][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:14:29.125][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:14:29.126][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:14:29.126][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:29.126][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:14:29.126][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:14:29.126][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:14:29.127][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:14:29.127][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:14:29.128][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100570, lastRunTime:2018-04-09 01:14:29.124, lastUpdatedStamp:2018-04-09 01:14:29.124, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:29.128][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:14:29.128][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:14:29.128][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:14:29.128][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:14:29.128][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100570 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:12-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:14:29.131][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:14:29.131][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:14:29.131][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:14:29.132][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:14:29.132][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:14:29.132][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:14:29.132][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:14:29.134][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:14:29.131, lastUpdatedStamp:2018-04-09 01:14:29.131, jobRunId:100570]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:29.134][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:14:29.134][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:14:29.134][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:14:29.134][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:14:29.134][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:14:29.135][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:14:29.136][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:14:29.124-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:14:29.219][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:14:29.221][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:14:29.222][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:14:29.222][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:14:29.223][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:14:29.224][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:14:29.224][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:14:50.223][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:14:50.223][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:14:50.223][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:14:50.225][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:14:50.226][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:14:50.230][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:14:50.230][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:14:50.230][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:14:50.233][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:14:50.531][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:14:50.533][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:14:50.558][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:14:50.561][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:14:50.562][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:14:50.565][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:14:50.565][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:14:50.567][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:14:50.567][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:14:50.568][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:14:50.568][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:14:50.567, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:50.568][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:14:50.569][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:14:50.569][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:14:50.569][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:14:50.570][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:14:50.571][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:14:50.571][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:14:50.572][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:14:50.566, lastUpdatedStamp:2018-04-09 01:14:50.57, jobRunId:100570]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:50.572][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:14:50.572][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:14:50.572][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:14:50.572][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:15:29.126][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:15:29.127][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:15:29.127][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:15:29.128][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[16:15:29.128][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[16:15:29.129][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[16:15:29.129][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[16:15:29.129][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[16:15:29.129][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:15:29.129][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100571, lastRunTime:2018-04-09 01:15:29.126, lastUpdatedStamp:2018-04-09 01:15:29.126, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:15:29.129][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[16:15:29.129][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[16:15:29.129][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[16:15:29.129][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[16:15:29.130][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100571 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:15-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:15:29.134][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:15:29.134][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:15:29.134][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:15:29.134][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:15:29.136][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:15:29.133, lastUpdatedStamp:2018-04-09 01:15:29.134, jobRunId:100571]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:15:29.136][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:15:29.136][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:15:29.136][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:15:29.136][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:15:29.137][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:15:29.137][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:15:29.138][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T01:15:29.126-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:15:29.207][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:15:29.209][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:15:29.209][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:15:29.209][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:15:29.210][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:15:29.212][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:15:29.212][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:15:50.217][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:15:50.218][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:15:50.218][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:15:50.219][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:15:50.219][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:15:50.221][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:15:50.221][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:15:50.221][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:15:50.222][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:15:50.508][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:15:50.519][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:15:50.534][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:15:50.536][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:15:50.539][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:15:50.541][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:15:50.541][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:15:50.543][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:15:50.543][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:15:50.543][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:15:50.544][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:15:50.544][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:50.544][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:50.544][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:15:50.544][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:15:50.544][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:15:50.544][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:15:50.544][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:15:50.544][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:15:50.545][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:15:50.543, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:15:50.545][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:15:50.545][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:15:50.545][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:15:50.545][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:15:50.546][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:15:50.546][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:15:50.546][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:15:50.546][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:15:50.547][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:50.547][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:50.547][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:50.547][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:50.547][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:15:50.547][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:15:50.571][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:15:50.571][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:15:50.571][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:15:50.571][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:15:50.572][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:15:50.572][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:15:50.543, lastUpdatedStamp:2018-04-09 01:15:50.546, jobRunId:100571]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:15:50.573][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:15:50.573][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:15:50.573][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:15:50.573][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:16:29.127][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:16:29.127][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:16:29.128][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:16:29.128][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:16:29.128][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[16:16:29.129][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[16:16:29.129][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:16:29.130][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100572, lastRunTime:2018-04-09 01:16:29.126, lastUpdatedStamp:2018-04-09 01:16:29.127, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:16:29.130][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[16:16:29.130][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[16:16:29.130][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[16:16:29.130][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[16:16:29.130][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100572 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:15-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:16:29.133][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:16:29.133][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:16:29.134][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:16:29.134][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:16:29.134][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:16:29.135][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:16:29.135][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:16:29.136][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 01:16:29.133, lastUpdatedStamp:2018-04-09 01:16:29.134, jobRunId:100572]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:16:29.136][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T01:16:29.126-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:16:29.136][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:16:29.136][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:16:29.137][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:16:29.137][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:16:29.200][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:16:29.202][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:16:29.203][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:16:29.203][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:16:29.204][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[16:16:29.205][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:16:29.205][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[16:16:50.205][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[16:16:50.205][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:16:50.205][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[16:16:50.206][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:16:50.206][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:16:50.209][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[16:16:50.209][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:16:50.209][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:16:50.210][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:16:50.520][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:16:50.521][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:16:50.532][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:16:50.534][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:16:50.536][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:16:50.538][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:16:50.538][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:16:50.540][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:16:50.540][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:16:50.541][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:16:50.541][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:16:50.54, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:16:50.541][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:16:50.541][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:16:50.541][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:16:50.542][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:16:50.542][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:16:50.543][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:16:50.543][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:16:50.544][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:16:50.539, lastUpdatedStamp:2018-04-09 01:16:50.542, jobRunId:100572]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:16:50.544][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:16:50.544][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:16:50.545][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:16:50.545][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:17:29.128][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:17:29.129][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:17:29.129][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:17:29.130][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:17:29.130][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:17:29.130][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:17:29.131][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100573, lastRunTime:2018-04-09 01:17:29.128, lastUpdatedStamp:2018-04-09 01:17:29.128, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:17:29.131][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:17:29.131][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:17:29.131][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:17:29.131][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:17:29.131][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100573 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:15-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:17:29.153][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:17:29.154][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:17:29.155][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:17:29.155][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 01:17:29.153, lastUpdatedStamp:2018-04-09 01:17:29.153, jobRunId:100573]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:17:29.155][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:17:29.155][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:17:29.156][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:17:29.156][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:17:29.186][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:17:29.188][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:17:29.189][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:17:29.189][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:17:29.190][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:17:29.128-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:17:29.238][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:17:29.239][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:17:29.240][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:17:29.241][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:17:29.241][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[16:17:29.242][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:17:29.243][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[16:17:50.250][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[16:17:50.251][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:17:50.251][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[16:17:50.252][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:17:50.252][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:17:50.255][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[16:17:50.255][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:17:50.255][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:17:50.256][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:17:50.500][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:17:50.513][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:17:50.524][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:17:50.526][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:17:50.528][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:17:50.530][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:17:50.530][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:17:50.533][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:17:50.533][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:17:50.533][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:17:50.533][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:17:50.533][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:50.534][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:50.534][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:17:50.534][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:17:50.534][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:17:50.535][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:17:50.535][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:17:50.536][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:17:50.537][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:17:50.533, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:17:50.537][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:17:50.537][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:17:50.537][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:17:50.537][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:17:50.538][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:17:50.549][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:17:50.550][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:17:50.533, lastUpdatedStamp:2018-04-09 01:17:50.538, jobRunId:100573]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:17:50.550][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:17:50.550][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:17:50.550][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:17:50.550][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:18:29.129][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:18:29.130][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:18:29.130][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:18:29.131][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:18:29.131][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:18:29.131][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:18:29.132][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100574, lastRunTime:2018-04-09 01:18:29.129, lastUpdatedStamp:2018-04-09 01:18:29.129, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:18:29.132][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:18:29.132][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:18:29.132][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:18:29.132][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:18:29.132][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100574 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:18-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:18:29.135][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:18:29.135][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:18:29.135][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:18:29.135][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:18:29.135][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:18:29.135][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:29.135][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:29.149][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:29.149][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:29.149][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:18:29.149][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:18:29.149][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:18:29.149][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:18:29.149][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:18:29.135][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:18:29.151][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:18:29.152][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:18:29.153][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:18:29.129-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:18:29.164][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:18:29.170][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:18:29.135, lastUpdatedStamp:2018-04-09 01:18:29.135, jobRunId:100574]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:18:29.170][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:18:29.170][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:18:29.170][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:18:29.170][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:18:29.304][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:18:29.305][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:18:29.305][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:18:29.306][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:18:29.306][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:18:29.308][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:18:29.308][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:18:50.307][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:18:50.308][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:18:50.308][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:18:50.312][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:18:50.312][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:18:50.336][INFO ](MoquiWorker-4) Found entities in 20 files in 22ms [EntityFacadeImpl.class]
[16:18:50.336][INFO ](MoquiWorker-4) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[16:18:50.337][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:18:50.337][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:18:50.337][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:18:50.338][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:18:50.618][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:18:50.620][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:18:50.634][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:18:50.636][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:18:50.638][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:18:50.642][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:18:50.642][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:18:50.643][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:18:50.643][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:18:50.643][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:18:50.644][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:18:50.644][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:50.644][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:50.644][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:18:50.644][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:18:50.644][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:18:50.644][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:18:50.644][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:18:50.644][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:18:50.645][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:18:50.643, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:18:50.645][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:18:50.645][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:18:50.645][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:18:50.645][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:18:50.646][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:18:50.647][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:18:50.647][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:18:50.647][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:18:50.647][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:18:50.647][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:18:50.648][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:18:50.643, lastUpdatedStamp:2018-04-09 01:18:50.646, jobRunId:100574]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:18:50.648][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:18:50.648][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:18:50.648][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:18:50.648][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:19:29.139][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:19:29.142][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:19:29.144][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:19:29.145][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:19:29.145][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:19:29.145][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:19:29.145][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:19:29.145][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:19:29.145][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:19:29.145][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:19:29.146][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:19:29.146][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:19:29.146][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:19:29.146][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:19:29.147][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:19:29.147][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:19:29.147][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:19:29.148][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100575, lastRunTime:2018-04-09 01:19:29.13, lastUpdatedStamp:2018-04-09 01:19:29.131, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:19:29.149][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:19:29.149][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:19:29.149][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:19:29.149][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:19:29.149][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100575 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:18-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:19:29.158][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:19:29.159][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:19:29.159][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:19:29.159][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:19:29.159][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:19:29.159][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:19:29.159][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:29.159][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:29.159][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:29.159][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:29.160][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:19:29.160][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:19:29.160][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:19:29.160][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:19:29.160][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:19:29.160][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:19:29.160][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:19:29.164][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:19:29.130-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:19:29.165][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:19:29.165][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:19:29.166][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHitBin]] in [0] seconds [EntityQueryBuilder.class]
[16:19:29.167][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[16:19:29.167][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 01:19:29.158, lastUpdatedStamp:2018-04-09 01:19:29.159, jobRunId:100575]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:19:29.167][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:19:29.167][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:19:29.167][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:19:29.167][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:19:29.167][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[16:19:29.167][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[16:19:29.167][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[16:19:29.167][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:19:29.167][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:19:29.167][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[16:19:29.168][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[16:19:29.168][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[16:19:29.168][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[16:19:29.168][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[16:19:29.168][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[16:19:29.168][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100706, lastUpdatedStamp:2018-04-09 01:19:29.164, seqName:moqui.server.ArtifactHitBin]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:19:29.169][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[16:19:29.169][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[16:19:29.169][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[16:19:29.169][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[16:19:29.179][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:19:29.181][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:19:29.256][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:19:29.257][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:19:29.258][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:19:29.258][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:19:29.258][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[16:19:29.261][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:19:29.261][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[16:19:50.263][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[16:19:50.263][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:19:50.263][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[16:19:50.265][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:19:50.266][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:19:50.268][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[16:19:50.268][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:19:50.268][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:19:50.269][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:19:50.506][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:19:50.508][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:19:50.519][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:19:50.521][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:19:50.523][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:19:50.525][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:19:50.525][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:19:50.527][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:19:50.527][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:19:50.527][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:19:50.528][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:19:50.526, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:19:50.528][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:19:50.528][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:19:50.528][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:19:50.528][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:19:50.529][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:19:50.530][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:19:50.530][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:19:50.530][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:19:50.526, lastUpdatedStamp:2018-04-09 01:19:50.529, jobRunId:100575]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:19:50.531][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:19:50.531][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:19:50.531][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:19:50.531][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:20:29.131][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:20:29.132][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:20:29.132][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:20:29.133][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:20:29.136][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:20:29.136][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:20:29.137][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100576, lastRunTime:2018-04-09 01:20:29.131, lastUpdatedStamp:2018-04-09 01:20:29.131, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:20:29.137][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:20:29.137][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:20:29.137][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:20:29.137][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:20:29.137][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100576 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:18-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:20:29.150][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:20:29.150][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:20:29.151][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:20:29.151][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:20:29.151][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:20:29.153][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:20:29.153][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:20:29.155][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:20:29.131-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:20:29.158][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 01:20:29.15, lastUpdatedStamp:2018-04-09 01:20:29.15, jobRunId:100576]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:20:29.158][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:20:29.158][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:20:29.158][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:20:29.158][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:20:29.247][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:20:29.249][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:20:29.249][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:20:29.251][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:20:29.251][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[16:20:29.257][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:20:29.257][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[16:20:29.260][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[16:20:29.260][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:20:29.260][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[16:20:29.262][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:20:29.262][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:20:29.265][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[16:20:29.266][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:20:29.266][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:20:29.266][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:20:29.596][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:20:29.598][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:20:29.609][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:20:29.611][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:20:29.613][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:20:29.615][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:20:29.616][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:20:29.617][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:20:29.617][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:20:29.617][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:20:29.618][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:20:29.617, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:20:29.618][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:20:29.618][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:20:29.618][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:20:29.618][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:20:29.621][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:20:29.626][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:20:29.626][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:20:29.626][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:20:29.626][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:20:29.626][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.626][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.626][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.626][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.627][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:20:29.627][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:20:29.627][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:20:29.627][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:20:29.627][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:20:29.627][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:20:29.631][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:20:29.631][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:20:29.632][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:20:29.617, lastUpdatedStamp:2018-04-09 01:20:29.626, jobRunId:100576]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:20:29.632][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:20:29.632][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:20:29.632][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:20:29.632][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:20:29.633][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:20:29.635][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.135][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:21:29.142][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.145][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:21:29.146][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:21:29.146][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:21:29.147][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.146][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:21:29.149][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:21:29.149][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:21:29.149][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:21:29.150][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100577, lastRunTime:2018-04-09 01:21:29.131, lastUpdatedStamp:2018-04-09 01:21:29.143, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.150][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:21:29.150][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:21:29.150][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:21:29.150][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:21:29.150][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100577 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:21-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:21:29.152][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:21:29.153][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:21:29.154][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:21:29.154][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:21:29.155][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.155][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:21:29.155][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:21:29.154, lastUpdatedStamp:2018-04-09 01:21:29.154, jobRunId:100577]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.155][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:21:29.155][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:21:29.155][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:21:29.155][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:21:29.157][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:21:29.157][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:21:29.158][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:21:29.158][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.160][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:21:29.161][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:21:29.165][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:21:29.131-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:21:29.233][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:21:29.236][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:21:29.237][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:21:29.238][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:21:29.238][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:21:29.239][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:21:29.239][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:21:29.242][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:21:29.242][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:21:29.242][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:21:29.244][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:21:29.245][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:21:29.247][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:21:29.247][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:21:29.247][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:21:29.248][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:21:29.508][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:21:29.509][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:21:29.518][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:21:29.520][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:21:29.522][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:21:29.524][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:21:29.524][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:21:29.525][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:21:29.526][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:21:29.526][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:21:29.527][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:21:29.525, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.527][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:21:29.527][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:21:29.527][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:21:29.527][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:21:29.528][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:21:29.528][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:21:29.529][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:21:29.525, lastUpdatedStamp:2018-04-09 01:21:29.528, jobRunId:100577]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:21:29.529][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:21:29.529][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:21:29.529][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:21:29.529][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:22:29.135][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:22:29.136][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:22:29.136][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:22:29.138][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:22:29.138][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:22:29.139][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:22:29.139][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:22:29.139][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:22:29.139][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:22:29.140][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:22:29.140][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:22:29.140][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:22:29.140][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:22:29.140][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:22:29.140][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:22:29.141][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:22:29.141][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:22:29.142][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100578, lastRunTime:2018-04-09 01:22:29.135, lastUpdatedStamp:2018-04-09 01:22:29.135, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:22:29.142][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:22:29.145][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:22:29.145][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:22:29.145][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:22:29.145][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100578 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:21-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:22:29.152][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:22:29.153][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:29.153][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:22:29.153][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:22:29.155][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:22:29.155][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:22:29.156][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:22:29.156][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:22:29.157][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:22:29.152, lastUpdatedStamp:2018-04-09 01:22:29.152, jobRunId:100578]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:22:29.157][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:22:29.159][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:22:29.159][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:22:29.159][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:22:29.159][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:22:29.160][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:22:29.163][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:22:29.135-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:22:29.261][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:22:29.264][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:22:29.264][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:22:29.267][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:22:29.268][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:22:29.272][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:22:29.272][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:22:50.274][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:22:50.274][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:22:50.275][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:22:50.276][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:22:50.277][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:22:50.280][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:22:50.280][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:22:50.280][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:22:50.281][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:22:50.558][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:22:50.559][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:22:50.570][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:22:50.572][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:22:50.575][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:22:50.577][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:22:50.578][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:22:50.579][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:22:50.579][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:22:50.579][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:22:50.579][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:22:50.579][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:50.579][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:50.579][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:22:50.583][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:22:50.583][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:22:50.583][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:22:50.584][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:22:50.585][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:22:50.586][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:22:50.579, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:22:50.586][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:22:50.587][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:22:50.587][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:22:50.587][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:22:50.588][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:22:50.588][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:22:50.589][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:22:50.579, lastUpdatedStamp:2018-04-09 01:22:50.588, jobRunId:100578]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:22:50.589][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:22:50.590][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:22:50.590][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:22:50.590][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:23:29.134][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:23:29.135][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:23:29.135][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:23:29.136][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:23:29.136][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:23:29.136][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:23:29.137][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100579, lastRunTime:2018-04-09 01:23:29.134, lastUpdatedStamp:2018-04-09 01:23:29.134, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:23:29.137][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:23:29.137][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:23:29.137][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:23:29.137][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:23:29.137][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100579 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:21-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:23:29.140][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:23:29.140][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:23:29.140][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:23:29.140][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:23:29.140][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:23:29.140][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.140][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.140][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.140][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.141][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:23:29.141][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:23:29.141][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:23:29.141][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:23:29.141][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:23:29.142][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:23:29.142][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:23:29.143][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 01:23:29.14, lastUpdatedStamp:2018-04-09 01:23:29.14, jobRunId:100579]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:23:29.143][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:23:29.143][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:23:29.143][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:23:29.143][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:23:29.143][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:23:29.144][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:23:29.145][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:23:29.134-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:23:29.222][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:23:29.224][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:23:29.224][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:23:29.225][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:23:29.225][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[16:23:29.227][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:23:29.227][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[16:23:29.229][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[16:23:29.229][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:23:29.229][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[16:23:29.230][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:23:29.231][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:23:29.235][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[16:23:29.235][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:23:29.235][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:23:29.236][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:23:29.524][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:23:29.526][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:23:29.538][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:23:29.540][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:23:29.543][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:23:29.548][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:23:29.549][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:23:29.550][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:23:29.550][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:23:29.550][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:23:29.550][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:23:29.550][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.550][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.550][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:23:29.550][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:23:29.550][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:23:29.551][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:23:29.551][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:23:29.551][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:23:29.551][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:23:29.55, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:23:29.551][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:23:29.551][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:23:29.552][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:23:29.552][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.553][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:23:29.554][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:23:29.554][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:23:29.554][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:23:29.554][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:23:29.554][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:23:29.554][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:23:29.558][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:23:29.55, lastUpdatedStamp:2018-04-09 01:23:29.553, jobRunId:100579]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:23:29.558][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:23:29.558][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:23:29.558][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:23:29.558][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:24:29.137][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:24:29.138][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:24:29.139][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:24:29.140][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:24:29.140][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:24:29.141][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:24:29.141][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:24:29.141][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:24:29.143][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100580, lastRunTime:2018-04-09 01:24:29.136, lastUpdatedStamp:2018-04-09 01:24:29.136, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:24:29.143][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:24:29.143][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:24:29.143][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:24:29.144][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:24:29.144][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100580 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:24-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:24:29.182][INFO ](pool-2-thread-1) Found entities in 20 files in 36ms [EntityFacadeImpl.class]
[16:24:29.182][INFO ](pool-2-thread-1) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[16:24:29.184][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:24:29.184][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:24:29.185][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:24:29.185][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:24:29.184][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:24:29.185][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.185][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.185][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.185][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.185][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:24:29.186][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:24:29.186][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:24:29.186][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:24:29.186][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:24:29.187][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:24:29.188][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:24:29.195][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 01:24:29.184, lastUpdatedStamp:2018-04-09 01:24:29.184, jobRunId:100580]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:24:29.195][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:24:29.195][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:24:29.195][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:24:29.195][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:24:29.197][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:24:29.197][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:24:29.199][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:24:29.136-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:24:29.313][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:24:29.314][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:24:29.314][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:24:29.315][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:24:29.315][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[16:24:29.317][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:24:29.317][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[16:24:29.319][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[16:24:29.319][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:24:29.319][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[16:24:29.322][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:24:29.323][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:24:29.328][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[16:24:29.328][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:24:29.328][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:24:29.329][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:24:29.808][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:24:29.810][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:24:29.823][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:24:29.825][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:24:29.829][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:24:29.831][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:24:29.831][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:24:29.833][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:24:29.833][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:24:29.833][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:24:29.833][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:24:29.833][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.833][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.833][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:24:29.834][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:24:29.834][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:24:29.834][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:24:29.834][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:24:29.834][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:24:29.835][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:24:29.833, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:24:29.835][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:24:29.835][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:24:29.835][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:24:29.836][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:24:29.836][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:24:29.837][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:24:29.838][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:24:29.838][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:24:29.838][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:24:29.838][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:24:29.839][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:24:29.833, lastUpdatedStamp:2018-04-09 01:24:29.836, jobRunId:100580]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:24:29.839][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:24:29.839][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:24:29.839][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:24:29.839][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:25:29.137][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:25:29.138][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:25:29.139][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:25:29.139][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:25:29.139][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:25:29.139][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:25:29.139][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:25:29.139][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:25:29.139][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:25:29.140][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:25:29.140][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:25:29.142][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:25:29.142][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:25:29.142][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:25:29.142][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:25:29.142][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:25:29.143][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:25:29.143][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100581, lastRunTime:2018-04-09 01:25:29.137, lastUpdatedStamp:2018-04-09 01:25:29.137, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:25:29.143][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:25:29.143][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:25:29.144][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:25:29.144][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:25:29.144][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100581 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:24-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:25:29.150][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:25:29.151][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:25:29.151][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:25:29.151][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:25:29.151][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:25:29.152][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:25:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.154][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:25:29.154][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:25:29.154][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:25:29.155][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:25:29.155][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:25:29.155][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:25:29.157][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:25:29.15, lastUpdatedStamp:2018-04-09 01:25:29.15, jobRunId:100581]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:25:29.157][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:25:29.157][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:25:29.157][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:25:29.157][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:25:29.158][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:25:29.159][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:25:29.160][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:25:29.137-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:25:29.290][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:25:29.291][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:25:29.291][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:25:29.292][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:25:29.292][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:25:29.294][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:25:29.294][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:25:29.296][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:25:29.296][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:25:29.296][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:25:29.299][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:25:29.299][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:25:29.303][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:25:29.303][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:25:29.303][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:25:29.304][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:25:29.680][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:25:29.683][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:25:29.698][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:25:29.700][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:25:29.702][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:25:29.704][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:25:29.705][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:25:29.706][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:25:29.706][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:25:29.706][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:25:29.707][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:25:29.706, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:25:29.707][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:25:29.707][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:25:29.707][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:25:29.707][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:25:29.708][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:25:29.709][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:25:29.709][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:25:29.709][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:25:29.709][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:25:29.709][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:25:29.709][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:25:29.706, lastUpdatedStamp:2018-04-09 01:25:29.708, jobRunId:100581]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:25:29.710][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:25:29.710][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:25:29.710][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:25:29.710][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:26:29.138][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:26:29.139][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:26:29.139][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:26:29.140][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:26:29.140][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:26:29.140][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:26:29.142][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100582, lastRunTime:2018-04-09 01:26:29.138, lastUpdatedStamp:2018-04-09 01:26:29.138, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:26:29.142][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:26:29.142][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:26:29.142][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:26:29.142][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:26:29.142][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100582 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:24-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:26:29.144][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:26:29.145][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:26:29.145][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:26:29.145][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:26:29.145][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:26:29.146][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:26:29.144, lastUpdatedStamp:2018-04-09 01:26:29.144, jobRunId:100582]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:26:29.146][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:26:29.146][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:26:29.146][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:26:29.146][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:26:29.150][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:26:29.151][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:26:29.154][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:26:29.138-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:26:29.215][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:26:29.216][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:26:29.216][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:26:29.217][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:26:29.217][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:26:29.219][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:26:29.219][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:26:29.220][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:26:29.220][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:26:29.220][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:26:29.221][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:26:29.222][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:26:29.225][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:26:29.225][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:26:29.225][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:26:29.225][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:26:29.478][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:26:29.479][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:26:29.578][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:26:29.582][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:26:29.583][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:26:29.596][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:26:29.597][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:26:29.598][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:26:29.598][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:26:29.599][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:26:29.599][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:26:29.598, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:26:29.599][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:26:29.599][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:26:29.599][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:26:29.599][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:26:29.600][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:26:29.600][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:26:29.600][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:26:29.600][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:26:29.600][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:26:29.601][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:26:29.602][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:26:29.602][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:26:29.598, lastUpdatedStamp:2018-04-09 01:26:29.6, jobRunId:100582]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:26:29.602][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:26:29.602][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:26:29.602][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:26:29.602][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:27:29.139][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:27:29.140][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:27:29.141][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:27:29.141][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:27:29.141][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[16:27:29.141][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[16:27:29.142][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[16:27:29.142][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:27:29.143][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100583, lastRunTime:2018-04-09 01:27:29.139, lastUpdatedStamp:2018-04-09 01:27:29.139, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:27:29.143][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[16:27:29.143][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[16:27:29.143][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[16:27:29.143][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[16:27:29.143][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100583 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:27-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:27:29.148][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:27:29.148][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:27:29.148][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:27:29.148][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:27:29.149][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:27:29.149][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:27:29.149][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.149][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.149][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.149][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.149][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:27:29.150][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:27:29.150][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:27:29.150][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:27:29.150][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:27:29.151][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:27:29.152][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:27:29.152][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:27:29.153][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 01:27:29.148, lastUpdatedStamp:2018-04-09 01:27:29.148, jobRunId:100583]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:27:29.153][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:27:29.153][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:27:29.153][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:27:29.153][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:27:29.154][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T01:27:29.139-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:27:29.212][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:27:29.213][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:27:29.214][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:27:29.214][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:27:29.214][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[16:27:29.216][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:27:29.217][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[16:27:29.218][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[16:27:29.218][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:27:29.220][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[16:27:29.225][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:27:29.226][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:27:29.228][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[16:27:29.228][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:27:29.229][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:27:29.229][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:27:29.646][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:27:29.647][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:27:29.661][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:27:29.663][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:27:29.664][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:27:29.666][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:27:29.667][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:27:29.668][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:27:29.668][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:27:29.668][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:27:29.669][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:27:29.668, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:27:29.669][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:27:29.669][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:27:29.669][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:27:29.669][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:27:29.670][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:27:29.671][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:27:29.671][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:27:29.671][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:27:29.672][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:27:29.667, lastUpdatedStamp:2018-04-09 01:27:29.67, jobRunId:100583]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:27:29.672][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:27:29.672][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:27:29.672][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:27:29.672][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:28:29.140][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:28:29.141][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:28:29.142][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:28:29.142][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:28:29.142][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:28:29.143][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:28:29.144][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100584, lastRunTime:2018-04-09 01:28:29.14, lastUpdatedStamp:2018-04-09 01:28:29.14, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:28:29.144][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:28:29.144][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:28:29.144][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:28:29.144][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:28:29.144][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100584 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:27-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:28:29.147][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:28:29.147][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:28:29.147][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:28:29.147][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:28:29.147][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:28:29.147][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.147][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:28:29.147][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.148][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.148][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.148][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:28:29.148][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:28:29.148][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:28:29.148][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:28:29.148][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:28:29.148][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:28:29.149][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 01:28:29.146, lastUpdatedStamp:2018-04-09 01:28:29.147, jobRunId:100584]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:28:29.149][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:28:29.149][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:28:29.149][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:28:29.149][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:28:29.150][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:28:29.151][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:28:29.152][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:28:29.140-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:28:29.222][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:28:29.224][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:28:29.224][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:28:29.225][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:28:29.225][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[16:28:29.226][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:28:29.226][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[16:28:29.228][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[16:28:29.228][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:28:29.228][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[16:28:29.230][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:28:29.232][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:28:29.235][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[16:28:29.235][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:28:29.236][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:28:29.236][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:28:29.527][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:28:29.528][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:28:29.541][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:28:29.543][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:28:29.545][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:28:29.547][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:28:29.547][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:28:29.550][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:28:29.550][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:28:29.550][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:28:29.551][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:28:29.55, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:28:29.551][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:28:29.551][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:28:29.551][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:28:29.551][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:28:29.553][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:28:29.554][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:28:29.554][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:28:29.55, lastUpdatedStamp:2018-04-09 01:28:29.553, jobRunId:100584]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:28:29.554][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:28:29.554][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:28:29.554][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:28:29.554][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:29:29.142][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:29:29.143][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:29:29.143][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:29:29.144][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:29:29.144][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:29:29.144][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:29:29.145][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100585, lastRunTime:2018-04-09 01:29:29.142, lastUpdatedStamp:2018-04-09 01:29:29.142, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:29:29.145][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:29:29.145][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:29:29.145][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:29:29.145][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:29:29.145][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100585 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:27-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:29:29.148][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:29:29.148][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:29:29.148][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:29:29.148][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:29:29.148][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:29:29.148, lastUpdatedStamp:2018-04-09 01:29:29.148, jobRunId:100585]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:29:29.149][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:29:29.149][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:29:29.149][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:29:29.149][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:29:29.149][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:29:29.150][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:29:29.151][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:29:29.142-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:29:29.213][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:29:29.250][INFO ](MoquiWorker-4) Found entities in 20 files in 37ms [EntityFacadeImpl.class]
[16:29:29.250][INFO ](MoquiWorker-4) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[16:29:29.251][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:29:29.252][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:29:29.252][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:29:29.252][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:29:29.254][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:29:29.254][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:29:29.256][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:29:29.256][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:29:29.256][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:29:29.260][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:29:29.261][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:29:29.264][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:29:29.264][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:29:29.264][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:29:29.265][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:29:29.594][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:29:29.595][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:29:29.609][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:29:29.614][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:29:29.616][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:29:29.618][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:29:29.619][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:29:29.620][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:29:29.620][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:29:29.620][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:29:29.620][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:29:29.620][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.620][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.620][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:29:29.620][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:29:29.623][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:29:29.623][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:29:29.623][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:29:29.623][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:29:29.624][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:29:29.62, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:29:29.624][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:29:29.624][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:29:29.624][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:29:29.624][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:29:29.625][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:29:29.626][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:29:29.626][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:29:29.626][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:29:29.626][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:29:29.626][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:29:29.62, lastUpdatedStamp:2018-04-09 01:29:29.625, jobRunId:100585]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:29:29.626][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:29:29.627][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:29:29.627][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:29:29.627][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:30:29.142][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:30:29.143][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:30:29.144][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:30:29.144][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:30:29.144][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[16:30:29.144][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[16:30:29.144][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[16:30:29.145][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:30:29.145][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100586, lastRunTime:2018-04-09 01:30:29.142, lastUpdatedStamp:2018-04-09 01:30:29.142, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[16:30:29.145][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[16:30:29.146][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100586 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:30:29.149][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:30:29.149][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:30:29.149][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:30:29.149][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:30:29.150][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:30:29.152][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:30:29.149, lastUpdatedStamp:2018-04-09 01:30:29.149, jobRunId:100586]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:30:29.152][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:30:29.152][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:30:29.152][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:30:29.152][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:30:29.152][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:30:29.152][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:30:29.153][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T01:30:29.142-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:30:29.214][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:30:29.215][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:30:29.215][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:30:29.216][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:30:29.216][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:30:29.218][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:30:29.219][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:30:29.221][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:30:29.221][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:30:29.221][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:30:29.225][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:30:29.226][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:30:29.229][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:30:29.229][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:30:29.229][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:30:29.230][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:30:29.535][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:30:29.537][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:30:29.547][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:30:29.551][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:30:29.552][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:30:29.555][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:30:29.555][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:30:29.557][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:30:29.557][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:30:29.557][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:30:29.557][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:30:29.558][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.558][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.558][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:30:29.558][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:30:29.558][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:30:29.558][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:30:29.558][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:30:29.559][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:30:29.560][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:30:29.557, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:30:29.560][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:30:29.560][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:30:29.560][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:30:29.560][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:30:29.561][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:30:29.561][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:30:29.561][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:30:29.562][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:30:29.562][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:30:29.563][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:30:29.557, lastUpdatedStamp:2018-04-09 01:30:29.561, jobRunId:100586]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:30:29.563][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:30:29.563][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:30:29.563][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:30:29.563][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:31:29.144][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:31:29.149][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:31:29.150][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:31:29.151][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:31:29.151][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:31:29.151][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:31:29.152][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100587, lastRunTime:2018-04-09 01:31:29.144, lastUpdatedStamp:2018-04-09 01:31:29.144, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:31:29.152][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:31:29.152][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:31:29.152][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:31:29.152][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:31:29.152][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100587 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:31:29.155][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:31:29.156][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:31:29.160][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:31:29.161][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 01:31:29.155, lastUpdatedStamp:2018-04-09 01:31:29.155, jobRunId:100587]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:31:29.161][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:31:29.161][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:31:29.161][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:31:29.161][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:31:29.167][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:31:29.172][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:31:29.173][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:31:29.173][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:31:29.174][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:31:29.144-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:31:29.244][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:31:29.245][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:31:29.245][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:31:29.246][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:31:29.246][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[16:31:29.247][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:31:29.247][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[16:31:29.248][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[16:31:29.248][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:31:29.248][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[16:31:29.250][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:31:29.250][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:31:29.253][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[16:31:29.253][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:31:29.253][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:31:29.254][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:31:29.501][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:31:29.502][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:31:29.516][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:31:29.518][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:31:29.519][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:31:29.522][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:31:29.522][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:31:29.523][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:31:29.523][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:31:29.523][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:31:29.524][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:31:29.523, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:31:29.524][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:31:29.524][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:31:29.524][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:31:29.524][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[16:31:29.525][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[16:31:29.525][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:31:29.526][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:31:29.523, lastUpdatedStamp:2018-04-09 01:31:29.525, jobRunId:100587]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:31:29.526][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[16:31:29.526][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[16:31:29.526][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[16:31:29.526][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[16:32:29.145][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:32:29.146][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:32:29.147][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:32:29.147][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[16:32:29.148][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[16:32:29.148][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:32:29.150][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100588, lastRunTime:2018-04-09 01:32:29.144, lastUpdatedStamp:2018-04-09 01:32:29.145, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:32:29.150][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[16:32:29.150][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[16:32:29.150][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[16:32:29.150][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[16:32:29.150][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100588 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:32:29.152][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:32:29.153][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:32:29.154][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:32:29.155][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:32:29.156][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T01:32:29.144-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:32:29.157][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:32:29.158][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:32:29.158][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:32:29.159][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:32:29.159][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.159][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.159][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.160][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.160][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:32:29.160][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:32:29.160][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:32:29.160][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:32:29.160][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:32:29.160][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:32:29.161][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 01:32:29.157, lastUpdatedStamp:2018-04-09 01:32:29.157, jobRunId:100588]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:32:29.161][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:32:29.161][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:32:29.161][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:32:29.161][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:32:29.239][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:32:29.241][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:32:29.241][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:32:29.242][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:32:29.242][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[16:32:29.244][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:32:29.244][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[16:32:29.246][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[16:32:29.246][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:32:29.247][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[16:32:29.249][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:32:29.251][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:32:29.254][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[16:32:29.254][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:32:29.254][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:32:29.254][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:32:29.582][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:32:29.583][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:32:29.606][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:32:29.608][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:32:29.610][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:32:29.614][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:32:29.615][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:32:29.617][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:32:29.617][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:32:29.617][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:32:29.617][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:32:29.617][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.617][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.617][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:32:29.618][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:32:29.618][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:32:29.618][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:32:29.618][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:32:29.618][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:32:29.619][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:32:29.617, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:32:29.619][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:32:29.619][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:32:29.619][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:32:29.619][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:32:29.620][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[16:32:29.620][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[16:32:29.620][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[16:32:29.621][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[16:32:29.621][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:32:29.622][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:32:29.617, lastUpdatedStamp:2018-04-09 01:32:29.62, jobRunId:100588]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:32:29.622][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[16:32:29.622][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[16:32:29.622][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[16:32:29.622][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[16:33:29.146][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:33:29.147][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:33:29.148][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:33:29.148][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[16:33:29.148][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[16:33:29.148][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:33:29.149][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100589, lastRunTime:2018-04-09 01:33:29.146, lastUpdatedStamp:2018-04-09 01:33:29.146, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:33:29.149][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[16:33:29.149][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[16:33:29.149][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[16:33:29.149][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[16:33:29.149][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100589 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:33-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:33:29.153][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:33:29.153][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:33:29.153][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:33:29.153][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:33:29.153][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:33:29.153][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.153][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.154][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.154][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:33:29.154][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:33:29.154][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:33:29.154][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:33:29.154][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:33:29.155][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:33:29.155][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:33:29.157][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 01:33:29.153, lastUpdatedStamp:2018-04-09 01:33:29.153, jobRunId:100589]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:33:29.157][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:33:29.157][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:33:29.157][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:33:29.157][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:33:29.179][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:33:29.180][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:33:29.181][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T01:33:29.146-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:33:29.227][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:33:29.228][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:33:29.229][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:33:29.229][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:33:29.229][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[16:33:29.231][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:33:29.231][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[16:33:29.232][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[16:33:29.232][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:33:29.232][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[16:33:29.234][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:33:29.236][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:33:29.238][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[16:33:29.238][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:33:29.238][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:33:29.238][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:33:29.553][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:33:29.554][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:33:29.570][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:33:29.573][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:33:29.574][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:33:29.576][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:33:29.577][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:33:29.578][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:33:29.578][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:33:29.578][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:33:29.583][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:33:29.578, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:33:29.583][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:33:29.583][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:33:29.583][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:33:29.583][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[16:33:29.584][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[16:33:29.585][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:33:29.585][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:33:29.577, lastUpdatedStamp:2018-04-09 01:33:29.584, jobRunId:100589]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:33:29.586][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[16:33:29.586][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[16:33:29.586][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[16:33:29.586][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[16:34:29.147][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:34:29.148][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:34:29.148][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[16:34:29.148][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:34:29.148][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[16:34:29.148][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[16:34:29.148][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[16:34:29.149][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:34:29.149][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100590, lastRunTime:2018-04-09 01:34:29.147, lastUpdatedStamp:2018-04-09 01:34:29.147, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[16:34:29.149][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100590 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T01:33-07:00[US/Pacific]) [ScheduledJobRunner.class]
[16:34:29.154][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:34:29.154][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:34:29.154][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:34:29.154][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:34:29.154][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.154][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.154][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.155][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.155][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:34:29.155][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:34:29.155][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:34:29.155][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:34:29.155][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:34:29.155][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:34:29.155][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:34:29.157][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:34:29.157][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:34:29.158][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:34:29.159][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 01:34:29.153, lastUpdatedStamp:2018-04-09 01:34:29.154, jobRunId:100590]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:34:29.159][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:34:29.159][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:34:29.159][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:34:29.159][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:34:29.160][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T01:34:29.147-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[16:34:29.228][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[16:34:29.230][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:34:29.230][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:34:29.230][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[16:34:29.231][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[16:34:29.232][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[16:34:29.233][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[16:34:29.234][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[16:34:29.234][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[16:34:29.234][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[16:34:29.236][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[16:34:29.236][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[16:34:29.239][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[16:34:29.240][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[16:34:29.240][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[16:34:29.240][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[16:34:29.499][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[16:34:29.500][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[16:34:29.513][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:34:29.515][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:34:29.517][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:34:29.520][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[16:34:29.520][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[16:34:29.521][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:34:29.521][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:34:29.522][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[16:34:29.522][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 01:34:29.521, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:34:29.522][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:34:29.522][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:34:29.523][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:34:29.523][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[16:34:29.523][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[16:34:29.523][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[16:34:29.523][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[16:34:29.524][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[16:34:29.524][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[16:34:29.525][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 01:34:29.521, lastUpdatedStamp:2018-04-09 01:34:29.523, jobRunId:100590]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:34:29.525][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[16:34:29.525][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[16:34:29.525][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[16:34:29.525][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
