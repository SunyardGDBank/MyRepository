[14:30:20.381][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:30:20.429][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:30:20.429][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:30:20.430][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100842, lastRunTime:2018-04-09 23:30:20.38, lastUpdatedStamp:2018-04-09 23:30:20.38, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:30:20.430][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:30:20.430][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:30:20.430][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:30:20.430][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:30:20.430][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100842 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:30:20.432][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:30:20.432][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:30:20.432][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:30:20.432][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:30:20.433][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:30:20.434][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:30:20.434][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 23:30:20.431, lastUpdatedStamp:2018-04-09 23:30:20.432, jobRunId:100842]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:30:20.434][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:30:20.434][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:30:20.434][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:30:20.434][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:30:20.434][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:30:20.435][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:30:20.380-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:30:20.490][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:30:20.491][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:30:20.492][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:30:20.492][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:30:20.492][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[14:30:20.493][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:30:20.493][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[14:30:41.497][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[14:30:41.497][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:30:41.497][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[14:30:41.500][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:30:41.500][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:30:41.502][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[14:30:41.502][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:30:41.502][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:30:41.502][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:30:41.722][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:30:41.723][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:30:41.737][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:30:41.739][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:30:41.740][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:30:41.741][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:30:41.742][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:30:41.742][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:30:41.742][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:30:41.743][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:30:41.743][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:30:41.742, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:30:41.743][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:30:41.743][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:30:41.743][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:30:41.743][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:30:41.743][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:30:41.743][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:30:41.744][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:30:41.744][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:30:41.742, lastUpdatedStamp:2018-04-09 23:30:41.743, jobRunId:100842]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:30:41.744][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:31:20.383][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:31:20.383][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:31:20.384][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:31:20.384][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:31:20.384][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[14:31:20.384][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[14:31:20.384][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[14:31:20.384][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[14:31:20.384][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[14:31:20.384][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[14:31:20.384][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[14:31:20.385][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:31:20.385][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100843, lastRunTime:2018-04-09 23:31:20.382, lastUpdatedStamp:2018-04-09 23:31:20.382, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:31:20.385][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[14:31:20.385][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100843 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:31:20.389][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:31:20.390][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:20.390][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:31:20.390][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:31:20.391][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:31:20.391][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:31:20.391][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:31:20.391][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:31:20.391][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:31:20.391][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:31:20.391][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 23:31:20.389, lastUpdatedStamp:2018-04-09 23:31:20.39, jobRunId:100843]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:31:20.391][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:31:20.391][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:31:20.391][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:31:20.391][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:31:20.392][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T23:31:20.382-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:31:20.494][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:31:20.495][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:31:20.495][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:31:20.495][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:31:20.495][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[14:31:20.497][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:31:20.497][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[14:31:41.502][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[14:31:41.503][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:31:41.503][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[14:31:41.509][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:31:41.510][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:31:41.543][INFO ](MoquiWorker-3) Found entities in 20 files in 31ms [EntityFacadeImpl.class]
[14:31:41.543][INFO ](MoquiWorker-3) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[14:31:41.543][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[14:31:41.543][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:31:41.543][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:31:41.544][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:31:41.784][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:31:41.785][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:31:41.801][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:31:41.803][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:31:41.804][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:31:41.805][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:31:41.805][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:31:41.806][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:31:41.806][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:31:41.806][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:31:41.807][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:31:41.806, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:31:41.807][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:31:41.808][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:31:41.808][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:31:41.808][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:31:41.808][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:31:41.808][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:31:41.808][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:31:41.806, lastUpdatedStamp:2018-04-09 23:31:41.807, jobRunId:100843]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:31:41.808][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:31:41.808][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:31:41.808][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:31:41.808][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:32:20.385][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:32:20.386][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:32:20.386][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:32:20.387][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[14:32:20.387][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[14:32:20.387][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:32:20.387][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100844, lastRunTime:2018-04-09 23:32:20.384, lastUpdatedStamp:2018-04-09 23:32:20.385, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:32:20.387][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[14:32:20.388][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[14:32:20.388][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[14:32:20.388][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[14:32:20.388][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100844 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:32:20.391][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:32:20.391][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:32:20.392][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:32:20.393][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:32:20.395][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:32:20.395][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:32:20.396][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T23:32:20.384-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:32:20.398][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 23:32:20.391, lastUpdatedStamp:2018-04-09 23:32:20.391, jobRunId:100844]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:32:20.398][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:32:20.398][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:32:20.399][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:32:20.399][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:32:20.475][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:32:20.476][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:32:20.476][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:32:20.476][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:32:20.476][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[14:32:20.477][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:32:20.477][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[14:32:41.485][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[14:32:41.485][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:32:41.486][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[14:32:41.490][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:32:41.491][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:32:41.493][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[14:32:41.493][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:32:41.493][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:32:41.493][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:32:41.743][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:32:41.743][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:32:41.755][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:32:41.757][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:32:41.758][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:32:41.759][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:32:41.760][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:32:41.761][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:32:41.761][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:32:41.761][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:32:41.761][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:32:41.761][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:41.761][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:41.761][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:32:41.761][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:32:41.762][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:32:41.762][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:32:41.762][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:32:41.762][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:32:41.762][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:32:41.761, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:32:41.762][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:32:41.762][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:32:41.762][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:32:41.762][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:32:41.763][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:32:41.763][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:32:41.764][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:32:41.761, lastUpdatedStamp:2018-04-09 23:32:41.763, jobRunId:100844]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:32:41.764][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:32:41.764][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:32:41.764][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:32:41.764][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:33:20.386][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:33:20.387][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:33:20.387][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:33:20.387][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:33:20.387][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:33:20.388][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:33:20.388][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:33:20.388][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:33:20.388][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100845, lastRunTime:2018-04-09 23:33:20.386, lastUpdatedStamp:2018-04-09 23:33:20.386, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:33:20.388][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:33:20.388][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:33:20.388][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:33:20.388][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:33:20.388][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100845 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:33-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:33:20.391][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:33:20.391][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:33:20.391][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:33:20.392][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:33:20.392][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 23:33:20.391, lastUpdatedStamp:2018-04-09 23:33:20.391, jobRunId:100845]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:33:20.392][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:33:20.392][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:33:20.392][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:33:20.392][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:33:20.392][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:33:20.392][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:33:20.393][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:33:20.386-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:33:20.449][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:33:20.450][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:33:20.451][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:33:20.451][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:33:20.451][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[14:33:20.453][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:33:20.453][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[14:33:41.453][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[14:33:41.453][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:33:41.453][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[14:33:41.456][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:33:41.457][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:33:41.458][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[14:33:41.458][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:33:41.458][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:33:41.458][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:33:41.718][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:33:41.719][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:33:41.732][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:33:41.735][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:33:41.736][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:33:41.738][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:33:41.738][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:33:41.740][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:33:41.740][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:33:41.740][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:33:41.741][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:33:41.74, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:33:41.741][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:33:41.741][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:33:41.741][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:33:41.741][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:33:41.741][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:33:41.742][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:33:41.742][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:33:41.743][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:33:41.74, lastUpdatedStamp:2018-04-09 23:33:41.741, jobRunId:100845]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:33:41.743][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:33:41.743][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:33:41.743][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:33:41.743][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:34:20.389][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:34:20.389][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:34:20.390][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:34:20.390][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:34:20.390][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:34:20.390][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100846, lastRunTime:2018-04-09 23:34:20.389, lastUpdatedStamp:2018-04-09 23:34:20.389, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:34:20.390][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100846 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:33-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:34:20.393][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:20.393][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:34:20.393][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:34:20.394][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:34:20.394][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:34:20.394][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:34:20.395][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:34:20.389-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:34:20.395][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 23:34:20.392, lastUpdatedStamp:2018-04-09 23:34:20.393, jobRunId:100846]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:34:20.395][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:34:20.395][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:34:20.395][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:34:20.395][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:34:20.456][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:34:20.456][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:34:20.457][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:34:20.457][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:34:20.457][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[14:34:20.459][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:34:20.459][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[14:34:41.460][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[14:34:41.460][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:34:41.461][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[14:34:41.464][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:34:41.464][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:34:41.467][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[14:34:41.467][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:34:41.467][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:34:41.467][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:34:41.785][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:34:41.787][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:34:41.807][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:34:41.812][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:34:41.814][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:34:41.815][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:34:41.815][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:34:41.816][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:34:41.816][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:34:41.816][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:34:41.817][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:34:41.816, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:34:41.817][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:34:41.818][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:34:41.818][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:34:41.818][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:34:41.818][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:34:41.816, lastUpdatedStamp:2018-04-09 23:34:41.817, jobRunId:100846]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:34:41.818][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:34:41.818][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:34:41.818][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:34:41.818][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:35:20.391][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:35:20.392][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:35:20.392][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:35:20.392][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[14:35:20.392][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[14:35:20.393][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[14:35:20.393][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:35:20.393][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100847, lastRunTime:2018-04-09 23:35:20.391, lastUpdatedStamp:2018-04-09 23:35:20.391, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:35:20.393][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[14:35:20.393][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[14:35:20.393][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[14:35:20.393][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[14:35:20.393][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100847 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:33-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:35:20.395][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:35:20.395][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:35:20.395][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:35:20.396][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:35:20.396][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 23:35:20.395, lastUpdatedStamp:2018-04-09 23:35:20.395, jobRunId:100847]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:35:20.396][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:35:20.396][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:35:20.397][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:35:20.397][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:35:20.397][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:35:20.397][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:35:20.397][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-09T23:35:20.391-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:35:20.473][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:35:20.474][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:35:20.475][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:35:20.475][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:35:20.476][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[14:35:20.478][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:35:20.478][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[14:35:41.482][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[14:35:41.482][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:35:41.482][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[14:35:41.490][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:35:41.491][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:35:41.498][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[14:35:41.498][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:35:41.498][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:35:41.499][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:35:41.773][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:35:41.774][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:35:41.785][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:35:41.787][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:35:41.788][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:35:41.791][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:35:41.791][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:35:41.792][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:35:41.792][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:35:41.792][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:35:41.792, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:35:41.792][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:35:41.793][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:35:41.793][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:35:41.794][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:35:41.791, lastUpdatedStamp:2018-04-09 23:35:41.793, jobRunId:100847]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:35:41.794][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:35:41.794][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:35:41.794][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:35:41.794][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:36:20.394][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:36:20.394][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:36:20.395][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:36:20.395][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:36:20.395][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:36:20.395][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:36:20.396][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100848, lastRunTime:2018-04-09 23:36:20.394, lastUpdatedStamp:2018-04-09 23:36:20.394, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:36:20.396][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:36:20.396][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:36:20.396][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:36:20.396][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:36:20.396][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100848 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:36-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:36:20.399][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:36:20.399][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:36:20.399][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:36:20.399][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:36:20.399][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:36:20.399][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:36:20.399][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:20.400][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:20.400][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:20.400][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:20.400][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:36:20.400][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:36:20.400][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:36:20.400][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:36:20.400][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:36:20.400][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:36:20.401][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:36:20.402][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:36:20.402][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:36:20.394-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:36:20.403][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 23:36:20.399, lastUpdatedStamp:2018-04-09 23:36:20.399, jobRunId:100848]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:36:20.403][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:36:20.403][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:36:20.403][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:36:20.403][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:36:20.469][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:36:20.470][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:36:20.470][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:36:20.470][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:36:20.470][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[14:36:20.472][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:36:20.472][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[14:36:41.473][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[14:36:41.473][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:36:41.473][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[14:36:41.476][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:36:41.477][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:36:41.478][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[14:36:41.478][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:36:41.478][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:36:41.479][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:36:41.714][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:36:41.715][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:36:41.730][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:36:41.731][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:36:41.732][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:36:41.734][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:36:41.734][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:36:41.734][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:36:41.734][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:36:41.734][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:36:41.734][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:36:41.735][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:36:41.735][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:36:41.734, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:36:41.735][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:36:41.736][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:36:41.736][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:36:41.737][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:36:41.734, lastUpdatedStamp:2018-04-09 23:36:41.736, jobRunId:100848]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:36:41.737][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:36:41.737][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:36:41.737][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:36:41.737][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:37:20.396][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:37:20.397][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:37:20.397][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:37:20.398][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:37:20.398][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[14:37:20.398][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[14:37:20.398][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[14:37:20.398][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[14:37:20.398][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:37:20.398][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:37:20.398][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:37:20.399][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[14:37:20.399][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[14:37:20.399][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[14:37:20.399][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[14:37:20.399][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[14:37:20.399][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:37:20.399][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100849, lastRunTime:2018-04-09 23:37:20.396, lastUpdatedStamp:2018-04-09 23:37:20.396, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:37:20.399][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[14:37:20.399][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[14:37:20.399][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[14:37:20.400][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[14:37:20.400][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100849 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:36-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:37:20.417][INFO ](pool-2-thread-4) Found entities in 20 files in 16ms [EntityFacadeImpl.class]
[14:37:20.417][INFO ](pool-2-thread-4) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[14:37:20.418][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:37:20.418][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:20.418][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:37:20.418][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:37:20.420][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:37:20.420][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:37:20.420][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:37:20.420][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:37:20.421][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:37:20.421][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T23:37:20.396-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:37:20.421][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:37:20.422][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 23:37:20.418, lastUpdatedStamp:2018-04-09 23:37:20.418, jobRunId:100849]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:37:20.422][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:37:20.422][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:37:20.422][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:37:20.422][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:37:20.484][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:37:20.485][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:37:20.485][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:37:20.485][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:37:20.486][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[14:37:20.487][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:37:20.487][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[14:37:41.481][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[14:37:41.481][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:37:41.481][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[14:37:41.484][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:37:41.484][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:37:41.486][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[14:37:41.486][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:37:41.486][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:37:41.486][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:37:41.711][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:37:41.712][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:37:41.767][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:37:41.769][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:37:41.770][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:37:41.772][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:37:41.772][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:37:41.773][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:37:41.773][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:37:41.773][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:37:41.773][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:37:41.773, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:37:41.774][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:37:41.774][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:37:41.775][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:37:41.773, lastUpdatedStamp:2018-04-09 23:37:41.774, jobRunId:100849]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:37:41.775][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:37:41.775][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:37:41.775][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:37:41.775][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:38:20.397][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:38:20.399][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:38:20.400][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:38:20.400][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:38:20.400][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:38:20.400][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100850, lastRunTime:2018-04-09 23:38:20.397, lastUpdatedStamp:2018-04-09 23:38:20.397, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:38:20.400][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:38:20.401][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:38:20.401][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100850 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:36-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:38:20.403][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:20.403][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:20.403][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:38:20.404][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:38:20.404][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:38:20.404][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:38:20.404][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:38:20.404][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:38:20.405][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:38:20.405][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 23:38:20.403, lastUpdatedStamp:2018-04-09 23:38:20.403, jobRunId:100850]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:38:20.405][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:38:20.405][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:38:20.405][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:38:20.405][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:38:20.405][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:38:20.406][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:38:20.397-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:38:20.470][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:38:20.471][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:38:20.471][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:38:20.471][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:38:20.471][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[14:38:20.473][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:38:20.473][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[14:38:41.475][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[14:38:41.475][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:38:41.475][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[14:38:41.480][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:38:41.480][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:38:41.482][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[14:38:41.482][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:38:41.482][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:38:41.483][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:38:41.716][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:38:41.717][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:38:41.732][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:38:41.734][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:38:41.735][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:38:41.737][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:38:41.737][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:38:41.738][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:38:41.738][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:38:41.738][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:38:41.739][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:38:41.738, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:38:41.739][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:38:41.739][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:38:41.739][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:38:41.739][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:38:41.739][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:38:41.740][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:38:41.742][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:38:41.742][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:38:41.742][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:38:41.742][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:38:41.742][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:38:41.742][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:38:41.738, lastUpdatedStamp:2018-04-09 23:38:41.739, jobRunId:100850]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:38:41.743][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:38:41.743][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:38:41.743][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:38:41.743][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:39:20.400][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:39:20.400][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:39:20.401][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:39:20.401][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:39:20.401][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:39:20.401][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100851, lastRunTime:2018-04-09 23:39:20.4, lastUpdatedStamp:2018-04-09 23:39:20.4, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:39:20.401][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100851 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:39-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:39:20.403][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:39:20.403][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:39:20.404][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 23:39:20.403, lastUpdatedStamp:2018-04-09 23:39:20.403, jobRunId:100851]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:39:20.404][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:39:20.404][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:39:20.404][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:39:20.404][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:39:20.420][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:39:20.421][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:39:20.422][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:39:20.422][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:39:20.423][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:39:20.400-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:39:20.469][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:39:20.470][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:39:20.470][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:39:20.470][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:39:20.471][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[14:39:20.472][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:39:20.472][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[14:39:41.467][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[14:39:41.467][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:39:41.467][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[14:39:41.473][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:39:41.474][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:39:41.476][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[14:39:41.476][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:39:41.476][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:39:41.476][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:39:41.699][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:39:41.700][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:39:41.714][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:39:41.715][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:39:41.716][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:39:41.718][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:39:41.718][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:39:41.719][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:39:41.719][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:39:41.719][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:39:41.720][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:39:41.719, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:39:41.720][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:39:41.720][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:39:41.720][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:39:41.720][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:39:41.720][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:39:41.720][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:39:41.720][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:39:41.720][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:39:41.721][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:39:41.721][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:39:41.719, lastUpdatedStamp:2018-04-09 23:39:41.72, jobRunId:100851]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:39:41.721][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:40:20.402][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:40:20.403][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:40:20.403][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:40:20.403][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:40:20.403][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:40:20.403][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100852, lastRunTime:2018-04-09 23:40:20.402, lastUpdatedStamp:2018-04-09 23:40:20.402, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:40:20.403][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:40:20.404][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100852 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:39-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:40:20.405][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:40:20.405][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:40:20.406][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:40:20.406][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:40:20.406][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:40:20.407][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:40:20.402-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:40:20.408][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:40:20.408][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 23:40:20.406, lastUpdatedStamp:2018-04-09 23:40:20.406, jobRunId:100852]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:40:20.408][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:40:20.409][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:40:20.409][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:40:20.409][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:40:20.467][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:40:20.467][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:40:20.467][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:40:20.468][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:40:20.468][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[14:40:20.469][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:40:20.469][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[14:40:41.468][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[14:40:41.468][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:40:41.468][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[14:40:41.473][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:40:41.474][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:40:41.476][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[14:40:41.476][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:40:41.476][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:40:41.477][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:40:41.721][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:40:41.722][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:40:41.734][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:40:41.735][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:40:41.737][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:40:41.738][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:40:41.738][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:40:41.739][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:40:41.739][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:40:41.740][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:40:41.740][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:40:41.739, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:40:41.740][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:40:41.740][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:40:41.740][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:40:41.740][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:40:41.740][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:40:41.740][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:40:41.740][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:40:41.740][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:40:41.741][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:40:41.741][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:40:41.739, lastUpdatedStamp:2018-04-09 23:40:41.74, jobRunId:100852]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:40:41.741][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:41:20.405][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:41:20.406][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:41:20.406][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:41:20.406][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[14:41:20.406][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[14:41:20.407][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:41:20.407][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100853, lastRunTime:2018-04-09 23:41:20.405, lastUpdatedStamp:2018-04-09 23:41:20.405, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:41:20.407][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[14:41:20.407][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[14:41:20.407][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[14:41:20.407][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[14:41:20.409][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100853 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:39-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:41:20.411][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:41:20.411][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:41:20.411][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:41:20.412][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:41:20.411][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:41:20.413][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:41:20.413][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:41:20.413][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:41:20.415][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:41:20.415][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T23:41:20.405-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:41:20.417][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 23:41:20.411, lastUpdatedStamp:2018-04-09 23:41:20.411, jobRunId:100853]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:41:20.417][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:41:20.417][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:41:20.417][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:41:20.417][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:41:20.476][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:41:20.476][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:41:20.477][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:41:20.477][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:41:20.477][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[14:41:20.478][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:41:20.478][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[14:41:41.480][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[14:41:41.481][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:41:41.481][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[14:41:41.484][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:41:41.485][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:41:41.487][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[14:41:41.487][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:41:41.487][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:41:41.487][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:41:41.719][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:41:41.719][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:41:41.734][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:41:41.736][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:41:41.737][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:41:41.739][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:41:41.739][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:41:41.740][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:41:41.740][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:41:41.740][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:41:41.741][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:41:41.74, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:41:41.741][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:41:41.742][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:41:41.742][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:41:41.742][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:41:41.742][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:41:41.742][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:41:41.74, lastUpdatedStamp:2018-04-09 23:41:41.741, jobRunId:100853]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:41:41.742][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:41:41.742][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:41:41.742][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:41:41.742][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:42:20.407][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:42:20.408][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:42:20.408][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:42:20.409][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:42:20.409][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:42:20.409][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100854, lastRunTime:2018-04-09 23:42:20.407, lastUpdatedStamp:2018-04-09 23:42:20.407, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:42:20.409][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:42:20.410][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100854 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:42-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:42:20.420][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:42:20.420][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:42:20.420][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:42:20.421][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:42:20.423][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 23:42:20.42, lastUpdatedStamp:2018-04-09 23:42:20.42, jobRunId:100854]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:42:20.423][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:42:20.423][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:42:20.423][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:42:20.423][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:42:20.423][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:42:20.424][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:42:20.424][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:42:20.407-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:42:20.475][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:42:20.501][INFO ](MoquiWorker-2) Found entities in 20 files in 26ms [EntityFacadeImpl.class]
[14:42:20.501][INFO ](MoquiWorker-2) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[14:42:20.502][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:42:20.502][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:42:20.502][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:42:20.503][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[14:42:20.503][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:42:20.503][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[14:42:41.507][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[14:42:41.507][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:42:41.507][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[14:42:41.510][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:42:41.510][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:42:41.512][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[14:42:41.512][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:42:41.512][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:42:41.512][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:42:41.749][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:42:41.750][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:42:41.763][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:42:41.765][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:42:41.767][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:42:41.769][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:42:41.769][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:42:41.770][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:42:41.770][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:42:41.770][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:42:41.769, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:42:41.770][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:42:41.771][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:42:41.771][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:42:41.772][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:42:41.769, lastUpdatedStamp:2018-04-09 23:42:41.771, jobRunId:100854]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:42:41.772][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:42:41.772][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:42:41.772][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:42:41.772][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:43:20.410][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.411][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.411][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:43:20.414][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:43:20.415][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.416][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:43:20.416][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:43:20.417][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:43:20.417][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:43:20.417][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:43:20.417][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100855, lastRunTime:2018-04-09 23:43:20.409, lastUpdatedStamp:2018-04-09 23:43:20.41, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.417][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:43:20.417][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:43:20.417][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:43:20.417][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:43:20.418][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.418][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.418][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.419][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.419][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.420][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100855 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:42-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:43:20.420][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.421][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.421][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.421][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.422][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.423][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.423][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:43:20.423][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:43:20.423][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:43:20.423][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:43:20.423][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:43:20.423][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:20.423][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:20.423][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.423][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:20.424][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:20.424][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:43:20.424][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:43:20.424][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:43:20.424][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:43:20.424][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:43:20.424][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:43:20.424][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:43:20.424][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 23:43:20.423, lastUpdatedStamp:2018-04-09 23:43:20.423, jobRunId:100855]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.425][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:43:20.425][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:43:20.425][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:43:20.425][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:43:20.425][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:43:20.425][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:43:20.426][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:43:20.426][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:20.426][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:43:20.409-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:43:20.483][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:43:20.484][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:43:20.484][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:43:20.485][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:43:20.485][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[14:43:20.486][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:43:20.486][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[14:43:41.484][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[14:43:41.484][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:43:41.484][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[14:43:41.488][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:43:41.489][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:43:41.490][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[14:43:41.490][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:43:41.490][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:43:41.490][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:43:41.746][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:43:41.747][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:43:41.760][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:43:41.762][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:43:41.763][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:43:41.764][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:43:41.765][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:43:41.765][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:43:41.765][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:43:41.765][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:43:41.765][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:43:41.765][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:41.765][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:41.765][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:43:41.765][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:43:41.766][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:43:41.766][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:43:41.766][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:43:41.766][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:43:41.766][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:43:41.765, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:41.766][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:43:41.766][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:43:41.766][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:43:41.766][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:43:41.767][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:43:41.767][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:43:41.768][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:43:41.765, lastUpdatedStamp:2018-04-09 23:43:41.767, jobRunId:100855]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:43:41.768][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:43:41.768][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:43:41.768][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:43:41.768][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:44:20.413][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:44:20.414][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:44:20.414][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:44:20.414][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:44:20.414][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[14:44:20.414][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[14:44:20.414][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[14:44:20.415][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:44:20.415][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100856, lastRunTime:2018-04-09 23:44:20.413, lastUpdatedStamp:2018-04-09 23:44:20.413, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[14:44:20.415][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100856 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:42-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:44:20.421][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:44:20.421][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:44:20.424][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:44:20.424][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:44:20.425][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T23:44:20.413-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:44:20.426][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:44:20.426][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:44:20.426][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:44:20.427][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:44:20.427][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 23:44:20.426, lastUpdatedStamp:2018-04-09 23:44:20.426, jobRunId:100856]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:44:20.427][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:44:20.537][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:44:20.538][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:44:20.539][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:44:20.540][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:44:20.540][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[14:44:20.542][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:44:20.543][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[14:44:41.612][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[14:44:41.612][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:44:41.612][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[14:44:41.615][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:44:41.616][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:44:41.618][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[14:44:41.618][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:44:41.618][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:44:41.618][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:44:41.852][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:44:41.853][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:44:41.876][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:44:41.878][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:44:41.879][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:44:41.881][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:44:41.881][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:44:41.882][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:44:41.882][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:44:41.882][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:44:41.883][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:44:41.882, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:44:41.883][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:44:41.883][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:44:41.883][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:44:41.883][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:44:41.883][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:44:41.883][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:44:41.883][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:44:41.884][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:44:41.884][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:44:41.885][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:44:41.882, lastUpdatedStamp:2018-04-09 23:44:41.883, jobRunId:100856]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:44:41.885][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:44:41.885][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:44:41.885][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:44:41.885][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:45:20.413][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:45:20.414][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:45:20.414][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:45:20.415][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:45:20.415][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:45:20.415][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:45:20.415][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:45:20.415][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:45:20.415][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:45:20.416][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:45:20.416][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:45:20.416][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:45:20.416][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:45:20.416][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:45:20.416][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:45:20.417][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:45:20.417][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:45:20.417][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100857, lastRunTime:2018-04-09 23:45:20.413, lastUpdatedStamp:2018-04-09 23:45:20.413, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:45:20.417][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:45:20.418][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:45:20.419][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:45:20.419][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:45:20.419][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100857 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:45-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:45:20.426][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:45:20.427][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:45:20.427][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:45:20.427][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:45:20.428][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:45:20.413-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:45:20.429][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:45:20.429][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:45:20.429][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:45:20.429][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:45:20.429][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:20.430][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:20.430][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:20.430][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:20.430][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:45:20.430][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:45:20.430][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:45:20.430][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:45:20.430][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:45:20.430][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:45:20.431][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 23:45:20.429, lastUpdatedStamp:2018-04-09 23:45:20.429, jobRunId:100857]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:45:20.431][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:45:20.431][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:45:20.431][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:45:20.431][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:45:20.486][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:45:20.487][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:45:20.488][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:45:20.488][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:45:20.488][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[14:45:20.490][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:45:20.490][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[14:45:41.493][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[14:45:41.493][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:45:41.493][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[14:45:41.496][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:45:41.496][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:45:41.497][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[14:45:41.497][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:45:41.498][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:45:41.498][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:45:41.726][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:45:41.727][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:45:41.745][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:45:41.747][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:45:41.749][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:45:41.751][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:45:41.751][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:45:41.752][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:45:41.752][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:45:41.752][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:45:41.753][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:45:41.752, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:45:41.753][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:45:41.753][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:45:41.753][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:45:41.753][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:45:41.753][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:45:41.753][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:45:41.753][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:45:41.753][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:45:41.754][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:45:41.754][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:45:41.754][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:45:41.752, lastUpdatedStamp:2018-04-09 23:45:41.753, jobRunId:100857]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:45:41.755][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:45:41.755][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:45:41.755][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:45:41.755][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:46:20.416][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:46:20.416][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:46:20.418][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:46:20.419][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:46:20.419][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:46:20.419][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100858, lastRunTime:2018-04-09 23:46:20.416, lastUpdatedStamp:2018-04-09 23:46:20.416, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:46:20.419][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100858 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:45-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:46:20.421][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:46:20.421][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:46:20.421][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:46:20.421][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:46:20.421][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:46:20.421][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:46:20.421][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:46:20.421][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:20.421][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:20.422][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:20.422][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:20.422][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:46:20.422][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:46:20.422][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:46:20.422][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:46:20.422][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:46:20.422][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:46:20.424][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:46:20.416-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:46:20.425][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:46:20.426][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 23:46:20.421, lastUpdatedStamp:2018-04-09 23:46:20.421, jobRunId:100858]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:46:20.426][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:46:20.426][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:46:20.426][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:46:20.426][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:46:20.481][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:46:20.482][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:46:20.482][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:46:20.483][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:46:20.483][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[14:46:20.484][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:46:20.484][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[14:46:41.484][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[14:46:41.484][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:46:41.484][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[14:46:41.489][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:46:41.489][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:46:41.491][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[14:46:41.491][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:46:41.491][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:46:41.491][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:46:41.729][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:46:41.730][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:46:41.744][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:46:41.746][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:46:41.747][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:46:41.749][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:46:41.749][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:46:41.750][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:46:41.750][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:46:41.750][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:46:41.75, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:46:41.750][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:46:41.751][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:46:41.751][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:46:41.752][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:46:41.749, lastUpdatedStamp:2018-04-09 23:46:41.751, jobRunId:100858]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:46:41.752][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:46:41.752][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:46:41.752][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:46:41.752][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:47:20.417][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:47:20.418][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:47:20.418][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:47:20.418][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[14:47:20.418][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[14:47:20.418][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:47:20.419][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100859, lastRunTime:2018-04-09 23:47:20.417, lastUpdatedStamp:2018-04-09 23:47:20.417, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:47:20.419][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[14:47:20.419][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[14:47:20.419][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[14:47:20.419][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[14:47:20.419][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100859 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:45-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:47:20.421][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:47:20.422][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:47:20.422][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:47:20.423][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:47:20.423][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:47:20.423][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T23:47:20.417-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:47:20.423][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:47:20.424][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 23:47:20.422, lastUpdatedStamp:2018-04-09 23:47:20.423, jobRunId:100859]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:47:20.424][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:47:20.424][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:47:20.424][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:47:20.424][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:47:20.479][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:47:20.480][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:47:20.480][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:47:20.481][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:47:20.481][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[14:47:20.483][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:47:20.483][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[14:47:41.482][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[14:47:41.482][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:47:41.482][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[14:47:41.485][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:47:41.486][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:47:41.503][INFO ](MoquiWorker-2) Found entities in 20 files in 16ms [EntityFacadeImpl.class]
[14:47:41.504][INFO ](MoquiWorker-2) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[14:47:41.504][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[14:47:41.504][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:47:41.504][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:47:41.504][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:47:41.740][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:47:41.741][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:47:41.754][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:47:41.756][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:47:41.757][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:47:41.758][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:47:41.758][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:47:41.759][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:47:41.759][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:47:41.759][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:47:41.760][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:47:41.759, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:47:41.760][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:47:41.761][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:47:41.761][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:47:41.759, lastUpdatedStamp:2018-04-09 23:47:41.76, jobRunId:100859]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:47:41.761][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:47:41.761][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:47:41.761][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:47:41.761][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:48:20.420][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:48:20.421][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:48:20.421][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:48:20.421][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:48:20.421][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:48:20.421][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100860, lastRunTime:2018-04-09 23:48:20.42, lastUpdatedStamp:2018-04-09 23:48:20.42, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:48:20.421][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:48:20.422][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:48:20.422][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:48:20.422][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100860 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:48-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:48:20.423][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:48:20.423][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:48:20.423][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:48:20.424][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:48:20.424][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:48:20.424][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:48:20.424][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:20.424][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:20.424][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:20.424][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:48:20.424][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:20.424][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:48:20.425][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:48:20.425][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:48:20.425][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:48:20.425][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:48:20.426][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:48:20.426][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:48:20.420-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:48:20.426][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:48:20.426][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 23:48:20.423, lastUpdatedStamp:2018-04-09 23:48:20.423, jobRunId:100860]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:48:20.427][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:48:20.427][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:48:20.427][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:48:20.427][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:48:20.490][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:48:20.491][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:48:20.491][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:48:20.491][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:48:20.492][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[14:48:20.493][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:48:20.493][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[14:48:41.500][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[14:48:41.500][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:48:41.500][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[14:48:41.504][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:48:41.505][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:48:41.506][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[14:48:41.507][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:48:41.507][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:48:41.507][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:48:41.721][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:48:41.722][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:48:41.736][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:48:41.738][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:48:41.739][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:48:41.741][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:48:41.741][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:48:41.741][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:48:41.741][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:48:41.742][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:48:41.742][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:48:41.741, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:48:41.742][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:48:41.743][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:48:41.743][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:48:41.743][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:48:41.743][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:48:41.743][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:41.751][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:41.751][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:41.751][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:41.751][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:48:41.751][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:48:41.751][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:48:41.751][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:48:41.751][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:48:41.752][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:48:41.752][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:48:41.752][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:48:41.741, lastUpdatedStamp:2018-04-09 23:48:41.743, jobRunId:100860]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:48:41.752][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:48:41.752][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:48:41.752][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:48:41.752][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:49:20.423][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:49:20.423][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:49:20.424][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:49:20.424][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[14:49:20.424][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[14:49:20.424][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:49:20.425][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100861, lastRunTime:2018-04-09 23:49:20.422, lastUpdatedStamp:2018-04-09 23:49:20.422, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:49:20.425][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[14:49:20.425][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[14:49:20.425][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[14:49:20.425][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[14:49:20.425][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100861 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:48-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:49:20.426][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:49:20.426][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:49:20.427][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:49:20.427][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:49:20.427][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:49:20.427][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:49:20.427][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:49:20.427][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:49:20.427][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:20.427][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:20.427][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:20.427][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:20.428][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:49:20.428][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:49:20.428][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:49:20.428][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:49:20.428][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:49:20.429][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:49:20.430][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T23:49:20.422-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:49:20.431][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 23:49:20.427, lastUpdatedStamp:2018-04-09 23:49:20.427, jobRunId:100861]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:49:20.431][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:49:20.431][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:49:20.431][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:49:20.431][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:49:20.486][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:49:20.487][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:49:20.487][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:49:20.487][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:49:20.487][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[14:49:20.488][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:49:20.488][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[14:49:41.494][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[14:49:41.494][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:49:41.494][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[14:49:41.498][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:49:41.499][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:49:41.500][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[14:49:41.500][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:49:41.500][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:49:41.500][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:49:41.742][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:49:41.742][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:49:41.756][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:49:41.757][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:49:41.758][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:49:41.760][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:49:41.760][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:49:41.760][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:49:41.760][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:49:41.760][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:49:41.760][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:49:41.760][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:41.760][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:41.761][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:49:41.761][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:49:41.762][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:49:41.762][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:49:41.762][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:49:41.763][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:49:41.763][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:49:41.76, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:49:41.763][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:49:41.763][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:49:41.763][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:49:41.763][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:49:41.764][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:49:41.764][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:49:41.76, lastUpdatedStamp:2018-04-09 23:49:41.764, jobRunId:100861]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:49:41.764][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:50:20.425][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:50:20.426][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:50:20.426][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:50:20.426][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:50:20.426][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:50:20.426][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:50:20.427][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:50:20.427][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:50:20.427][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100862, lastRunTime:2018-04-09 23:50:20.425, lastUpdatedStamp:2018-04-09 23:50:20.425, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:50:20.427][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:50:20.428][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:50:20.428][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:50:20.428][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:50:20.428][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100862 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:48-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:50:20.430][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:50:20.430][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:50:20.430][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:50:20.431][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:50:20.431][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:50:20.425-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:50:20.433][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:50:20.433][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:50:20.433][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:50:20.433][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:50:20.434][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:50:20.434][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:50:20.435][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 23:50:20.433, lastUpdatedStamp:2018-04-09 23:50:20.433, jobRunId:100862]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:50:20.436][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:50:20.436][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:50:20.436][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:50:20.436][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:50:20.494][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:50:20.495][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:50:20.495][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:50:20.495][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:50:20.495][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[14:50:20.496][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:50:20.496][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[14:50:41.491][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[14:50:41.491][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:50:41.491][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[14:50:41.495][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:50:41.495][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:50:41.497][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[14:50:41.497][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:50:41.497][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:50:41.497][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:50:41.718][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:50:41.719][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:50:41.744][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:50:41.746][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:50:41.747][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:50:41.748][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:50:41.749][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:50:41.749][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:50:41.749][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:50:41.749][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:50:41.749][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:50:41.750][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:50:41.750][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:50:41.749, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:50:41.750][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:50:41.751][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:50:41.751][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:50:41.752][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:50:41.749, lastUpdatedStamp:2018-04-09 23:50:41.751, jobRunId:100862]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:50:41.752][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:50:41.752][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:50:41.752][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:50:41.752][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:51:20.427][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:51:20.427][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:51:20.427][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:51:20.428][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[14:51:20.428][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:51:20.428][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100863, lastRunTime:2018-04-09 23:51:20.427, lastUpdatedStamp:2018-04-09 23:51:20.427, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[14:51:20.428][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100863 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:51-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:51:20.443][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:51:20.443][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:51:20.446][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:51:20.447][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:51:20.448][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T23:51:20.427-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:51:20.460][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:51:20.460][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:51:20.461][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 23:51:20.45, lastUpdatedStamp:2018-04-09 23:51:20.46, jobRunId:100863]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:51:20.461][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:51:20.461][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:51:20.461][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:51:20.461][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:51:20.518][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:51:20.519][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:51:20.519][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:51:20.520][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:51:20.520][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[14:51:20.522][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:51:20.524][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[14:51:41.529][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[14:51:41.529][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:51:41.529][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[14:51:41.532][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:51:41.533][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:51:41.535][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[14:51:41.535][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:51:41.535][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:51:41.535][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:51:41.754][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:51:41.755][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:51:41.771][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:51:41.773][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:51:41.775][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:51:41.776][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:51:41.777][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:51:41.777][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:51:41.777][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:51:41.777][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:51:41.777][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:51:41.778][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:51:41.778][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:51:41.777, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:51:41.778][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:51:41.779][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:51:41.779][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:51:41.780][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:51:41.777, lastUpdatedStamp:2018-04-09 23:51:41.779, jobRunId:100863]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:51:41.780][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:51:41.780][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:51:41.780][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:51:41.780][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:52:20.428][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:52:20.428][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:52:20.429][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:52:20.429][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:52:20.429][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:52:20.429][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100864, lastRunTime:2018-04-09 23:52:20.428, lastUpdatedStamp:2018-04-09 23:52:20.428, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:52:20.429][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100864 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:51-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:52:20.432][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:52:20.432][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 23:52:20.431, lastUpdatedStamp:2018-04-09 23:52:20.432, jobRunId:100864]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:52:20.432][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:52:20.434][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:52:20.435][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:52:20.436][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:52:20.436][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:52:20.444][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:52:20.428-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:52:20.490][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:52:20.490][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:52:20.490][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:52:20.491][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:52:20.491][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[14:52:20.492][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:52:20.492][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[14:52:41.498][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[14:52:41.498][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:52:41.498][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[14:52:41.499][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:52:41.499][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:52:41.500][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[14:52:41.500][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:52:41.500][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:52:41.501][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:52:41.722][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:52:41.723][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:52:41.737][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:52:41.739][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:52:41.740][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:52:41.741][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:52:41.741][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:52:41.742][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:52:41.742][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:52:41.742][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:52:41.742][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:52:41.742][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:41.742][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:41.743][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:52:41.743][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:52:41.743][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:52:41.743][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:52:41.743][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:52:41.743][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:52:41.743][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:52:41.742, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:52:41.743][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:52:41.743][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:52:41.743][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:52:41.743][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:52:41.744][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:52:41.744][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:52:41.745][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:52:41.742, lastUpdatedStamp:2018-04-09 23:52:41.744, jobRunId:100864]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:52:41.745][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:52:41.745][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:52:41.745][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:52:41.745][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:53:20.431][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:53:20.432][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:53:20.432][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:53:20.433][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[14:53:20.434][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[14:53:20.434][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:53:20.435][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100865, lastRunTime:2018-04-09 23:53:20.431, lastUpdatedStamp:2018-04-09 23:53:20.431, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:53:20.435][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[14:53:20.435][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[14:53:20.435][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[14:53:20.435][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[14:53:20.435][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100865 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:51-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:53:20.453][INFO ](pool-2-thread-4) Found entities in 20 files in 17ms [EntityFacadeImpl.class]
[14:53:20.454][INFO ](pool-2-thread-4) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[14:53:20.455][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:53:20.455][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:53:20.455][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:53:20.455][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:53:20.455][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:53:20.455][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:20.455][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:20.455][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:20.456][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:20.456][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:53:20.456][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:53:20.456][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:53:20.456][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:53:20.456][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:53:20.456][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:53:20.457][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:53:20.457][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:53:20.458][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:53:20.458][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 23:53:20.455, lastUpdatedStamp:2018-04-09 23:53:20.455, jobRunId:100865]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:53:20.458][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:53:20.458][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:53:20.458][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:53:20.458][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:53:20.458][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-09T23:53:20.431-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:53:20.523][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:53:20.523][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:53:20.524][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:53:20.524][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:53:20.524][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[14:53:20.525][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:53:20.526][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[14:53:41.539][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[14:53:41.539][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:53:41.539][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[14:53:41.541][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:53:41.541][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:53:41.543][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[14:53:41.543][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:53:41.543][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:53:41.544][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:53:41.787][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:53:41.788][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:53:41.805][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:53:41.806][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:53:41.807][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:53:41.809][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:53:41.809][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:53:41.810][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:53:41.810][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:53:41.810][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:53:41.810][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:53:41.810][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:41.810][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:41.810][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:53:41.810][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:53:41.811][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:53:41.811][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:53:41.811][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:53:41.811][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:53:41.811][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:53:41.81, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:53:41.811][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:53:41.811][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:53:41.811][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:53:41.811][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:53:41.812][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:53:41.812][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:53:41.813][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:53:41.81, lastUpdatedStamp:2018-04-09 23:53:41.812, jobRunId:100865]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:53:41.813][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:53:41.813][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:53:41.813][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:53:41.813][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:54:20.434][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:54:20.434][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:54:20.437][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:54:20.438][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:54:20.438][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:54:20.438][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:54:20.439][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100866, lastRunTime:2018-04-09 23:54:20.433, lastUpdatedStamp:2018-04-09 23:54:20.433, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:54:20.439][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:54:20.439][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:54:20.439][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:54:20.439][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:54:20.439][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100866 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:54-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:54:20.441][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:54:20.441][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:54:20.442][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:54:20.442][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:54:20.442][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:54:20.442][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:54:20.442][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:54:20.433-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:54:20.442][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:54:20.443][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:54:20.443][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:54:20.444][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 23:54:20.442, lastUpdatedStamp:2018-04-09 23:54:20.442, jobRunId:100866]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:54:20.444][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:54:20.444][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:54:20.444][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:54:20.444][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:54:20.496][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:54:20.497][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:54:20.498][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:54:20.498][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:54:20.498][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[14:54:20.500][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:54:20.501][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[14:54:41.502][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[14:54:41.503][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:54:41.503][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[14:54:41.506][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:54:41.507][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:54:41.510][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[14:54:41.510][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:54:41.511][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:54:41.511][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:54:41.745][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:54:41.746][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:54:41.764][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:54:41.766][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:54:41.767][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:54:41.768][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:54:41.768][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:54:41.769][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:54:41.769][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:54:41.769][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:54:41.770][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:54:41.769, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:54:41.770][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:54:41.771][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:54:41.771][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:54:41.769, lastUpdatedStamp:2018-04-09 23:54:41.77, jobRunId:100866]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:54:41.771][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:54:41.771][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:54:41.771][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:54:41.771][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:55:20.435][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:55:20.438][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:55:20.443][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:55:20.443][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.service.job.ServiceJobRun]] in [0] seconds [EntityQueryBuilder.class]
[14:55:20.444][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[14:55:20.444][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[14:55:20.444][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100917, lastUpdatedStamp:2018-04-09 23:55:20.442, seqName:moqui.service.job.ServiceJobRun]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:55:20.444][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[14:55:20.444][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[14:55:20.446][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:55:20.446][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:55:20.447][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:55:20.447][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100867, lastRunTime:2018-04-09 23:55:20.435, lastUpdatedStamp:2018-04-09 23:55:20.435, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:55:20.447][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100867 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:54-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:55:20.468][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:55:20.468][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:55:20.469][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:55:20.469][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:55:20.469][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:55:20.435-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:55:20.475][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:55:20.475][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:55:20.475][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:55:20.475][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:55:20.475][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:20.475][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:20.483][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:20.483][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:20.483][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:55:20.483][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:55:20.483][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:55:20.483][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:55:20.483][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:55:20.484][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:55:20.484][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-09 23:55:20.47, lastUpdatedStamp:2018-04-09 23:55:20.475, jobRunId:100867]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:55:20.484][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:55:20.484][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:55:20.484][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:55:20.484][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:55:20.541][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:55:20.542][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:55:20.542][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:55:20.542][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:55:20.542][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[14:55:20.544][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:55:20.544][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[14:55:41.543][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[14:55:41.544][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:55:41.544][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[14:55:41.551][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:55:41.552][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:55:41.556][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[14:55:41.557][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:55:41.557][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:55:41.558][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:55:41.798][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:55:41.799][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:55:41.815][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:55:41.817][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:55:41.818][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:55:41.819][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:55:41.820][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:55:41.820][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:55:41.820][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:55:41.820][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:55:41.820][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:55:41.821][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:55:41.821][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:55:41.82, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:55:41.821][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[14:55:41.822][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[14:55:41.822][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:55:41.823][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:55:41.82, lastUpdatedStamp:2018-04-09 23:55:41.822, jobRunId:100867]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:55:41.823][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[14:55:41.823][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[14:55:41.823][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[14:55:41.823][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[14:56:20.440][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:56:20.441][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:56:20.441][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:56:20.441][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:56:20.441][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:56:20.441][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:56:20.443][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:56:20.443][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100868, lastRunTime:2018-04-09 23:56:20.439, lastUpdatedStamp:2018-04-09 23:56:20.439, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:56:20.443][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100868 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:54-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:56:20.445][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:56:20.446][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:56:20.447][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:56:20.449][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:56:20.449][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:56:20.449][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-09 23:56:20.445, lastUpdatedStamp:2018-04-09 23:56:20.445, jobRunId:100868]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:56:20.449][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:56:20.449][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:56:20.449][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:56:20.449][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:56:20.450][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:56:20.450][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:56:20.450][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:56:20.439-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:56:20.502][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:56:20.503][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:56:20.503][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:56:20.503][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:56:20.503][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[14:56:20.504][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:56:20.504][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[14:56:41.503][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[14:56:41.503][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:56:41.503][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[14:56:41.506][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:56:41.506][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:56:41.508][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[14:56:41.508][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:56:41.508][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:56:41.508][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:56:41.736][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:56:41.737][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:56:41.752][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:56:41.754][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:56:41.755][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:56:41.758][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:56:41.758][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:56:41.759][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:56:41.759][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:56:41.759][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:56:41.759][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:56:41.759][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:41.759][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:41.760][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:56:41.760][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:56:41.760][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:56:41.760][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:56:41.760][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:56:41.760][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:56:41.760][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:56:41.759, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:56:41.761][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:56:41.761][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:56:41.761][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:56:41.761][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[14:56:41.762][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[14:56:41.762][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:56:41.763][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:56:41.759, lastUpdatedStamp:2018-04-09 23:56:41.762, jobRunId:100868]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:56:41.763][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[14:56:41.763][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[14:56:41.763][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[14:56:41.763][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[14:57:20.441][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:57:20.441][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:57:20.442][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:57:20.442][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[14:57:20.442][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:57:20.442][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100869, lastRunTime:2018-04-09 23:57:20.441, lastUpdatedStamp:2018-04-09 23:57:20.441, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[14:57:20.442][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100869 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:57-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:57:20.445][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:57:20.445][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:57:20.447][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:57:20.447][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:57:20.449][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 23:57:20.445, lastUpdatedStamp:2018-04-09 23:57:20.445, jobRunId:100869]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:57:20.449][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:57:20.449][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:57:20.449][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:57:20.449][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:57:20.450][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:57:20.450][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:57:20.451][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-09T23:57:20.441-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:57:20.515][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:57:20.516][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:57:20.516][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:57:20.516][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:57:20.516][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[14:57:20.517][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:57:20.517][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[14:57:41.515][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[14:57:41.516][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:57:41.516][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[14:57:41.520][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:57:41.520][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:57:41.522][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[14:57:41.522][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:57:41.522][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:57:41.522][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:57:41.802][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:57:41.803][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:57:41.818][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:57:41.820][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:57:41.821][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:57:41.823][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:57:41.824][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:57:41.824][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:57:41.824][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:57:41.824][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:57:41.824][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:57:41.824][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:41.824][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:41.825][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:57:41.825][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:57:41.825][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:57:41.825][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:57:41.825][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:57:41.825][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:57:41.825][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:57:41.824, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:57:41.825][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:57:41.825][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:57:41.825][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:57:41.825][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:57:41.826][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:57:41.828][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:57:41.828][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:57:41.828][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:57:41.828][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:57:41.829][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:57:41.829][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:57:41.824, lastUpdatedStamp:2018-04-09 23:57:41.826, jobRunId:100869]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:57:41.829][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:57:41.829][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:57:41.829][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:57:41.829][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:58:20.442][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.442][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:58:20.442][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.443][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:58:20.443][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.443][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.443][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.443][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.443][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:58:20.443][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:58:20.443][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:58:20.443][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:58:20.443][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:58:20.443][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:58:20.443][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:58:20.444][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:58:20.444][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:58:20.444][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.444][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100870, lastRunTime:2018-04-09 23:58:20.442, lastUpdatedStamp:2018-04-09 23:58:20.442, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:58:20.444][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:58:20.445][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100870 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:57-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:58:20.445][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.446][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.446][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.446][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.446][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.447][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.447][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.447][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:58:20.447][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:58:20.447][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:58:20.447][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.447][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:58:20.447][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:58:20.447][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:20.447][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:20.447][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:58:20.448][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:20.448][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:20.448][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:58:20.448][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:58:20.448][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:58:20.448][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:58:20.448][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:58:20.448][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:58:20.449][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-09 23:58:20.447, lastUpdatedStamp:2018-04-09 23:58:20.447, jobRunId:100870]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.449][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:58:20.449][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:58:20.449][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:58:20.449][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:58:20.449][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:58:20.450][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[14:58:20.450][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:20.450][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:58:20.451][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:58:20.442-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:58:20.520][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:58:20.535][INFO ](MoquiWorker-1) Found entities in 20 files in 15ms [EntityFacadeImpl.class]
[14:58:20.535][INFO ](MoquiWorker-1) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[14:58:20.536][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:58:20.536][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:58:20.536][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:58:20.536][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[14:58:20.537][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:58:20.537][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[14:58:41.540][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[14:58:41.540][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:58:41.540][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[14:58:41.542][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:58:41.542][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:58:41.544][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[14:58:41.544][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:58:41.544][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:58:41.544][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:58:41.758][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:58:41.759][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:58:41.774][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:58:41.776][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:58:41.777][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:58:41.778][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:58:41.778][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:58:41.779][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:58:41.779][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:58:41.780][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:58:41.780][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:58:41.779, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:41.780][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:58:41.780][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:58:41.780][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:58:41.780][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:58:41.780][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[14:58:41.780][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[14:58:41.780][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[14:58:41.780][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[14:58:41.781][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:41.781][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:41.781][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:41.781][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:41.781][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[14:58:41.781][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[14:58:41.784][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[14:58:41.784][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[14:58:41.784][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[14:58:41.784][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[14:58:41.784][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:58:41.785][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:58:41.779, lastUpdatedStamp:2018-04-09 23:58:41.78, jobRunId:100870]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:58:41.785][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[14:58:41.785][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[14:58:41.785][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[14:58:41.785][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[14:59:20.444][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:59:20.445][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[14:59:20.445][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[14:59:20.446][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:59:20.446][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[14:59:20.446][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[14:59:20.446][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[14:59:20.446][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[14:59:20.447][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:59:20.447][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:59:20.447][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[14:59:20.447][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[14:59:20.447][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[14:59:20.447][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[14:59:20.447][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[14:59:20.447][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[14:59:20.447][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:59:20.448][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100871, lastRunTime:2018-04-09 23:59:20.444, lastUpdatedStamp:2018-04-09 23:59:20.444, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:59:20.448][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[14:59:20.448][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[14:59:20.448][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[14:59:20.448][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[14:59:20.448][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100871 (last run 2018-03-11 19:40:35.543, schedule 2018-04-09T23:57-07:00[US/Pacific]) [ScheduledJobRunner.class]
[14:59:20.450][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:59:20.450][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:59:20.450][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:59:20.450][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:59:20.450][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:59:20.451][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:59:20.452][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:59:20.453][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:59:20.455][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-09 23:59:20.45, lastUpdatedStamp:2018-04-09 23:59:20.45, jobRunId:100871]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:59:20.455][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:59:20.455][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:59:20.455][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:59:20.455][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:59:20.456][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[14:59:20.456][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[14:59:20.457][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-09T23:59:20.444-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[14:59:20.529][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[14:59:20.530][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[14:59:20.530][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[14:59:20.530][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[14:59:20.530][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[14:59:20.531][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[14:59:20.531][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[14:59:41.536][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[14:59:41.536][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[14:59:41.536][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[14:59:41.540][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[14:59:41.540][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[14:59:41.542][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[14:59:41.542][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[14:59:41.542][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[14:59:41.543][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[14:59:41.773][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[14:59:41.773][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[14:59:41.784][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:59:41.786][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:59:41.787][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:59:41.788][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[14:59:41.788][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[14:59:41.789][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:59:41.789][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:59:41.789][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:59:41.789][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:59:41.789][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:41.789][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:41.789][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:59:41.789][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:59:41.790][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:59:41.790][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:59:41.790][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:59:41.790][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[14:59:41.790][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-09 23:59:41.789, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:59:41.790][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:59:41.790][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:59:41.790][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:59:41.790][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[14:59:41.791][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[14:59:41.791][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[14:59:41.791][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-09 23:59:41.789, lastUpdatedStamp:2018-04-09 23:59:41.791, jobRunId:100871]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[14:59:41.792][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[14:59:41.792][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[14:59:41.792][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[14:59:41.792][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:00:20.447][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:00:20.449][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:00:20.449][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:00:20.450][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:00:20.450][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:00:20.450][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:00:20.452][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100872, lastRunTime:2018-04-10 00:00:20.447, lastUpdatedStamp:2018-04-10 00:00:20.447, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:00:20.452][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:00:20.452][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:00:20.452][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:00:20.452][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:00:20.452][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100872 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:00:20.454][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:00:20.454][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:00:20.454][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:00:20.455][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:00:20.455][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:00:20.454, lastUpdatedStamp:2018-04-10 00:00:20.454, jobRunId:100872]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:00:20.455][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:00:20.455][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:00:20.455][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:00:20.455][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:00:20.455][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:00:20.456][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:00:20.456][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:00:20.447-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:00:20.528][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:00:20.528][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:00:20.529][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:00:20.529][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:00:20.529][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:00:20.530][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:00:20.530][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:00:41.535][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:00:41.535][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:00:41.535][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:00:41.538][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:00:41.539][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:00:41.540][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:00:41.540][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:00:41.540][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:00:41.540][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:00:41.761][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:00:41.762][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:00:41.778][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:00:41.780][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:00:41.781][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:00:41.782][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:00:41.783][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:00:41.783][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:00:41.783][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:00:41.784][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:00:41.784][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:00:41.784][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:00:41.783, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:00:41.784][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:00:41.785][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:00:41.785][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:00:41.788][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:00:41.783, lastUpdatedStamp:2018-04-10 00:00:41.785, jobRunId:100872]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:00:41.788][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:00:41.788][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:00:41.788][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:00:41.788][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:01:20.449][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:01:20.451][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:01:20.452][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:01:20.452][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:01:20.452][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:01:20.453][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:01:20.453][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:01:20.453][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:01:20.453][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100873, lastRunTime:2018-04-10 00:01:20.449, lastUpdatedStamp:2018-04-10 00:01:20.449, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:01:20.453][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:01:20.453][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:01:20.453][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:01:20.453][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:01:20.453][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100873 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:01:20.456][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:01:20.456][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:01:20.457][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:01:20.457][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:01:20.458][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:01:20.459][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:01:20.460][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:01:20.460][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:01:20.449-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:01:20.460][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:01:20.456, lastUpdatedStamp:2018-04-10 00:01:20.456, jobRunId:100873]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:01:20.461][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:01:20.461][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:01:20.461][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:01:20.461][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:01:20.525][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:01:20.525][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:01:20.526][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:01:20.526][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:01:20.526][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:01:20.527][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:01:20.527][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:01:41.525][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:01:41.526][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:01:41.526][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:01:41.530][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:01:41.530][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:01:41.531][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:01:41.531][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:01:41.532][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:01:41.532][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:01:41.763][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:01:41.764][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:01:41.778][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:01:41.779][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:01:41.781][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:01:41.783][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:01:41.783][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:01:41.784][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:01:41.784][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:01:41.784][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:01:41.785][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:01:41.784, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:01:41.785][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:01:41.786][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:01:41.786][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:01:41.786][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:01:41.784, lastUpdatedStamp:2018-04-10 00:01:41.785, jobRunId:100873]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:01:41.786][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:01:41.787][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:01:41.787][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:01:41.787][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:02:20.451][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:02:20.452][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:02:20.452][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:02:20.452][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:02:20.452][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:02:20.452][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:02:20.453][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100874, lastRunTime:2018-04-10 00:02:20.451, lastUpdatedStamp:2018-04-10 00:02:20.451, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:02:20.453][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:02:20.453][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:02:20.453][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:02:20.453][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:02:20.453][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100874 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:02:20.455][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:20.455][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:02:20.455][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:02:20.455][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:02:20.456][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:02:20.455, lastUpdatedStamp:2018-04-10 00:02:20.455, jobRunId:100874]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:02:20.456][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:02:20.456][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:02:20.456][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:02:20.456][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:02:20.456][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:02:20.456][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:02:20.457][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:02:20.451-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:02:20.514][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:02:20.515][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:02:20.516][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:02:20.516][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:02:20.516][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:02:20.517][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:02:20.517][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:02:41.522][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:02:41.522][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:02:41.522][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:02:41.526][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:02:41.526][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:02:41.528][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:02:41.528][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:02:41.528][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:02:41.529][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:02:41.761][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:02:41.762][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:02:41.781][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:02:41.783][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:02:41.784][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:02:41.786][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:02:41.786][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:02:41.787][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:02:41.787][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:02:41.787][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:02:41.788][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:02:41.787, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:02:41.788][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:02:41.788][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:02:41.788][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:02:41.788][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:02:41.789][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:02:41.791][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:02:41.791][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:02:41.791][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:02:41.792][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:02:41.787, lastUpdatedStamp:2018-04-10 00:02:41.789, jobRunId:100874]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:02:41.792][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:02:41.792][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:02:41.792][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:02:41.792][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:03:20.453][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:03:20.453][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:03:20.454][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:03:20.454][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:03:20.454][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:03:20.454][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100875, lastRunTime:2018-04-10 00:03:20.453, lastUpdatedStamp:2018-04-10 00:03:20.453, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:03:20.454][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100875 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:03-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:03:20.456][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:03:20.456][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:03:20.457][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:03:20.458][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:03:20.459][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:03:20.459][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:03:20.453-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:03:20.460][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:03:20.460][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:03:20.456, lastUpdatedStamp:2018-04-10 00:03:20.456, jobRunId:100875]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:03:20.460][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:03:20.460][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:03:20.460][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:03:20.461][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:03:20.520][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:03:20.521][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:03:20.521][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:03:20.522][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:03:20.522][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:03:20.524][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:03:20.524][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:03:41.525][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:03:41.525][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:03:41.525][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:03:41.534][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:03:41.534][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:03:41.549][INFO ](MoquiWorker-4) Found entities in 20 files in 14ms [EntityFacadeImpl.class]
[15:03:41.549][INFO ](MoquiWorker-4) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:03:41.549][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:03:41.549][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:03:41.549][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:03:41.550][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:03:41.775][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:03:41.776][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:03:41.797][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:03:41.798][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:03:41.799][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:03:41.801][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:03:41.801][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:03:41.802][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:03:41.802][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:03:41.802][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:03:41.803][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:03:41.802, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:03:41.803][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:03:41.804][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:03:41.804][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:03:41.804][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:03:41.804][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:03:41.804][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:03:41.804][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:03:41.802, lastUpdatedStamp:2018-04-10 00:03:41.803, jobRunId:100875]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:03:41.804][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:03:41.804][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:03:41.804][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:03:41.804][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:04:20.456][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:04:20.457][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:04:20.457][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:04:20.457][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:04:20.457][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:04:20.457][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:04:20.458][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100876, lastRunTime:2018-04-10 00:04:20.456, lastUpdatedStamp:2018-04-10 00:04:20.456, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:04:20.458][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:04:20.458][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:04:20.458][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:04:20.458][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:04:20.458][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100876 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:03-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:04:20.461][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:04:20.461][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:04:20.462][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:04:20.463][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:04:20.463][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:04:20.462, lastUpdatedStamp:2018-04-10 00:04:20.462, jobRunId:100876]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:04:20.463][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:04:20.463][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:04:20.463][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:04:20.463][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:04:20.467][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:04:20.467][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:04:20.468][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:04:20.456-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:04:20.540][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:04:20.542][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:04:20.542][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:04:20.543][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:04:20.543][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:04:20.544][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:04:20.544][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:04:41.541][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:04:41.541][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:04:41.541][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:04:41.543][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:04:41.544][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:04:41.545][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:04:41.545][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:04:41.545][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:04:41.545][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:04:41.763][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:04:41.764][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:04:41.781][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:04:41.783][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:04:41.784][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:04:41.790][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:04:41.790][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:04:41.791][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:04:41.791][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:04:41.791][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:04:41.791][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:04:41.791, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:04:41.791][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:04:41.792][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:04:41.794][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:04:41.794][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:04:41.794][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:04:41.794][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:04:41.794][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:04:41.794][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:04:41.79, lastUpdatedStamp:2018-04-10 00:04:41.792, jobRunId:100876]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:04:41.794][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:04:41.794][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:04:41.794][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:04:41.794][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:05:20.458][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:05:20.459][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:05:20.461][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:05:20.461][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:05:20.462][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:05:20.462][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:05:20.462][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:05:20.463][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:05:20.467][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:05:20.467][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:05:20.467][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:05:20.468][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:05:20.468][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:05:20.468][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:05:20.468][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:05:20.468][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:05:20.468][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:05:20.468][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100877, lastRunTime:2018-04-10 00:05:20.458, lastUpdatedStamp:2018-04-10 00:05:20.458, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:05:20.468][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:05:20.468][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:05:20.469][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:05:20.469][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:05:20.469][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100877 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:03-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:05:20.471][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:05:20.471][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:05:20.472][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:05:20.472][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:05:20.472][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:05:20.473][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:05:20.471, lastUpdatedStamp:2018-04-10 00:05:20.471, jobRunId:100877]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:05:20.473][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:05:20.473][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:05:20.473][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:05:20.473][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:05:20.473][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:05:20.473][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:05:20.458-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:05:20.526][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:05:20.528][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:05:20.528][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:05:20.528][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:05:20.528][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:05:20.530][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:05:20.530][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:05:41.540][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:05:41.540][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:05:41.540][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:05:41.543][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:05:41.543][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:05:41.545][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:05:41.545][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:05:41.545][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:05:41.545][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:05:41.771][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:05:41.772][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:05:41.793][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:05:41.794][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:05:41.795][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:05:41.798][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:05:41.798][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:05:41.799][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:05:41.799][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:05:41.799][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:05:41.799, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:05:41.799][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:05:41.800][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:05:41.800][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:05:41.801][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:05:41.799, lastUpdatedStamp:2018-04-10 00:05:41.8, jobRunId:100877]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:05:41.801][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:05:41.801][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:05:41.801][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:05:41.801][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:06:20.461][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:06:20.462][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:06:20.462][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:06:20.462][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:06:20.462][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:06:20.462][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100878, lastRunTime:2018-04-10 00:06:20.461, lastUpdatedStamp:2018-04-10 00:06:20.461, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:06:20.462][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100878 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:06-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:06:20.464][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:06:20.464][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:06:20.465][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:06:20.465][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:06:20.465][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:06:20.465][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:06:20.465][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:06:20.466][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:06:20.466][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:06:20.467][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:06:20.461-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:06:20.467][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:06:20.464, lastUpdatedStamp:2018-04-10 00:06:20.464, jobRunId:100878]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:06:20.467][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:06:20.467][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:06:20.467][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:06:20.467][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:06:20.540][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:06:20.541][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:06:20.541][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:06:20.541][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:06:20.541][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:06:20.542][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:06:20.542][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:06:41.552][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:06:41.552][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:06:41.552][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:06:41.556][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:06:41.556][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:06:41.558][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:06:41.558][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:06:41.558][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:06:41.559][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:06:41.789][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:06:41.790][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:06:41.804][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:06:41.806][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:06:41.807][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:06:41.808][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:06:41.808][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:06:41.809][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:06:41.809][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:06:41.809][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:06:41.810][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:06:41.809, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:06:41.810][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:06:41.811][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:06:41.811][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:06:41.811][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:06:41.811][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:06:41.809, lastUpdatedStamp:2018-04-10 00:06:41.81, jobRunId:100878]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:06:41.811][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:06:41.811][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:06:41.811][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:06:41.811][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:07:20.462][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:07:20.462][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:07:20.463][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:07:20.463][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:07:20.463][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:07:20.463][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100879, lastRunTime:2018-04-10 00:07:20.462, lastUpdatedStamp:2018-04-10 00:07:20.462, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:07:20.463][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100879 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:06-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:07:20.466][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:07:20.467][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:07:20.467][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:07:20.467][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:07:20.467][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:07:20.467][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:07:20.467][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:07:20.467][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:07:20.468][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:07:20.469][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:07:20.462-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:07:20.469][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:07:20.470][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:07:20.467, lastUpdatedStamp:2018-04-10 00:07:20.467, jobRunId:100879]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:07:20.470][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:07:20.470][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:07:20.470][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:07:20.470][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:07:20.519][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:07:20.520][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:07:20.520][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:07:20.521][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:07:20.521][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:07:20.522][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:07:20.522][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:07:41.525][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:07:41.525][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:07:41.525][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:07:41.529][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:07:41.529][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:07:41.531][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:07:41.531][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:07:41.531][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:07:41.531][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:07:41.756][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:07:41.757][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:07:41.773][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:07:41.775][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:07:41.776][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:07:41.778][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:07:41.778][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:07:41.779][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:07:41.779][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:07:41.779][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:07:41.780][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:07:41.779, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:07:41.780][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:07:41.781][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:07:41.781][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:07:41.781][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:07:41.781][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:07:41.778, lastUpdatedStamp:2018-04-10 00:07:41.78, jobRunId:100879]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:07:41.781][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:07:41.781][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:07:41.781][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:07:41.781][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:08:20.464][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:08:20.465][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:08:20.465][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:08:20.466][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:08:20.466][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:08:20.467][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:08:20.467][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:08:20.467][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:08:20.467][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100880, lastRunTime:2018-04-10 00:08:20.464, lastUpdatedStamp:2018-04-10 00:08:20.464, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:08:20.467][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:08:20.467][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:08:20.467][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:08:20.467][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:08:20.467][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100880 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:06-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:08:20.469][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:08:20.469][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:08:20.470][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:08:20.470][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:08:20.470][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:08:20.464-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:08:20.472][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:08:20.472][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:08:20.472][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:08:20.472][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:08:20.472][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:20.472][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:20.472][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:20.472][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:20.473][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:08:20.473][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:08:20.473][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:08:20.473][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:08:20.473][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:08:20.473][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:08:20.473][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:08:20.472, lastUpdatedStamp:2018-04-10 00:08:20.472, jobRunId:100880]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:08:20.473][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:08:20.473][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:08:20.473][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:08:20.473][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:08:20.547][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:08:20.548][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:08:20.548][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:08:20.548][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:08:20.548][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:08:20.549][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:08:20.549][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:08:41.557][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:08:41.557][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:08:41.557][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:08:41.559][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:08:41.559][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:08:41.583][INFO ](MoquiWorker-3) Found entities in 20 files in 23ms [EntityFacadeImpl.class]
[15:08:41.583][INFO ](MoquiWorker-3) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:08:41.583][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:08:41.583][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:08:41.583][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:08:41.584][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:08:41.816][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:08:41.817][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:08:41.831][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:08:41.833][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:08:41.835][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:08:41.836][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:08:41.836][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:08:41.837][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:08:41.837][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:08:41.837][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:08:41.837][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:08:41.837][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:41.837][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:41.837][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:08:41.837][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:08:41.839][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:08:41.839][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:08:41.839][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:08:41.840][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:08:41.840][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:08:41.837, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:08:41.840][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:08:41.840][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:08:41.840][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:08:41.840][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:08:41.841][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:08:41.841][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:08:41.841][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:08:41.837, lastUpdatedStamp:2018-04-10 00:08:41.841, jobRunId:100880]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:08:41.842][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:08:41.842][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:08:41.842][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:08:41.842][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:09:20.469][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:09:20.470][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:09:20.470][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:09:20.470][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:09:20.471][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:09:20.471][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100881, lastRunTime:2018-04-10 00:09:20.468, lastUpdatedStamp:2018-04-10 00:09:20.468, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:09:20.471][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:09:20.472][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100881 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:09-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:09:20.476][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:09:20.476][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:09:20.476][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:09:20.476][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:09:20.476][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:09:20.476][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:20.476][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:20.476][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:20.477][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:20.477][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:09:20.477][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:09:20.477][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:09:20.477][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:09:20.477][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:09:20.477][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:09:20.478][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:09:20.478][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:09:20.476, lastUpdatedStamp:2018-04-10 00:09:20.476, jobRunId:100881]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:09:20.478][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:09:20.478][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:09:20.478][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:09:20.478][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:09:20.480][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:09:20.480][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:09:20.481][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:09:20.468-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:09:20.536][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:09:20.537][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:09:20.537][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:09:20.537][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:09:20.538][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:09:20.539][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:09:20.539][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:09:41.541][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:09:41.541][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:09:41.541][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:09:41.546][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:09:41.546][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:09:41.547][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:09:41.548][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:09:41.548][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:09:41.548][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:09:41.769][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:09:41.770][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:09:41.787][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:09:41.788][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:09:41.789][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:09:41.791][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:09:41.791][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:09:41.792][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:09:41.792][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:09:41.792][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:09:41.792][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:09:41.792][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:41.792][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:41.792][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:09:41.792][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:09:41.793][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:09:41.793][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:09:41.793][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:09:41.793][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:09:41.794][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:09:41.792, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:09:41.794][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:09:41.795][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:09:41.795][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:09:41.792, lastUpdatedStamp:2018-04-10 00:09:41.794, jobRunId:100881]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:09:41.795][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:09:41.795][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:09:41.795][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:09:41.795][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:10:20.469][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:10:20.470][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:10:20.470][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:10:20.470][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:10:20.470][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:10:20.470][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:10:20.470][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100882, lastRunTime:2018-04-10 00:10:20.469, lastUpdatedStamp:2018-04-10 00:10:20.469, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:10:20.470][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:10:20.471][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:10:20.471][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:10:20.471][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:10:20.471][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100882 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:09-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:10:20.472][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:10:20.473][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:10:20.473][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:10:20.473][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:10:20.474][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:10:20.469-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:10:20.474][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:10:20.475][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:10:20.475][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:10:20.475][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:10:20.475][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:10:20.475][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:10:20.473, lastUpdatedStamp:2018-04-10 00:10:20.474, jobRunId:100882]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:10:20.475][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:10:20.475][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:10:20.475][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:10:20.475][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:10:20.539][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:10:20.540][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:10:20.540][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:10:20.541][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:10:20.541][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:10:20.542][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:10:20.542][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:10:41.550][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:10:41.550][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:10:41.550][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:10:41.554][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:10:41.554][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:10:41.556][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:10:41.556][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:10:41.556][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:10:41.556][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:10:41.823][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:10:41.825][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:10:41.842][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:10:41.844][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:10:41.845][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:10:41.846][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:10:41.846][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:10:41.847][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:10:41.847][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:10:41.848][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:10:41.848][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:10:41.847, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:10:41.848][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:10:41.848][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:10:41.848][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:10:41.848][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:10:41.849][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:10:41.849][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:10:41.847, lastUpdatedStamp:2018-04-10 00:10:41.848, jobRunId:100882]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:10:41.849][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:11:20.471][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:11:20.471][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:11:20.472][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:11:20.472][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:11:20.472][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:11:20.472][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:11:20.472][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100883, lastRunTime:2018-04-10 00:11:20.471, lastUpdatedStamp:2018-04-10 00:11:20.471, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:11:20.473][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:11:20.473][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:11:20.473][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:11:20.473][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:11:20.473][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100883 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:09-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:11:20.475][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:11:20.475][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:11:20.475][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:11:20.475][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:11:20.476][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:11:20.475, lastUpdatedStamp:2018-04-10 00:11:20.475, jobRunId:100883]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:11:20.476][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:11:20.476][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:11:20.476][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:11:20.476][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:11:20.476][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:11:20.476][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:11:20.477][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:11:20.471-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:11:20.540][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:11:20.541][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:11:20.541][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:11:20.541][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:11:20.541][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:11:20.543][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:11:20.543][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:11:41.536][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:11:41.536][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:11:41.537][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:11:41.540][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:11:41.540][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:11:41.542][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:11:41.542][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:11:41.542][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:11:41.542][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:11:41.759][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:11:41.760][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:11:41.780][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:11:41.782][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:11:41.783][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:11:41.785][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:11:41.786][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:11:41.786][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:11:41.786][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:11:41.786][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:11:41.786][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:11:41.787][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:11:41.787][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:11:41.786, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:11:41.787][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:11:41.788][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:11:41.788][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:11:41.789][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:11:41.786, lastUpdatedStamp:2018-04-10 00:11:41.788, jobRunId:100883]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:11:41.789][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:11:41.789][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:11:41.789][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:11:41.789][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:12:20.473][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:12:20.474][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:12:20.474][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:12:20.474][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:12:20.474][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:12:20.475][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:12:20.475][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100884, lastRunTime:2018-04-10 00:12:20.473, lastUpdatedStamp:2018-04-10 00:12:20.473, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:12:20.475][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100884 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:12-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:12:20.477][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:12:20.477][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:12:20.478][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:12:20.477, lastUpdatedStamp:2018-04-10 00:12:20.477, jobRunId:100884]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:12:20.478][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:12:20.478][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:12:20.478][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:12:20.478][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:12:20.481][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:12:20.482][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:12:20.482][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:12:20.483][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:12:20.483][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:12:20.473-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:12:20.541][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:12:20.542][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:12:20.542][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:12:20.543][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:12:20.543][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:12:20.544][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:12:20.544][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:12:41.546][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:12:41.546][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:12:41.546][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:12:41.551][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:12:41.551][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:12:41.554][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:12:41.554][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:12:41.554][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:12:41.554][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:12:41.775][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:12:41.776][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:12:41.794][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:12:41.795][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:12:41.796][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:12:41.798][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:12:41.798][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:12:41.798][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:12:41.798][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:12:41.798][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:12:41.798][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:12:41.798][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:41.798][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:41.798][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:12:41.798][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:12:41.799][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:12:41.799][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:12:41.799][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:12:41.799][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:12:41.799][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:12:41.798, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:12:41.799][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:12:41.799][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:12:41.799][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:12:41.799][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:12:41.800][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:12:41.800][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:12:41.798, lastUpdatedStamp:2018-04-10 00:12:41.8, jobRunId:100884]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:12:41.800][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:13:20.476][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.476][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:13:20.477][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.477][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:13:20.477][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.478][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.478][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.478][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:13:20.478][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:13:20.478][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:13:20.478][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:13:20.478][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.478][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100885, lastRunTime:2018-04-10 00:13:20.476, lastUpdatedStamp:2018-04-10 00:13:20.476, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.481][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:13:20.481][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:13:20.481][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:13:20.481][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:13:20.481][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100885 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:12-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:13:20.483][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.484][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.484][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.486][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.487][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.487][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.487][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.487][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:13:20.488][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:13:20.487][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.487][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:13:20.488][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:13:20.489][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:13:20.490][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:13:20.487, lastUpdatedStamp:2018-04-10 00:13:20.487, jobRunId:100885]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.490][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:13:20.490][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:13:20.490][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:13:20.490][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:13:20.490][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:13:20.490][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:13:20.491][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:13:20.476-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:13:20.492][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:13:20.493][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:20.551][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:13:20.552][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:13:20.553][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:13:20.553][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:13:20.553][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:13:20.555][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:13:20.555][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:13:41.554][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:13:41.554][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:13:41.554][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:13:41.557][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:13:41.557][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:13:41.559][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:13:41.559][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:13:41.559][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:13:41.559][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:13:41.791][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:13:41.792][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:13:41.804][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:13:41.806][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:13:41.807][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:13:41.809][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:13:41.809][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:13:41.810][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:13:41.810][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:13:41.810][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:13:41.810][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:13:41.81, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:13:41.811][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:13:41.811][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:13:41.812][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:13:41.81, lastUpdatedStamp:2018-04-10 00:13:41.811, jobRunId:100885]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:13:41.812][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:13:41.812][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:13:41.812][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:13:41.812][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:14:20.478][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:14:20.478][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:14:20.479][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:14:20.479][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:14:20.479][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:14:20.479][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:14:20.480][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100886, lastRunTime:2018-04-10 00:14:20.478, lastUpdatedStamp:2018-04-10 00:14:20.478, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:14:20.480][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:14:20.480][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:14:20.480][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:14:20.480][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:14:20.480][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100886 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:12-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:14:20.516][INFO ](pool-2-thread-2) Found entities in 20 files in 35ms [EntityFacadeImpl.class]
[15:14:20.516][INFO ](pool-2-thread-2) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:14:20.516][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:14:20.516][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:14:20.517][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:14:20.517][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:14:20.517][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:14:20.518][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:14:20.518][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:14:20.518][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:14:20.516, lastUpdatedStamp:2018-04-10 00:14:20.516, jobRunId:100886]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:14:20.519][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:14:20.519][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:14:20.519][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:14:20.519][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:14:20.519][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:14:20.519][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:14:20.478-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:14:20.576][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:14:20.577][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:14:20.577][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:14:20.578][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:14:20.578][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:14:20.579][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:14:20.579][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:14:41.571][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:14:41.571][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:14:41.571][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:14:41.575][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:14:41.575][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:14:41.577][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:14:41.577][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:14:41.577][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:14:41.577][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:14:41.815][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:14:41.816][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:14:41.830][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:14:41.832][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:14:41.834][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:14:41.836][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:14:41.836][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:14:41.837][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:14:41.837][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:14:41.837][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:14:41.838][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:14:41.837, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:14:41.838][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:14:41.839][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:14:41.839][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:14:41.839][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:14:41.837, lastUpdatedStamp:2018-04-10 00:14:41.838, jobRunId:100886]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:14:41.839][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:14:41.839][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:14:41.839][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:14:41.839][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:15:20.480][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:15:20.481][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:15:20.481][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:15:20.481][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:15:20.481][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:15:20.481][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:15:20.485][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100887, lastRunTime:2018-04-10 00:15:20.48, lastUpdatedStamp:2018-04-10 00:15:20.48, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:15:20.486][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:15:20.486][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:15:20.486][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:15:20.486][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:15:20.486][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100887 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:15-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:15:20.490][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:15:20.490][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:15:20.491][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:15:20.49, lastUpdatedStamp:2018-04-10 00:15:20.49, jobRunId:100887]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:15:20.491][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:15:20.491][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:15:20.491][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:15:20.491][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:15:20.496][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:15:20.496][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:15:20.498][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:15:20.498][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:15:20.498][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:15:20.480-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:15:20.547][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:15:20.548][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:15:20.548][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:15:20.549][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:15:20.549][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:15:20.551][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:15:20.551][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:15:41.552][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:15:41.552][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:15:41.552][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:15:41.555][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:15:41.555][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:15:41.557][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:15:41.557][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:15:41.557][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:15:41.557][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:15:42.044][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:15:42.046][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:15:42.059][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:15:42.060][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:15:42.061][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:15:42.063][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:15:42.063][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:15:42.064][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:15:42.064][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:15:42.064][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:15:42.064][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:15:42.064][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:42.064][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:42.064][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:15:42.064][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:15:42.065][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:15:42.065][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:15:42.065][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:15:42.065][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:15:42.066][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:15:42.064, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:15:42.066][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:15:42.066][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:15:42.066][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:15:42.066][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:15:42.067][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:15:42.067][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:15:42.068][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:15:42.064, lastUpdatedStamp:2018-04-10 00:15:42.067, jobRunId:100887]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:15:42.068][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:15:42.068][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:15:42.068][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:15:42.068][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:16:20.484][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:16:20.484][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:16:20.485][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:16:20.485][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:16:20.485][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:16:20.485][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100888, lastRunTime:2018-04-10 00:16:20.483, lastUpdatedStamp:2018-04-10 00:16:20.484, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:16:20.485][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:16:20.486][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100888 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:15-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:16:20.488][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:16:20.488][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:16:20.489][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:16:20.488, lastUpdatedStamp:2018-04-10 00:16:20.488, jobRunId:100888]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:16:20.489][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:16:20.489][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:16:20.489][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:16:20.489][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:16:20.495][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:16:20.495][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:16:20.496][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:16:20.496][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:16:20.496][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:16:20.483-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:16:20.544][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:16:20.545][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:16:20.546][DEBUG](MoquiWorker-2) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:16:20.547][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:16:20.547][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:16:20.550][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:16:20.550][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:16:41.551][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:16:41.551][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:16:41.551][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:16:41.552][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:16:41.553][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:16:41.554][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:16:41.554][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:16:41.554][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:16:41.554][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:16:41.788][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:16:41.789][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:16:41.803][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:16:41.805][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:16:41.806][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:16:41.808][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:16:41.808][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:16:41.809][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:16:41.809][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:16:41.809][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:16:41.809, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:16:41.809][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:16:41.810][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:16:41.810][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:16:41.811][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:16:41.809, lastUpdatedStamp:2018-04-10 00:16:41.81, jobRunId:100888]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:16:41.811][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:16:41.811][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:16:41.811][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:16:41.811][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:17:20.485][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:17:20.485][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:17:20.485][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:17:20.485][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:17:20.486][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:17:20.486][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100889, lastRunTime:2018-04-10 00:17:20.484, lastUpdatedStamp:2018-04-10 00:17:20.485, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:17:20.486][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100889 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:15-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:17:20.491][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:17:20.491][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:17:20.491][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:17:20.492][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:17:20.492][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:17:20.491, lastUpdatedStamp:2018-04-10 00:17:20.491, jobRunId:100889]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:17:20.492][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:17:20.493][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:17:20.493][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:17:20.496][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:17:20.496][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:17:20.497][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:17:20.497][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:17:20.498][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:17:20.484-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:17:20.554][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:17:20.555][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:17:20.555][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:17:20.555][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:17:20.556][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:17:20.557][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:17:20.557][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:17:41.558][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:17:41.558][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:17:41.558][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:17:41.562][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:17:41.562][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:17:41.564][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:17:41.564][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:17:41.564][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:17:41.565][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:17:41.789][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:17:41.790][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:17:41.806][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:17:41.808][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:17:41.810][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:17:41.812][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:17:41.812][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:17:41.813][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:17:41.813][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:17:41.813][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:17:41.814][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:17:41.813, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:17:41.814][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:17:41.814][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:17:41.814][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:17:41.814][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:17:41.814][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:17:41.814][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:17:41.815][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:17:41.815][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:17:41.813, lastUpdatedStamp:2018-04-10 00:17:41.814, jobRunId:100889]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:17:41.815][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:18:20.487][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:18:20.487][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:18:20.488][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:18:20.488][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:18:20.488][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:18:20.488][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:18:20.488][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100890, lastRunTime:2018-04-10 00:18:20.487, lastUpdatedStamp:2018-04-10 00:18:20.487, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:18:20.488][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:18:20.489][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:18:20.489][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:18:20.489][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:18:20.489][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100890 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:18-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:18:20.491][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:18:20.491][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:18:20.491][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:18:20.492][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:18:20.492][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:18:20.493][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:18:20.487-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:18:20.493][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:18:20.493][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:18:20.491, lastUpdatedStamp:2018-04-10 00:18:20.491, jobRunId:100890]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:18:20.493][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:18:20.493][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:18:20.493][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:18:20.493][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:18:20.562][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:18:20.562][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:18:20.563][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:18:20.563][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:18:20.563][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:18:20.565][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:18:20.565][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:18:41.567][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:18:41.567][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:18:41.567][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:18:41.571][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:18:41.571][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:18:41.573][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:18:41.573][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:18:41.573][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:18:41.573][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:18:41.813][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:18:41.814][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:18:41.831][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:18:41.832][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:18:41.834][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:18:41.835][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:18:41.835][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:18:41.836][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:18:41.836][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:18:41.836][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:18:41.837][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:18:41.836, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:41.837][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:18:41.838][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:18:41.839][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:18:41.839][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:18:41.839][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:18:41.839][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:18:41.839][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:18:41.839][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:18:41.836, lastUpdatedStamp:2018-04-10 00:18:41.837, jobRunId:100890]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:18:41.840][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:18:41.840][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:18:41.840][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:18:41.840][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:19:20.489][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:19:20.491][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:19:20.492][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:19:20.492][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:19:20.492][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:19:20.492][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:19:20.492][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:19:20.492][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:19:20.492][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:19:20.492][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:19:20.492][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:19:20.493][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:19:20.493][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100891, lastRunTime:2018-04-10 00:19:20.489, lastUpdatedStamp:2018-04-10 00:19:20.489, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:19:20.493][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:19:20.493][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100891 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:18-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:19:20.498][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:19:20.498][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:19:20.500][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:19:20.500][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:19:20.500][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:19:20.501][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:19:20.489-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:19:20.501][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:19:20.502][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:19:20.502][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:19:20.503][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:19:20.5, lastUpdatedStamp:2018-04-10 00:19:20.5, jobRunId:100891]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:19:20.503][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:19:20.503][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:19:20.503][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:19:20.503][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:19:20.567][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:19:20.585][INFO ](MoquiWorker-3) Found entities in 20 files in 18ms [EntityFacadeImpl.class]
[15:19:20.585][INFO ](MoquiWorker-3) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:19:20.586][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:19:20.586][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, CHANNEL_BEGIN, CHANNEL_END, SIGN_CHECK_FLAG, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:19:20.586][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:19:20.586][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:19:20.588][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:19:20.588][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:19:41.590][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:19:41.591][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:19:41.591][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:19:41.594][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:19:41.594][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:19:41.596][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:19:41.596][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:19:41.596][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:19:41.596][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:19:41.842][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:19:41.842][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:19:41.855][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:19:41.858][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:19:41.859][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:19:41.861][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:19:41.861][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:19:41.862][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:19:41.862][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:19:41.862][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:19:41.863][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:19:41.862, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:19:41.863][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:19:41.863][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:19:41.863][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:19:41.863][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:19:41.863][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:19:41.863][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:19:41.863][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:19:41.864][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:19:41.865][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:19:41.865][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:19:41.866][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:19:41.866][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:19:41.862, lastUpdatedStamp:2018-04-10 00:19:41.863, jobRunId:100891]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:19:41.866][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:19:41.866][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:19:41.866][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:19:41.866][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:20:20.492][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:20:20.492][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:20:20.493][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:20:20.493][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:20:20.493][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:20:20.493][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100892, lastRunTime:2018-04-10 00:20:20.492, lastUpdatedStamp:2018-04-10 00:20:20.492, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:20:20.493][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100892 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:18-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:20:20.496][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:20:20.496][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:20:20.496][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:20:20.497][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:20:20.498][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:20:20.496, lastUpdatedStamp:2018-04-10 00:20:20.496, jobRunId:100892]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:20:20.498][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:20:20.498][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:20:20.498][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:20:20.498][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:20:20.498][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:20:20.498][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:20:20.498][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:20:20.492-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:20:20.570][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:20:20.573][DEBUG](MoquiWorker-2) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:20:20.582][ERROR](MoquiWorker-2) Error running groovy script (org.moqui.entity.EntityException: Error finding list of Channel by null): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """========行内对账开始========""", null)
7 :     Channel_xafind = ec.entity.find("nacs.channel.Channel")
8 :             
9 :             Channel = Channel_xafind.list()
10 :     flg = basicConvert("""true""", "Boolean")
11 :     if (flg) {
12 :     ec.logger.log("info", """============通道对账全成功开始行内对账=============""", null)
13 :     ec.logger.log("info", """============调核心对账=============""", null)
14 :     if (true) {
15 :         ec.service.sync().name("nacs.be.SignToBeService.sign#Be")
16 :             .call()
17 :         
18 :         if (ec.message.hasError()) return
19 :     }
20 :     checkFileName = ("""pufahexin.txt""")
21 :     localFile = ("""${'/home/nacs/'+checkFileName}""")
22 :     ec.logger.log("info", """===去核心取对账文件===""", null)
23 :     if (true) {
24 :         def call_service_result = ec.service.sync().name("nacs.check.DownloadServices.download#ChkBeFile").requireNewTransaction(true).useTransactionCache(false)
25 :             .parameters([hostNo:2,localFile:localFile,remoteFile:remoteFile]).call()
26 :         if (context != null) { if (call_service_result) context.putAll(call_service_result) } else { context = call_service_result }
27 :         if (ec.message.hasError()) return
28 :     }
29 :     ec.logger.log("info", """===核心对账文件落地成功===""", null)
30 :     fileName = (localFile)
31 :     if (true) {
32 :         def call_service_result = ec.service.sync().name("nacs.check.RegisterServices.register#ChkCoreFile").requireNewTransaction(true).useTransactionCache(false)
33 :             .parameters([fileName:fileName]).call()
34 :         if (context != null) { if (call_service_result) context.putAll(call_service_result) } else { context = call_service_result }
35 :         if (ec.message.hasError()) return
36 :     }
37 :     }
38 : 
39 : // make sure the last statement is not considered the return value
40 : return;
41 : 

 [XmlAction.class]
[15:20:20.583][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.CheckMainServices.check#ChkBeFile (Throwable) [TransactionFacadeImpl.class]
org.moqui.entity.EntityException: Error finding list of Channel by null
	at org.moqui.impl.entity.EntityFindBase.listInternal(EntityFindBase.groovy:1065) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBase.list(EntityFindBase.groovy:929) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
Caused by: org.moqui.entity.EntityException: SQL Exception with statement:SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL; org.h2.jdbc.JdbcSQLException: Column "TRX_CTGY" not found; SQL statement:
SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [42122-196]
	at org.moqui.impl.entity.EntityQueryBuilder.handleSqlException(EntityQueryBuilder.java:66) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBuilder.makePreparedStatement(EntityFindBuilder.java:670) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindImpl.iteratorExtended(EntityFindImpl.java:143) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBase.listInternal(EntityFindBase.groovy:1063) ~[moqui-framework-2.1.0.jar:2.1.0]
	... 11 more
Caused by: org.h2.jdbc.JdbcSQLException: Column "TRX_CTGY" not found; SQL statement:
SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [42122-196]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.dml.Select.prepare(Select.java:839) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.Parser.prepareCommand(Parser.java:263) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.engine.Session.prepareLocal(Session.java:578) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.engine.Session.prepareCommand(Session.java:519) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1204) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:677) ~[h2-1.4.196.jar:1.4.196]
	at bitronix.tm.resource.jdbc.proxy.ConnectionJavaProxy.prepareStatement(ConnectionJavaProxy.java:281) ~[btm-3.0.0-SNAPSHOT.jar:3.0.0-SNAPSHOT]
	at org.moqui.impl.context.ContextJavaUtil$ConnectionWrapper.prepareStatement(ContextJavaUtil.java:383) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBuilder.makePreparedStatement(EntityFindBuilder.java:664) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindImpl.iteratorExtended(EntityFindImpl.java:143) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBase.listInternal(EntityFindBase.groovy:1063) ~[moqui-framework-2.1.0.jar:2.1.0]
	... 11 more
[15:20:20.586][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:20:20.587][WARN ](MoquiWorker-2) Error running service nacs.check.CheckMainServices.check#ChkBeFile (Throwable) [ServiceCallSyncImpl.class]
org.moqui.entity.EntityException: Error finding list of Channel by null
	at org.moqui.impl.entity.EntityFindBase.listInternal(EntityFindBase.groovy:1065) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBase.list(EntityFindBase.groovy:929) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
Caused by: org.moqui.entity.EntityException: SQL Exception with statement:SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL; org.h2.jdbc.JdbcSQLException: Column "TRX_CTGY" not found; SQL statement:
SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [42122-196]
	at org.moqui.impl.entity.EntityQueryBuilder.handleSqlException(EntityQueryBuilder.java:66) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBuilder.makePreparedStatement(EntityFindBuilder.java:670) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindImpl.iteratorExtended(EntityFindImpl.java:143) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBase.listInternal(EntityFindBase.groovy:1063) ~[moqui-framework-2.1.0.jar:2.1.0]
	... 11 more
Caused by: org.h2.jdbc.JdbcSQLException: Column "TRX_CTGY" not found; SQL statement:
SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [42122-196]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.dml.Select.prepare(Select.java:839) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.Parser.prepareCommand(Parser.java:263) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.engine.Session.prepareLocal(Session.java:578) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.engine.Session.prepareCommand(Session.java:519) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1204) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:677) ~[h2-1.4.196.jar:1.4.196]
	at bitronix.tm.resource.jdbc.proxy.ConnectionJavaProxy.prepareStatement(ConnectionJavaProxy.java:281) ~[btm-3.0.0-SNAPSHOT.jar:3.0.0-SNAPSHOT]
	at org.moqui.impl.context.ContextJavaUtil$ConnectionWrapper.prepareStatement(ContextJavaUtil.java:383) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBuilder.makePreparedStatement(EntityFindBuilder.java:664) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindImpl.iteratorExtended(EntityFindImpl.java:143) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityFindBase.listInternal(EntityFindBase.groovy:1063) ~[moqui-framework-2.1.0.jar:2.1.0]
	... 11 more
[15:20:20.589][ERROR](MoquiWorker-2) Error finding list of Channel by null [MessageFacadeImpl.class]
[15:20:20.590][ERROR](MoquiWorker-2) SQL Exception with statement:SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL; org.h2.jdbc.JdbcSQLException: Column "TRX_CTGY" not found; SQL statement:
SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [42122-196] [MessageFacadeImpl.class]
[15:20:20.590][ERROR](MoquiWorker-2) Column "TRX_CTGY" not found; SQL statement:
SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [42122-196] [MessageFacadeImpl.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:20:20.590][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:20:20.591][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:20:20.591][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:20:20.59, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:20:20.591][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:20:20.591][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:20:20.591][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:20:20.591][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:20:20.592][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:20:20.592][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:null, messages:null, hasError:Y, errors:Error finding list of Channel by null
SQL Exception with statement:SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL; org.h2.jdbc.JdbcSQLException: Column "TRX_CTGY" not found; SQL statement:
SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [42122-196]
Column "TRX_CTGY" not found; SQL statement:
SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [42122-196]
, endTime:2018-04-10 00:20:20.59, lastUpdatedStamp:2018-04-10 00:20:20.592, jobRunId:100892]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:20:20.592][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:21:10.855][INFO ](main) Loading Webapp 'webroot' (Moqui Root Webapp) on ROOT, located at: D:\IDEAWorkSpace\trunk\execwartmp\ROOT\webapp [MoquiContextListener.class]
[15:21:11.263][INFO ](main) Initializing Moqui Framework version 2.1.0
 - runtime directory: D:\IDEAWorkSpace\trunk\runtime
 - runtime config:    D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:21:11.951][INFO ](main) Added component tools              at file:D:/IDEAWorkSpace/trunk/runtime/base-component/tools [ExecutionContextFactoryImpl.class]
[15:21:11.971][INFO ](main) Added component webroot            at file:D:/IDEAWorkSpace/trunk/runtime/base-component/webroot [ExecutionContextFactoryImpl.class]
[15:21:11.978][INFO ](main) Added component nacs-access        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-access [ExecutionContextFactoryImpl.class]
[15:21:11.983][INFO ](main) Added component nacs-admin         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-admin [ExecutionContextFactoryImpl.class]
[15:21:11.986][INFO ](main) Added component nacs-be            at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be [ExecutionContextFactoryImpl.class]
[15:21:11.990][INFO ](main) Added component nacs-be-spd        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be-spd [ExecutionContextFactoryImpl.class]
[15:21:11.994][INFO ](main) Added component nacs-channel       at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel [ExecutionContextFactoryImpl.class]
[15:21:11.999][INFO ](main) Added component nacs-channel-unionpay at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel-unionpay [ExecutionContextFactoryImpl.class]
[15:21:12.004][INFO ](main) Added component nacs-check         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-check [ExecutionContextFactoryImpl.class]
[15:21:12.008][INFO ](main) Added component nacs-clear         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-clear [ExecutionContextFactoryImpl.class]
[15:21:12.013][INFO ](main) Added component nacs-main          at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-main [ExecutionContextFactoryImpl.class]
[15:21:12.017][INFO ](main) Added component nacs-mrchnt        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-mrchnt [ExecutionContextFactoryImpl.class]
[15:21:12.020][INFO ](main) Added component nacs-route         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-route [ExecutionContextFactoryImpl.class]
[15:21:12.025][INFO ](main) Added component nacs-udm           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-udm [ExecutionContextFactoryImpl.class]
[15:21:12.029][INFO ](main) Added component nacs-usl           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-usl [ExecutionContextFactoryImpl.class]
[15:21:12.030][INFO ](main) Components after depends-on sort: [tools, webroot, nacs-access, nacs-udm, nacs-admin, nacs-be, nacs-be-spd, nacs-channel, nacs-channel-unionpay, nacs-check, nacs-clear, nacs-main, nacs-mrchnt, nacs-route, nacs-usl] [ExecutionContextFactoryImpl.class]
[15:21:12.058][INFO ](main) Merging runtime configuration at D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:21:12.129][INFO ](main) Found default_time_zone US/Pacific: sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:21:12.130][INFO ](main) Default locale en_US, time zone sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:21:12.388][INFO ](main) Initializing worker ThreadPoolExecutor: queue limit 65535, pool-core 4, pool-max 16, pool-alive 60s [ExecutionContextFactoryImpl.class]
[15:21:12.574][INFO ](main) Added JARs from component webroot: [closure-compiler-v20160208.jar, gradle-js-plugin-2.14.1.jar, html2js-0.1.jar] [ExecutionContextFactoryImpl.class]
[15:21:12.680][INFO ](main) Added JARs from component nacs-be-spd: [cxf-2.7.18.jar, cxf-rt-ws-policy-2.7.18.jar, dom4j-1.6.1.jar, nacs-be-spd-1.0.0.jar, wsdl4j-1.6.3.jar] [ExecutionContextFactoryImpl.class]
[15:21:12.757][INFO ](main) Added JARs from component nacs-channel-unionpay: [bcprov-jdk15on-1.54.jar, commons-codec-1.6.jar, commons-io-2.2.jar, commons-lang-2.5.jar, javax.servlet-api-3.1.0.jar, log4j-1.2.17.jar, nacs-channel-unionpay-1.0.0.jar, nacs-unionpay-1.0.0.jar, slf4j-api-1.5.11.jar, slf4j-log4j12-1.5.11.jar, upacp_sdk-1.1.0-20151216.jar] [ExecutionContextFactoryImpl.class]
[15:21:12.766][INFO ](main) Added JARs from component nacs-check: [nacs-check-1.0.0.jar] [ExecutionContextFactoryImpl.class]
[15:21:12.784][INFO ](main) Added JARs from component nacs-usl: [commons-net-1.4.1.jar, javolution-5.4.3.jar] [ExecutionContextFactoryImpl.class]
[15:21:12.784][INFO ](main) Initialized ClassLoader in 373ms [ExecutionContextFactoryImpl.class]
[15:21:12.790][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.JackrabbitRunToolFactory [ExecutionContextFactoryImpl.class]
[15:21:12.790][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.SubEthaSmtpToolFactory [ExecutionContextFactoryImpl.class]
[15:21:12.796][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.MCacheToolFactory [ExecutionContextFactoryImpl.class]
[15:21:12.813][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.H2ServerToolFactory [ExecutionContextFactoryImpl.class]
[15:21:12.851][INFO ](main) Cache Facade initialized [ExecutionContextFactoryImpl.class]
[15:21:13.222][INFO ](main) Resource Facade initialized [ExecutionContextFactoryImpl.class]
[15:21:13.299][INFO ](main) Bitronix Transaction Manager version 3.0.0-SNAPSHOT [BitronixTransactionManager.class]
[15:21:13.311][WARN ](main) Cannot get the unique server ID for this JVM ('bitronix.tm.serverId'). Make sure it is configured and you use only US-ASCII characters. Will use IP address instead (unsafe for production usage!). [Configuration.class]
[15:21:13.312][INFO ](main) JVM unique ID: <192.168.191.1> - Using this server ID to ensure uniqueness of transaction IDs across the network. [Configuration.class]
[15:21:13.326][WARN ](main) active log file is unclean, did you call BitronixTransactionManager.shutdown() at the end of the last run? [DiskJournal.class]
[15:21:13.608][INFO ](main) recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 0 resource(s) [] (restricted to serverId '192.168.191.1') [Recoverer.class]
[15:21:13.630][INFO ](main) Transaction Facade initialized [ExecutionContextFactoryImpl.class]
[15:21:13.735][INFO ](main) Database time zone is sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [EntityFacadeImpl.class]
[15:21:13.892][INFO ](main) Initializing DataSource transactional_DS (h2) with properties: [user:sa, url:jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui;lock_timeout=30000] [TransactionInternalBitronix.class]
[15:21:16.041][INFO ](main) incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [transactional_DS] (restricted to serverId '192.168.191.1') [IncrementalRecoverer.class]
[15:21:16.042][INFO ](main) Init DataSource transactional_DS (h2) isolation READ_COMMITTED (2), max pool 50 [TransactionInternalBitronix.class]
[15:21:16.065][INFO ](main) Loaded 0 Entity ECA rules from 0 .eecas.xml files [EntityFacadeImpl.class]
[15:21:16.081][INFO ](main) Entity Cache initialized, distributed cache invalidate enabled: false [EntityCache.class]
[15:21:16.139][INFO ](main) Entity Facade initialized [ExecutionContextFactoryImpl.class]
[15:21:16.193][INFO ](main) Loaded 0 Service ECA rules from 0 .secas.xml files [ServiceFacadeImpl.class]
[15:21:16.352][INFO ](main) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[15:21:16.357][INFO ](main) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[15:21:16.360][INFO ](main) Loaded REST API files, 2 roots, in 151ms [RestApi.class]
[15:21:16.410][INFO ](main) No distributed-factory specified, distributed async service calls will be run local only [ServiceFacadeImpl.class]
[15:21:16.439][INFO ](main) Service Facade initialized [ExecutionContextFactoryImpl.class]
[15:21:16.458][INFO ](main) Screen Facade initialized [ExecutionContextFactoryImpl.class]
[15:21:16.459][INFO ](main) Loading entity definitions [ExecutionContextFactoryImpl.class]
[15:21:16.615][INFO ](main) Found entities in 20 files in 154ms [EntityFacadeImpl.class]
[15:21:16.920][INFO ](main) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:21:17.505][INFO ](main) Loaded 199 entity definitions in 1046ms [ExecutionContextFactoryImpl.class]
[15:21:17.505][INFO ](main) Initializing ToolFactory: MCache [ExecutionContextFactoryImpl.class]
[15:21:17.506][INFO ](main) Initializing ToolFactory: H2Server [ExecutionContextFactoryImpl.class]
[15:21:17.603][INFO ](main) Started H2 remote server on port 9092 status: TCP server running at tcp://192.168.191.1:9092 (only local connections) [H2ServerToolFactory.class]
[15:21:17.605][INFO ](main) H2 args: [-tcpPort, 9092, -ifExists, -baseDir, D:\IDEAWorkSpace\trunk\runtime/db/h2] [H2ServerToolFactory.class]
[15:21:17.615][INFO ](main) Found shutdown hook: org.eclipse.jetty.util.thread.ShutdownThread Thread[Thread-0,5,main] [H2ServerToolFactory.class]
[15:21:17.615][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-12,5,main] [H2ServerToolFactory.class]
[15:21:17.615][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-13,5,main] [H2ServerToolFactory.class]
[15:21:17.615][INFO ](main) Found shutdown hook: java.lang.Thread Thread[pool-1-thread-1,5,main] [H2ServerToolFactory.class]
[15:21:17.616][INFO ](main) Found shutdown hook: java.util.logging.LogManager$Cleaner Thread[Thread-9,5,main] [H2ServerToolFactory.class]
[15:21:18.083][INFO ](main) Execution Context Factory initialized in 7.011 seconds [ExecutionContextFactoryImpl.class]
[15:21:18.112][DEBUG](main) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM ENUMERATION [EntityFindBuilder.class]
[15:21:18.114][DEBUG](main) Executed query with SQL [SELECT COUNT(*)  FROM ENUMERATION] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:21:18.117][INFO ](main) Found 289 Enumeration records, NOT loading empty-db-load data types (all) [ExecutionContextFactoryImpl.class]
[15:21:18.293][INFO ](main) Initializing webapp webroot http://null:null https://null:null https enabled? false [ExecutionContextFactoryImpl.class]
[15:21:18.305][INFO ](main) Added webapp listener org.moqui.impl.webapp.MoquiSessionListener [MoquiContextListener.class]
[15:21:18.399][INFO ](main) Added servlet MoquiServlet on: [/*] [MoquiContextListener.class]
[15:21:18.409][INFO ](main) Added servlet MoquiFopServlet on: [/fop/*] [MoquiContextListener.class]
[15:21:18.417][INFO ](main) Added servlet H2Console on: [/h2/*] [MoquiContextListener.class]
[15:21:18.417][INFO ](main) Found WebSocket ServerContainer org.eclipse.jetty.websocket.jsr356.server.ServerContainer [MoquiContextListener.class]
[15:21:18.452][INFO ](main) Added WebSocket endpoint /notws for class org.moqui.impl.webapp.NotificationEndpoint [MoquiContextListener.class]
[15:21:18.452][INFO ](main) Moqui Framework initialized in 7.625 seconds [MoquiContextListener.class]
[15:21:18.486][INFO ](main) MoquiServlet initialized for webapp webroot [MoquiServlet.class]
[15:21:31.073][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.109][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.150][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.151][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.152][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.173][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.200][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.207][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.208][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.211][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.212][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.218][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.232][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.237][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.238][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.239][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.240][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.241][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.249][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.251][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.251][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.252][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.253][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.253][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.264][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.265][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.265][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.266][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.267][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.268][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.273][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.275][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.275][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.276][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.277][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.278][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.283][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.284][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.285][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.285][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.286][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:31.299][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.305][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:31.306][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.341][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ? [EntityFindBuilder.class]
[15:21:31.342][DEBUG](qtp379110473-13) Executed query with SQL [SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ?] and parameters [[visitorId:100102]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.362][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ? [EntityFindBuilder.class]
[15:21:31.367][DEBUG](qtp379110473-15) Executed query with SQL [SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ?] and parameters [[visitorId:100102]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.442][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:21:31.480][DEBUG](qtp379110473-13) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ALL_USERS]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.542][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:21:31.547][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.Visit]] in [0] seconds [EntityQueryBuilder.class]
[15:21:31.548][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:21:31.548][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:21:31.549][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:21:31.563][INFO ](RequireNewTx) Built entity.data.feed.info cache for in 13ms, entries for 0 entities [EntityDataFeed.class]
[15:21:31.563][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:21:31.564][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:21:31.564][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:21:31.564][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:21:31.565][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:21:31.565][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:21:31.567][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:21:31.567][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:21:31.570][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:21:31.574][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100807, lastUpdatedStamp:2018-04-10 00:21:31.53, seqName:moqui.server.Visit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:31.575][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:21:31.575][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:21:31.576][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:21:31.576][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:21:31.615][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:31.621][DEBUG](qtp379110473-13) Executed update with SQL [INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:31.624][INFO ](qtp379110473-13) Created new Visit with ID [100707] in session [node08p9bdr8gccxr1c8ueqikib1rg1] [UserFacadeImpl.class]
[15:21:31.666][DEBUG](qtp379110473-15) making crud PreparedStatement for SQL: INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:31.774][DEBUG](qtp379110473-15) Executed update with SQL [INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:31.782][INFO ](qtp379110473-15) Created new Visit with ID [100708] in session [node02e7b23m1xb09u6mpxsnrja9d0] [UserFacadeImpl.class]
[15:21:32.695][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:32.695][DEBUG](qtp379110473-16) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/vapps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:32.818][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:21:32.823][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHit]] in [0] seconds [EntityQueryBuilder.class]
[15:21:32.830][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:21:32.831][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:21:32.831][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:21:32.831][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:21:32.832][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:21:32.832][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:21:32.832][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:21:32.832][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:21:32.834][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:21:32.834][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:21:32.835][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:21:32.839][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:21:32.892][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100908, lastUpdatedStamp:2018-04-10 00:21:32.818, seqName:moqui.server.ArtifactHit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:32.892][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:21:32.893][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:21:32.893][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:21:32.893][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:21:32.908][INFO ](qtp379110473-16) Redirecting to /Login instead of rendering [vapps, nacs-admin, Channel, ChannelList] [ScreenRenderImpl.class]
[15:21:32.921][INFO ](qtp379110473-16) vapps/nacs-admin/Channel/ChannelList [] in 230ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:32.937][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:32.946][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:32.946][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:32.947][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:32.964][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:32.964][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/Login.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.553][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.554][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.554][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.555][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.556][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.557][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.562][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.563][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.564][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.565][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.565][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.566][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.580][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:21:33.583][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_STYLESHEET]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.625][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:21:33.626][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SCRIPT]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.627][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:21:33.628][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SHORTCUT_ICON]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.631][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:21:33.632][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_BODY_CLASS]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.713][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.714][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.714][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.715][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.715][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.716][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.717][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.717][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.718][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.719][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.720][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.721][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.800][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT [EntityFindBuilder.class]
[15:21:33.801][DEBUG](qtp379110473-12) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.810][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.811][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.811][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.812][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.813][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.813][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.823][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.824][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.825][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.825][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.826][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.826][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.831][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.836][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.837][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.838][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.839][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.840][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.841][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.842][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.844][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.846][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.879][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.880][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.888][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.889][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.889][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.890][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.891][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.891][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.893][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.894][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.894][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.895][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.896][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.896][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.897][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.898][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.899][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.899][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.900][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.901][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.902][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.903][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.904][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.904][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.905][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.906][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.907][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.907][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.908][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.909][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.909][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.910][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.911][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.912][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.912][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.913][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.913][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.914][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.915][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.915][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.916][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.916][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.917][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.918][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.919][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.919][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.920][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.920][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.921][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:33.922][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:33.998][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[15:21:34.004][DEBUG](qtp379110473-12) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[15:21:34.005][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[15:21:34.006][DEBUG](qtp379110473-12) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[15:21:34.018][INFO ](qtp379110473-12) Login [] in 1058ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:35.945][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ? [EntityFindBuilder.class]
[15:21:35.946][DEBUG](qtp379110473-18) Executed query with SQL [SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ?] and parameters [[username:admin]] in [0] seconds [EntityQueryBuilder.class]
[15:21:35.967][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ? [EntityFindBuilder.class]
[15:21:35.968][DEBUG](qtp379110473-18) Executed query with SQL [SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ?] and parameters [[visitId:100708]] in [0] seconds [EntityQueryBuilder.class]
[15:21:35.969][INFO ](qtp379110473-18) 更 [EntityValueBase.class]
[15:21:35.969][INFO ](qtp379110473-18) 更1 [EntityValueBase.class]
[15:21:35.969][INFO ](qtp379110473-18) 更2 [EntityValueBase.class]
[15:21:35.969][INFO ](qtp379110473-18) 更4 [EntityValueBase.class]
[15:21:35.969][INFO ](qtp379110473-18) 更5 [EntityValueBase.class]
[15:21:35.969][INFO ](qtp379110473-18) 更5.5 [EntityValueBase.class]
[15:21:35.970][INFO ](qtp379110473-18) 更9 [EntityValueBase.class]
[15:21:35.970][INFO ](qtp379110473-18) 更10 [EntityValueBase.class]
[15:21:35.970][INFO ](qtp379110473-18) 更11 [EntityValueBase.class]
[15:21:35.970][INFO ](qtp379110473-18) 打SQL！ [EntityValueImpl.class]
[15:21:35.970][DEBUG](qtp379110473-18) making crud PreparedStatement for SQL: UPDATE VISIT SET USER_ID=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[15:21:35.975][DEBUG](qtp379110473-18) Executed update with SQL [UPDATE VISIT SET USER_ID=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[userId:EP_ADMIN, lastUpdatedStamp:2018-04-10 00:21:35.877, visitId:100708]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:35.975][INFO ](qtp379110473-18) 更12 [EntityValueBase.class]
[15:21:35.975][INFO ](qtp379110473-18) 更13 [EntityValueBase.class]
[15:21:35.975][INFO ](qtp379110473-18) 更7 [EntityValueBase.class]
[15:21:35.975][INFO ](qtp379110473-18) 更8 [EntityValueBase.class]
[15:21:36.081][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT USER_ID, FROM_DATE, THRU_DATE, VISIT_ID, PASSWORD_USED, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP FROM USER_LOGIN_HISTORY WHERE (FROM_DATE = ? AND USER_ID = ?) [EntityFindBuilder.class]
[15:21:36.082][DEBUG](qtp379110473-18) Executed query with SQL [SELECT USER_ID, FROM_DATE, THRU_DATE, VISIT_ID, PASSWORD_USED, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP FROM USER_LOGIN_HISTORY WHERE (FROM_DATE = ? AND USER_ID = ?)] and parameters [[fromDate:2018-04-10 00:21:36.073, userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.087][INFO ](qtp379110473-18) Transition Login/login in 211ms, redirecting to screen path URL: http://localhost:8080/vapps/nacs-admin/Channel/ChannelList [ScreenRenderImpl.class]
[15:21:36.103][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO USER_LOGIN_HISTORY (USER_ID, FROM_DATE, VISIT_ID, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:36.105][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO USER_LOGIN_HISTORY (USER_ID, FROM_DATE, VISIT_ID, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:36.125][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ? [EntityFindBuilder.class]
[15:21:36.127][DEBUG](qtp379110473-18) Executed query with SQL [SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ?] and parameters [[userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.128][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:21:36.130][DEBUG](qtp379110473-18) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.162][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.163][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.163][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.164][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.165][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.166][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Applications, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.167][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.168][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.169][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.170][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.172][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.173][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.305][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:21:36.309][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_NAVBAR_COMP]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.310][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:21:36.312][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_LOGO]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.315][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:21:36.317][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_TITLE]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.326][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.326][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.327][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.328][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.328][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.329][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.329][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.330][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.331][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.331][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.332][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.332][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.340][INFO ](qtp379110473-18) vapps/nacs-admin/Channel/ChannelList [] in 221ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:36.356][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ? [EntityFindBuilder.class]
[15:21:36.357][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ?] and parameters [[visitId:100708]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.369][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.370][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.370][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.381][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.381][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:36.381][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:36.391][INFO ](MoquiWorker-1) IP address not a IPv4 address [MessageFacadeImpl.class]
[15:21:37.227][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:37.228][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/apps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.297][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.300][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.300][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.308][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.309][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.310][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.341][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.343][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Security, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.348][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:37.349][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.369][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.370][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.371][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.371][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.372][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.373][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.379][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.379][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.380][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.381][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.382][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:37.384][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.385][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:37.386][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Channel.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.391][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:37.392][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.458][INFO ](qtp379110473-15) Created 256 automatic reverse relationships [EntityFacadeImpl.class]
[15:21:37.497][INFO ](qtp379110473-18) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:55477 [NotificationEndpoint.class]
[15:21:37.632][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.637][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.638][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.639][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.639][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.640][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.640][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.641][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.641][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.642][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.643][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.680][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.713][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.714][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.714][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.715][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.716][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.716][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.717][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.717][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.718][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.718][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.751][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.752][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.752][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.778][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:37.779][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:37.786][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.787][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.788][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.789][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.790][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.790][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.791][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.791][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.792][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.786][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:37.858][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.863][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.865][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.867][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.867][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:37.868][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:37.889][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Charts.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.139][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.140][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:NacsAdmin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.203][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.204][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.205][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.206][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.206][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.207][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.226][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.227][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.228][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.229][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.229][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.230][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.288][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.290][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Dashboard, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.290][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.291][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.293][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.294][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.295][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.296][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:System, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.312][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.315][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Artifact Stats, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.334][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.335][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.337][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.338][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.346][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.347][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.348][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.349][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.350][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.350][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.351][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.351][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.377][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.377][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.388][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.388][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.397][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.397][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.398][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.402][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.408][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.408][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount/UserAccountList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.418][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.421][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.423][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.424][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.427][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.428][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.453][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.454][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.455][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.455][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.456][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.457][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.467][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.468][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.469][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.469][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.470][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.470][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.471][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.472][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Mrchnt.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.477][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.477][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-mrchnt/screen/NacsMrchnt/MrchntList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.518][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.518][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.519][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.520][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.524][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.525][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.526][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.526][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.527][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.527][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.528][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.528][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.536][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.537][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.538][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.538][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.539][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.539][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.552][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.553][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.554][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.554][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.555][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.556][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.556][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.557][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Route.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.561][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.561][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-route/screen/NacsRoute/RouteList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.578][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.580][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.581][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.581][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.582][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.583][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.590][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.591][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.591][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.592][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.592][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.593][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.596][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.597][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.597][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.598][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.598][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.599][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.602][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.603][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.603][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.604][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.604][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.605][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.627][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.629][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.629][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.630][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.631][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.631][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.632][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.632][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Check.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.638][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.638][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-check/screen/NacsCheck/ChannelCheckList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.640][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.641][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.641][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.642][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.642][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.643][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.649][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.650][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.650][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.651][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.651][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.652][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.658][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.659][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.659][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.660][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.661][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.661][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.662][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.662][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Clear.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.666][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.666][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-clear/screen/NacsClear/ChannelClearList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.668][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.669][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.669][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.670][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.670][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.670][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.709][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.709][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.711][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.712][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/TxItem.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.719][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.719][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.720][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.720][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.721][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.721][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.736][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.737][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.739][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:38.739][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System/ServiceJob.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.762][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.763][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.764][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.764][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.765][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.765][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:38.766][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:38.766][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Nacs Admin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:39.080][INFO ](qtp379110473-12) apps/nacs-admin [] in 167ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:39.146][INFO ](qtp379110473-43) apps/nacs-admin/Channel [] in 15ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:40.320][INFO ](qtp379110473-45) Added column TRX_CTGY to table CHANNEL for field trxCtgy of entity nacs.channel.Channel in group transactional [EntityDbMeta.class]
[15:21:40.338][INFO ](qtp379110473-45) Added column FEE_TYPE to table CHANNEL for field feeType of entity nacs.channel.Channel in group transactional [EntityDbMeta.class]
[15:21:40.356][INFO ](qtp379110473-45) Added column PERCENTAGE to table CHANNEL for field percentage of entity nacs.channel.Channel in group transactional [EntityDbMeta.class]
[15:21:40.366][INFO ](qtp379110473-45) Added column AMT to table CHANNEL for field amt of entity nacs.channel.Channel in group transactional [EntityDbMeta.class]
[15:21:40.367][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[15:21:40.368][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.370][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[15:21:40.370][DEBUG](qtp379110473-45) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.409][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:21:40.410][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:OpnFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.412][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST [EntityFindBuilder.class]
[15:21:40.414][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST] and parameters [[enumTypeId:VerifiedFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.423][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL [EntityFindBuilder.class]
[15:21:40.424][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.425][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:21:40.426][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:TrxCtgy]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.427][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:21:40.430][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:FeeChargeMode]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.432][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.433][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.434][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.434][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.435][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.435][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.452][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.453][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.453][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.454][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.486][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.487][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.487][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.487][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.488][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.488][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.496][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.497][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.498][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.498][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.504][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.505][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.510][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.511][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.512][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.512][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.512][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.513][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.514][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.515][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.515][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.516][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.516][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.516][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.560][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.560][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.561][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.561][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.562][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.562][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.563][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.563][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.564][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.564][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.564][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.565][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.578][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.579][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.580][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.580][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.581][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.581][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.598][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.598][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.599][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.600][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.600][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.601][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.601][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.602][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.602][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.603][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.604][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.604][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.614][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.615][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.615][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.616][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.617][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.617][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.621][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.622][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.622][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.623][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.623][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.623][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.637][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.638][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.639][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.639][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.640][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.641][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.641][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.642][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.643][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.643][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.644][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.645][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.646][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.647][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.648][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.649][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.650][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.650][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.651][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.652][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.652][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.656][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.657][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.658][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.659][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.660][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.661][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.662][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.663][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.664][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.665][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.665][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.666][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.667][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.667][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.669][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.673][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.674][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.674][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.674][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.675][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.675][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.679][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.680][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.680][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.681][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.682][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.682][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.683][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.683][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.683][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.684][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.761][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.762][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.762][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.763][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.763][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.763][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.808][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:40.809][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelDetail.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.836][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.836][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Update, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.837][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.837][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Update, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.838][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.839][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.839][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.839][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.840][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:40.840][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:40.877][INFO ](qtp379110473-45) apps/nacs-admin/Channel/ChannelList [] in 1636ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:42.632][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:42.635][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:42.635][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:42.636][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:42.636][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:42.647][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:42.647][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:42.648][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:42.695][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.697][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.701][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.702][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.705][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.705][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.706][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.706][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.709][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.710][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.710][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.711][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.714][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.714][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.715][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.715][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.717][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.718][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.718][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.718][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.721][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.729][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.730][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.730][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.741][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:42.742][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/apps/AppList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.747][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.747][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:App List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:42.915][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:42.936][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Choose an Application, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:43.259][INFO ](qtp379110473-15) apps/AppList [] in 467ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:44.482][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.482][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:仪表盘, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.483][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.483][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:仪表盘, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.484][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.484][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:仪表盘, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.495][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.496][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/AutoScreen.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.497][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.498][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/AutoScreen/MainEntityList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.500][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.501][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Auto Screen, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.505][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.507][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/ArtifactStats.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.551][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.551][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:构件统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.552][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.552][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:构件统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.553][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.553][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:构件统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.568][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.569][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/DataView.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.570][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.571][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/DataView/FindDbView.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.576][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.577][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data View, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.616][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.617][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.635][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.636][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.639][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.639][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit/EntityList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.641][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.642][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.660][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.661][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Service Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.661][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.662][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Service Detail, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.662][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.663][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Service Detail, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.668][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.669][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Service.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.672][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:44.672][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Service/ServiceReference.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:44.675][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:44.675][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Service, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.078][INFO ](qtp379110473-43) apps/tools [] in 259ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:46.128][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.128][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:General Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.129][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.131][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Auto Screens, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.132][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.133][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Auto Screens, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.133][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.133][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Auto Screens, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.136][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.137][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Services, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.137][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.138][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Services, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.138][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.138][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Services, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.206][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:46.206][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/rest.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.224][INFO ](qtp379110473-45) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[15:21:46.226][INFO ](qtp379110473-45) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[15:21:46.230][INFO ](qtp379110473-45) Loaded REST API files, 2 roots, in 22ms [RestApi.class]
[15:21:46.278][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.279][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:REST API: Swagger UI, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.279][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.280][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:REST API: Swagger UI, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.280][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.281][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:REST API: Swagger UI, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.304][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.305][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.displayName ?: resource.name} (${resource.childMethods}), locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.306][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.307][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.displayName ?: resource.name} (${resource.childMethods}), locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.308][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.308][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.displayName ?: resource.name} (${resource.childMethods}), locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.324][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.326][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:plain, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.327][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.327][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:plain, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.328][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.328][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:plain, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.329][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.329][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/service.swagger/${resource.name}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.330][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.330][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/service.swagger/${resource.name}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.331][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.331][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/service.swagger/${resource.name}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.350][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.351][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.description ?: ''}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.351][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.352][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.description ?: ''}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.352][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.352][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.description ?: ''}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.388][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.388][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Master API, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.389][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.390][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Master API, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.394][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.395][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Master API, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.438][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.439][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${masterEntityName}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.439][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.440][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${masterEntityName}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.440][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.441][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${masterEntityName}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.455][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.455][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/master.swagger/${masterEntityName}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.455][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.456][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/master.swagger/${masterEntityName}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.456][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.457][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/master.swagger/${masterEntityName}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.490][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.490][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:The larger APIs take a few seconds to load. Runs in same session (already authenticated)., locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.490][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.491][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:The larger APIs take a few seconds to load. Runs in same session (already authenticated)., locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.491][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.492][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:The larger APIs take a few seconds to load. Runs in same session (already authenticated)., locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.493][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.493][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.494][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.494][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Import, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.495][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.495][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Import, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.496][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.496][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Import, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.500][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:46.500][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataImport.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.504][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.504][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Export, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.505][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.505][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Export, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.506][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.506][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Export, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.509][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:46.510][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataExport.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.511][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.512][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Snapshots, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.512][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.513][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Snapshots, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.513][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.514][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Snapshots, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.517][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:46.517][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataSnapshot.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.524][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.524][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Runner, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.525][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.525][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Runner, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.525][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.526][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Runner, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.529][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:46.529][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/SqlRunner.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.531][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.532][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entities, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.532][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.533][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entities, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.533][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.533][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entities, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.535][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.535][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Views, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.536][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.536][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Views, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.536][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.537][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Views, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.538][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.538][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Speed Test, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.539][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.539][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Speed Test, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.540][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.540][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Speed Test, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.543][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:46.547][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/SpeedTest.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.551][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.552][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Stats, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.554][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.555][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Stats, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.555][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:46.556][DEBUG](qtp379110473-45) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Stats, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.559][DEBUG](qtp379110473-45) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:46.559][DEBUG](qtp379110473-45) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/QueryStats.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:46.562][INFO ](qtp379110473-45) apps/tools/dashboard [] in 448ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:47.377][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.377][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.378][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.378][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.378][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.379][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.379][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.380][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Import, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.380][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.380][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Import, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.381][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.381][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Import, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.382][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.382][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.383][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.383][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.383][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.384][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.384][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.385][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Snapshots, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.385][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.385][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Snapshots, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.385][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.386][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Snapshots, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.389][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:47.389][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit/EntityDetail.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.463][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.463][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.475][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:47.475][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit/EntityDataFind.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.489][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:21:47.489][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit/EntityDataEdit.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.516][INFO ](qtp379110473-18) apps/tools/Entity [] in 11ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:47.569][INFO ](qtp379110473-15) apps/tools/Entity/DataEdit [] in 10ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:47.633][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:47.634][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:47.635][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:47.636][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:47.636][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:47.637][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:47.637][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:47.637][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:47.638][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:47.638][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:47.638][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:47.639][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:47.639][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:47.640][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:47.640][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:47.641][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:47.736][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.736][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Check/Update All Tables, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.738][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.739][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Liquibase Init XML, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.739][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.740][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Liquibase Init XML, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.740][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.740][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Liquibase Init XML, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.743][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.743][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter Regexp, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.744][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.744][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter Regexp, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.745][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.745][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter Regexp, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.747][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.747][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Download, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.748][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.748][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Download, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.749][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.749][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Download, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.752][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.753][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.753][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.754][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.754][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.754][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.787][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.787][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Package, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.788][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.789][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Package, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.789][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.789][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Package, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.791][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.792][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Name, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.792][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.793][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Name, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.793][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.794][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Name, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.795][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.795][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:View##DataBase, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.796][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.796][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:View##DataBase, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.797][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.797][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:View##DataBase, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.798][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.800][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:View, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.801][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.802][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查看, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.802][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.803][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查看, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.804][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.804][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查看, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.806][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.806][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Find, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.807][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.808][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Find, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:47.809][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:47.810][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:48.022][INFO ](qtp379110473-12) apps/tools/Entity/DataEdit/EntityList [] in 406ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:51.240][INFO ](qtp379110473-45) apps/tools/Entity/DataEdit/EntityList [] in 244ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:52.633][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:52.634][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:52.635][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:52.636][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:52.636][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:52.637][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:52.637][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:52.638][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:52.727][INFO ](qtp379110473-15) apps/tools/Entity/DataEdit/EntityList [] in 398ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:54.743][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.744][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Group Name, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.745][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.745][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Group Name, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.746][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.746][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Group Name, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.763][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.764][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Statement, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.765][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.765][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Statement, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.766][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.766][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Statement, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.769][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.769][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Limit, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.770][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.770][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Limit, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.770][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.771][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Limit, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.771][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.772][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:500, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.772][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.773][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:500, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.773][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.773][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:500, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.774][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.775][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Run SQL, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.775][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.775][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Run SQL, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.776][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.776][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Run SQL, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.777][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.777][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Results, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.778][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.778][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Results, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.779][DEBUG](qtp379110473-43) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:21:54.779][DEBUG](qtp379110473-43) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Results, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:21:54.782][INFO ](qtp379110473-43) apps/tools/Entity/SqlRunner [] in 223ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:21:57.630][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:57.631][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:57.631][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:57.632][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:21:57.632][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:21:57.632][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:22:03.415][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:22:03.416][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query altered ${rowsAffected} rows., locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:22:03.417][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:22:03.417][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query altered ${rowsAffected} rows., locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:22:03.418][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:22:03.418][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query altered ${rowsAffected} rows., locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:22:03.608][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:22:03.609][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${message}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:22:03.610][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:22:03.610][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${message}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:22:03.611][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:22:03.611][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${message}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:22:03.633][INFO ](qtp379110473-18) apps/tools/Entity/SqlRunner [limit:500, groupName:transactional, submitButton:submitButton, sql:drop table Channel] in 261ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:22:07.631][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:22:07.633][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:22:07.633][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:22:07.633][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:22:40.387][INFO ](main) Loading Webapp 'webroot' (Moqui Root Webapp) on ROOT, located at: D:\IDEAWorkSpace\trunk\execwartmp\ROOT\webapp [MoquiContextListener.class]
[15:22:40.743][INFO ](main) Initializing Moqui Framework version 2.1.0
 - runtime directory: D:\IDEAWorkSpace\trunk\runtime
 - runtime config:    D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:22:41.325][INFO ](main) Added component tools              at file:D:/IDEAWorkSpace/trunk/runtime/base-component/tools [ExecutionContextFactoryImpl.class]
[15:22:41.344][INFO ](main) Added component webroot            at file:D:/IDEAWorkSpace/trunk/runtime/base-component/webroot [ExecutionContextFactoryImpl.class]
[15:22:41.349][INFO ](main) Added component nacs-access        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-access [ExecutionContextFactoryImpl.class]
[15:22:41.352][INFO ](main) Added component nacs-admin         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-admin [ExecutionContextFactoryImpl.class]
[15:22:41.355][INFO ](main) Added component nacs-be            at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be [ExecutionContextFactoryImpl.class]
[15:22:41.359][INFO ](main) Added component nacs-be-spd        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be-spd [ExecutionContextFactoryImpl.class]
[15:22:41.363][INFO ](main) Added component nacs-channel       at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel [ExecutionContextFactoryImpl.class]
[15:22:41.368][INFO ](main) Added component nacs-channel-unionpay at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel-unionpay [ExecutionContextFactoryImpl.class]
[15:22:41.372][INFO ](main) Added component nacs-check         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-check [ExecutionContextFactoryImpl.class]
[15:22:41.376][INFO ](main) Added component nacs-clear         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-clear [ExecutionContextFactoryImpl.class]
[15:22:41.380][INFO ](main) Added component nacs-main          at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-main [ExecutionContextFactoryImpl.class]
[15:22:41.386][INFO ](main) Added component nacs-mrchnt        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-mrchnt [ExecutionContextFactoryImpl.class]
[15:22:41.392][INFO ](main) Added component nacs-route         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-route [ExecutionContextFactoryImpl.class]
[15:22:41.397][INFO ](main) Added component nacs-udm           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-udm [ExecutionContextFactoryImpl.class]
[15:22:41.403][INFO ](main) Added component nacs-usl           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-usl [ExecutionContextFactoryImpl.class]
[15:22:41.404][INFO ](main) Components after depends-on sort: [tools, webroot, nacs-access, nacs-udm, nacs-admin, nacs-be, nacs-be-spd, nacs-channel, nacs-channel-unionpay, nacs-check, nacs-clear, nacs-main, nacs-mrchnt, nacs-route, nacs-usl] [ExecutionContextFactoryImpl.class]
[15:22:41.427][INFO ](main) Merging runtime configuration at D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:22:41.500][INFO ](main) Found default_time_zone US/Pacific: sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:22:41.500][INFO ](main) Default locale en_US, time zone sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:22:41.656][INFO ](main) Initializing worker ThreadPoolExecutor: queue limit 65535, pool-core 4, pool-max 16, pool-alive 60s [ExecutionContextFactoryImpl.class]
[15:22:41.790][INFO ](main) Added JARs from component webroot: [closure-compiler-v20160208.jar, gradle-js-plugin-2.14.1.jar, html2js-0.1.jar] [ExecutionContextFactoryImpl.class]
[15:22:41.853][INFO ](main) Added JARs from component nacs-be-spd: [cxf-2.7.18.jar, cxf-rt-ws-policy-2.7.18.jar, dom4j-1.6.1.jar, nacs-be-spd-1.0.0.jar, wsdl4j-1.6.3.jar] [ExecutionContextFactoryImpl.class]
[15:22:41.884][INFO ](main) Added JARs from component nacs-channel-unionpay: [bcprov-jdk15on-1.54.jar, commons-codec-1.6.jar, commons-io-2.2.jar, commons-lang-2.5.jar, javax.servlet-api-3.1.0.jar, log4j-1.2.17.jar, nacs-channel-unionpay-1.0.0.jar, nacs-unionpay-1.0.0.jar, slf4j-api-1.5.11.jar, slf4j-log4j12-1.5.11.jar, upacp_sdk-1.1.0-20151216.jar] [ExecutionContextFactoryImpl.class]
[15:22:41.886][INFO ](main) Added JARs from component nacs-check: [nacs-check-1.0.0.jar] [ExecutionContextFactoryImpl.class]
[15:22:41.896][INFO ](main) Added JARs from component nacs-usl: [commons-net-1.4.1.jar, javolution-5.4.3.jar] [ExecutionContextFactoryImpl.class]
[15:22:41.897][INFO ](main) Initialized ClassLoader in 217ms [ExecutionContextFactoryImpl.class]
[15:22:41.901][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.JackrabbitRunToolFactory [ExecutionContextFactoryImpl.class]
[15:22:41.902][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.SubEthaSmtpToolFactory [ExecutionContextFactoryImpl.class]
[15:22:41.908][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.MCacheToolFactory [ExecutionContextFactoryImpl.class]
[15:22:41.925][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.H2ServerToolFactory [ExecutionContextFactoryImpl.class]
[15:22:41.960][INFO ](main) Cache Facade initialized [ExecutionContextFactoryImpl.class]
[15:22:42.324][INFO ](main) Resource Facade initialized [ExecutionContextFactoryImpl.class]
[15:22:42.397][INFO ](main) Bitronix Transaction Manager version 3.0.0-SNAPSHOT [BitronixTransactionManager.class]
[15:22:42.410][WARN ](main) Cannot get the unique server ID for this JVM ('bitronix.tm.serverId'). Make sure it is configured and you use only US-ASCII characters. Will use IP address instead (unsafe for production usage!). [Configuration.class]
[15:22:42.412][INFO ](main) JVM unique ID: <192.168.191.1> - Using this server ID to ensure uniqueness of transaction IDs across the network. [Configuration.class]
[15:22:42.440][WARN ](main) active log file is unclean, did you call BitronixTransactionManager.shutdown() at the end of the last run? [DiskJournal.class]
[15:22:42.677][INFO ](main) recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 0 resource(s) [] (restricted to serverId '192.168.191.1') [Recoverer.class]
[15:22:42.691][INFO ](main) Transaction Facade initialized [ExecutionContextFactoryImpl.class]
[15:22:42.787][INFO ](main) Database time zone is sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [EntityFacadeImpl.class]
[15:22:42.959][INFO ](main) Initializing DataSource transactional_DS (h2) with properties: [user:sa, url:jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui;lock_timeout=30000] [TransactionInternalBitronix.class]
[15:22:44.416][INFO ](main) incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [transactional_DS] (restricted to serverId '192.168.191.1') [IncrementalRecoverer.class]
[15:22:44.417][INFO ](main) Init DataSource transactional_DS (h2) isolation READ_COMMITTED (2), max pool 50 [TransactionInternalBitronix.class]
[15:22:44.457][INFO ](main) Loaded 0 Entity ECA rules from 0 .eecas.xml files [EntityFacadeImpl.class]
[15:22:44.473][INFO ](main) Entity Cache initialized, distributed cache invalidate enabled: false [EntityCache.class]
[15:22:44.507][INFO ](main) Entity Facade initialized [ExecutionContextFactoryImpl.class]
[15:22:44.547][INFO ](main) Loaded 0 Service ECA rules from 0 .secas.xml files [ServiceFacadeImpl.class]
[15:22:44.677][INFO ](main) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[15:22:44.681][INFO ](main) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[15:22:44.686][INFO ](main) Loaded REST API files, 2 roots, in 115ms [RestApi.class]
[15:22:44.742][INFO ](main) No distributed-factory specified, distributed async service calls will be run local only [ServiceFacadeImpl.class]
[15:22:44.794][INFO ](main) Service Facade initialized [ExecutionContextFactoryImpl.class]
[15:22:44.815][INFO ](main) Screen Facade initialized [ExecutionContextFactoryImpl.class]
[15:22:44.815][INFO ](main) Loading entity definitions [ExecutionContextFactoryImpl.class]
[15:22:44.937][INFO ](main) Found entities in 20 files in 121ms [EntityFacadeImpl.class]
[15:22:45.208][INFO ](main) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:22:45.781][INFO ](main) Loaded 199 entity definitions in 966ms [ExecutionContextFactoryImpl.class]
[15:22:45.782][INFO ](main) Initializing ToolFactory: MCache [ExecutionContextFactoryImpl.class]
[15:22:45.782][INFO ](main) Initializing ToolFactory: H2Server [ExecutionContextFactoryImpl.class]
[15:22:45.841][INFO ](main) Started H2 remote server on port 9092 status: TCP server running at tcp://192.168.191.1:9092 (only local connections) [H2ServerToolFactory.class]
[15:22:45.842][INFO ](main) H2 args: [-tcpPort, 9092, -ifExists, -baseDir, D:\IDEAWorkSpace\trunk\runtime/db/h2] [H2ServerToolFactory.class]
[15:22:45.844][INFO ](main) Found shutdown hook: org.eclipse.jetty.util.thread.ShutdownThread Thread[Thread-0,5,main] [H2ServerToolFactory.class]
[15:22:45.845][INFO ](main) Found shutdown hook: java.lang.Thread Thread[pool-1-thread-1,5,main] [H2ServerToolFactory.class]
[15:22:45.845][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-13,5,main] [H2ServerToolFactory.class]
[15:22:45.845][INFO ](main) Found shutdown hook: java.util.logging.LogManager$Cleaner Thread[Thread-9,5,main] [H2ServerToolFactory.class]
[15:22:45.845][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-12,5,main] [H2ServerToolFactory.class]
[15:22:46.152][INFO ](main) Execution Context Factory initialized in 5.572 seconds [ExecutionContextFactoryImpl.class]
[15:22:46.168][DEBUG](main) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM ENUMERATION [EntityFindBuilder.class]
[15:22:46.181][DEBUG](main) Executed query with SQL [SELECT COUNT(*)  FROM ENUMERATION] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:22:46.184][INFO ](main) Found 289 Enumeration records, NOT loading empty-db-load data types (all) [ExecutionContextFactoryImpl.class]
[15:22:46.268][INFO ](main) Initializing webapp webroot http://null:null https://null:null https enabled? false [ExecutionContextFactoryImpl.class]
[15:22:46.278][INFO ](main) Added webapp listener org.moqui.impl.webapp.MoquiSessionListener [MoquiContextListener.class]
[15:22:46.317][INFO ](main) Added servlet MoquiServlet on: [/*] [MoquiContextListener.class]
[15:22:46.325][INFO ](main) Added servlet MoquiFopServlet on: [/fop/*] [MoquiContextListener.class]
[15:22:46.333][INFO ](main) Added servlet H2Console on: [/h2/*] [MoquiContextListener.class]
[15:22:46.334][INFO ](main) Found WebSocket ServerContainer org.eclipse.jetty.websocket.jsr356.server.ServerContainer [MoquiContextListener.class]
[15:22:46.353][INFO ](main) Added WebSocket endpoint /notws for class org.moqui.impl.webapp.NotificationEndpoint [MoquiContextListener.class]
[15:22:46.353][INFO ](main) Moqui Framework initialized in 5.995 seconds [MoquiContextListener.class]
[15:22:46.379][INFO ](main) MoquiServlet initialized for webapp webroot [MoquiServlet.class]
[15:24:44.852][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL [EntityFindBuilder.class]
[15:24:44.858][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:24:44.962][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:24:44.973][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:24:45.002][TRACE](pool-2-thread-4) processing "0/3" at 2018-04-10T00:24:45.002-07:00[US/Pacific] [EveryFieldValueGenerator.class]
[15:24:45.037][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:24:45.042][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.service.job.ServiceJobRun]] in [0] seconds [EntityQueryBuilder.class]
[15:24:45.068][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:24:45.069][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:24:45.069][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:24:45.079][INFO ](RequireNewTx) Built entity.data.feed.info cache for in 10ms, entries for 0 entities [EntityDataFeed.class]
[15:24:45.080][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:24:45.080][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:24:45.080][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:24:45.080][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:24:45.080][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:24:45.081][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:24:45.081][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:24:45.081][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:24:45.083][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:24:45.088][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100968, lastUpdatedStamp:2018-04-10 00:24:45.021, seqName:moqui.service.job.ServiceJobRun]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:24:45.088][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:24:45.088][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:24:45.089][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:24:45.089][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:24:45.111][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:24:45.114][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:24:45.114][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:24:45.114][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:24:45.114][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:24:45.115][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:24:45.115][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:24:45.115][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:24:45.115][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:24:45.115][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:24:45.115][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:24:45.116][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:24:45.116][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:24:45.116][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:24:45.122][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:24:45.123][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100918, lastRunTime:2018-04-10 00:24:44.826, lastUpdatedStamp:2018-04-10 00:24:44.937, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:24:45.124][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:24:45.124][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:24:45.124][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:24:45.124][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:24:45.124][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100918 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:24-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:24:45.169][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ? [EntityFindBuilder.class]
[15:24:45.170][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ?] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:24:45.220][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:24:45.234][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ALL_USERS]] in [0] seconds [EntityQueryBuilder.class]
[15:24:45.260][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:24:45.262][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:24:45.266][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:24:45.268][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:24:45.272][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:24:44.826-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:24:45.284][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:24:45.284][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:24:45.284][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:24:45.285][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:24:45.285][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:24:45.285][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:24:45.285][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:24:45.285][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:24:45.285][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:24:45.285][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:24:45.285][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:24:45.286][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:24:45.286][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:24:45.289][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:24:45.300][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:24:45.283, lastUpdatedStamp:2018-04-10 00:24:45.284, jobRunId:100918]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:24:45.301][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:24:45.301][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:24:45.301][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:24:45.301][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:24:46.191][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:24:46.221][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:24:46.222][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:24:46.327][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:24:46.329][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:25:07.329][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:25:07.330][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:25:07.340][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:25:07.347][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:25:07.352][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:25:07.376][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:25:07.376][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:25:07.377][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:25:07.384][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:25:08.033][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:25:08.054][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:25:08.143][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:25:08.152][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:25:08.155][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:25:08.157][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:25:08.158][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:25:08.168][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:25:08.169][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:25:08.169][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:25:08.169][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:25:08.169][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:25:08.169][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:25:08.169][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:25:08.169][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:25:08.170][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:25:08.170][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:25:08.170][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:25:08.170][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:25:08.192][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:25:08.168, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:25:08.193][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:25:08.193][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:25:08.193][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:25:08.193][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:25:08.195][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:25:08.195][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:25:08.195][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:25:08.195][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:25:08.195][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:25:08.195][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:25:08.197][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:25:08.198][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:25:08.198][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:25:08.198][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:25:08.198][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:25:08.199][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:25:08.199][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:25:08.199][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:25:08.200][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:25:08.202][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:25:08.167, lastUpdatedStamp:2018-04-10 00:25:08.195, jobRunId:100918]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:25:08.203][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:25:08.203][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:25:08.203][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:25:08.204][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:25:44.802][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:25:44.806][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:25:44.807][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:25:44.809][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:25:44.809][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:25:44.809][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:25:44.809][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:25:44.810][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:25:44.810][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:25:44.810][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:25:44.810][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:25:44.810][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:25:44.810][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:25:44.810][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:25:44.811][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:25:44.811][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:25:44.812][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:25:44.813][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100919, lastRunTime:2018-04-10 00:25:44.801, lastUpdatedStamp:2018-04-10 00:25:44.802, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:25:44.814][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:25:44.814][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:25:44.814][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:25:44.815][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:25:44.815][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100919 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:24-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:25:44.820][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:25:44.821][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:25:44.821][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:25:44.821][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:25:44.822][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:25:44.823][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:25:44.823][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:25:44.823][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:25:44.823][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:25:44.823][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:25:44.824][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:25:44.824][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:25:44.824][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:25:44.824][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:25:44.824][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:25:44.840][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:25:44.840][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:25:44.843][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:25:44.845][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:25:44.82, lastUpdatedStamp:2018-04-10 00:25:44.821, jobRunId:100919]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:25:44.845][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:25:44.845][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:25:44.846][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:25:44.846][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:25:44.846][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:25:44.801-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:25:44.974][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:25:44.976][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:25:44.977][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:25:44.979][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:25:44.979][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:26:05.982][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:26:05.982][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:26:05.982][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:26:05.986][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:26:05.987][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:26:05.990][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:26:05.990][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:26:05.990][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:26:05.992][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:26:06.445][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:26:06.450][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:26:06.534][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:26:06.537][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:26:06.539][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:26:06.541][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:26:06.542][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:26:06.543][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:26:06.544][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:26:06.545][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:26:06.545][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:26:06.546][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:26:06.543, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:26:06.546][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:26:06.547][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:26:06.547][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:26:06.547][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:26:06.549][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:26:06.549][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:26:06.549][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:26:06.550][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:26:06.550][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:26:06.550][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:26:06.550][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:26:06.550][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:26:06.550][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:26:06.550][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:26:06.550][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:26:06.551][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:26:06.551][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:26:06.551][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:26:06.551][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:26:06.561][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:26:06.543, lastUpdatedStamp:2018-04-10 00:26:06.549, jobRunId:100919]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:26:06.562][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:26:06.562][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:26:06.562][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:26:06.562][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:26:44.806][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:26:44.808][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:26:44.809][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:26:44.810][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:26:44.811][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:26:44.811][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:26:44.811][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:26:44.811][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:26:44.811][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:26:44.811][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:26:44.811][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:26:44.812][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:26:44.812][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:26:44.812][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:26:44.812][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:26:44.812][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:26:44.812][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:26:44.813][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100920, lastRunTime:2018-04-10 00:26:44.803, lastUpdatedStamp:2018-04-10 00:26:44.806, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:26:44.813][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:26:44.813][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:26:44.814][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:26:44.814][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:26:44.814][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100920 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:24-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:26:44.821][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:26:44.823][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:26:44.823][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:26:44.824][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:26:44.824][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:26:44.824][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:26:44.824][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:26:44.824][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:26:44.825][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:26:44.825][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:26:44.825][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:26:44.825][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:26:44.825][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:26:44.826][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:26:44.826][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:26:44.826][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:26:44.827][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:26:44.823, lastUpdatedStamp:2018-04-10 00:26:44.823, jobRunId:100920]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:26:44.827][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:26:44.827][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:26:44.827][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:26:44.828][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:26:44.837][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:26:44.841][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:26:44.846][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:26:44.803-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:26:45.013][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:26:45.015][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:26:45.015][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:26:45.017][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:26:45.017][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:27:06.032][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:27:06.032][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:27:06.032][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:27:06.036][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:27:06.038][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:27:06.040][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:27:06.040][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:27:06.040][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:27:06.040][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:27:06.532][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:27:06.537][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:27:06.559][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:27:06.562][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:27:06.566][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:27:06.570][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:27:06.570][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:27:06.572][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:27:06.572][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:27:06.572][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:27:06.572][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:27:06.572][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:27:06.572][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:27:06.572][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:27:06.573][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:27:06.573][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:27:06.573][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:27:06.573][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:27:06.573][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:27:06.574][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:27:06.572, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:27:06.575][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:27:06.575][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:27:06.575][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:27:06.575][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:27:06.576][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:27:06.577][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:27:06.578][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:27:06.578][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:27:06.578][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:27:06.578][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:27:06.579][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:27:06.571, lastUpdatedStamp:2018-04-10 00:27:06.576, jobRunId:100920]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:27:06.580][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:27:06.580][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:27:06.580][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:27:06.580][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:27:44.806][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:27:44.807][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:27:44.808][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:27:44.809][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:27:44.809][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:27:44.810][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:27:44.811][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:27:44.812][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100921, lastRunTime:2018-04-10 00:27:44.805, lastUpdatedStamp:2018-04-10 00:27:44.806, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:27:44.813][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:27:44.813][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:27:44.813][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:27:44.813][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:27:44.813][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100921 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:27-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:27:44.820][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:27:44.821][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:27:44.824][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:27:44.825][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:27:44.829][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:27:44.805-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:27:44.830][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:27:44.830][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:27:44.830][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:27:44.830][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:27:44.831][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:27:44.832][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:27:44.833][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:27:44.83, lastUpdatedStamp:2018-04-10 00:27:44.83, jobRunId:100921]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:27:44.834][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:27:44.834][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:27:44.834][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:27:44.834][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:27:44.912][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:27:44.913][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:27:44.914][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:27:44.915][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:27:44.916][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:28:05.916][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:28:05.916][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:28:05.916][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:28:05.920][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:28:05.921][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:28:05.971][INFO ](MoquiWorker-4) Found entities in 20 files in 49ms [EntityFacadeImpl.class]
[15:28:05.971][INFO ](MoquiWorker-4) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:28:05.998][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:28:05.999][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:28:05.999][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:28:06.001][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:28:06.616][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:28:06.624][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:28:06.641][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:28:06.643][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:28:06.653][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:28:06.657][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:28:06.657][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:28:06.681][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:28:06.681][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:28:06.681][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:28:06.681][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:28:06.681][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:28:06.681][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:28:06.681][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:28:06.681][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:28:06.682][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:28:06.682][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:28:06.682][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:28:06.682][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:28:06.683][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:28:06.679, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:28:06.684][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:28:06.684][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:28:06.684][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:28:06.686][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:28:06.690][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:28:06.694][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:28:06.694][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:28:06.702][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:28:06.702][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:28:06.702][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:28:06.703][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:28:06.703][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:28:06.703][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:28:06.703][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:28:06.703][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:28:06.703][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:28:06.704][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:28:06.704][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:28:06.704][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:28:06.708][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:28:06.679, lastUpdatedStamp:2018-04-10 00:28:06.689, jobRunId:100921]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:28:06.708][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:28:06.708][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:28:06.708][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:28:06.708][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:28:44.807][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:28:44.809][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:28:44.809][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:28:44.810][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:28:44.810][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:28:44.810][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:28:44.811][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:28:44.812][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:28:44.812][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:28:44.813][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100922, lastRunTime:2018-04-10 00:28:44.807, lastUpdatedStamp:2018-04-10 00:28:44.807, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:28:44.816][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:28:44.816][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:28:44.816][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:28:44.816][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:28:44.817][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100922 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:27-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:28:44.821][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:28:44.822][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:28:44.825][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:28:44.826][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:28:44.840][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:28:44.841][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:28:44.841][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:28:44.841][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:28:44.841][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:28:44.841][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:28:44.841][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:28:44.841][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:28:44.842][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:28:44.842][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:28:44.842][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:28:44.842][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:28:44.842][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:28:44.828][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:28:44.807-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:28:44.845][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:28:44.846][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:28:44.829, lastUpdatedStamp:2018-04-10 00:28:44.84, jobRunId:100922]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:28:44.847][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:28:44.847][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:28:44.847][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:28:44.847][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:28:44.933][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:28:44.935][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:28:44.935][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:28:44.942][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:28:44.942][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:29:05.951][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:29:05.953][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:29:05.953][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:29:05.955][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:29:05.956][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:29:05.959][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:29:05.959][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:29:05.959][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:29:05.960][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:29:06.234][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:29:06.238][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:29:06.255][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:29:06.258][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:29:06.280][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:29:06.282][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:29:06.282][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:29:06.286][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:29:06.286][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:29:06.286][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:29:06.286][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:29:06.286][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:29:06.287][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:29:06.287][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:29:06.287][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:29:06.287][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:29:06.287][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:29:06.287][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:29:06.287][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:29:06.289][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:29:06.286, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:06.289][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:29:06.289][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:29:06.289][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:29:06.289][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:29:06.293][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:29:06.294][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:29:06.295][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:29:06.283, lastUpdatedStamp:2018-04-10 00:29:06.292, jobRunId:100922]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:06.295][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:29:06.295][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:29:06.295][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:29:06.295][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:29:30.084][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.089][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.292][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.292][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.293][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.298][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.360][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.362][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.363][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.364][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.364][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.365][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.414][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.414][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.415][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.417][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.418][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.419][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.439][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.439][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.440][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.441][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.442][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.442][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.486][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.487][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.488][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.489][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.489][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.490][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.508][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.509][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.509][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.510][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.510][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.511][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.552][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.553][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.554][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.554][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.555][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:30.556][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.560][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:29:30.561][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.589][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:29:30.590][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/vapps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.594][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ? [EntityFindBuilder.class]
[15:29:30.595][DEBUG](qtp379110473-11) Executed query with SQL [SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ?] and parameters [[visitorId:100202]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.601][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:29:30.650][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.Visit]] in [0] seconds [EntityQueryBuilder.class]
[15:29:30.650][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:29:30.650][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:29:30.651][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:29:30.651][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:29:30.653][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100908, lastUpdatedStamp:2018-04-10 00:29:30.601, seqName:moqui.server.Visit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:30.654][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:29:30.654][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:29:30.654][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:29:30.654][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:29:30.663][DEBUG](qtp379110473-11) making crud PreparedStatement for SQL: INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:30.664][DEBUG](qtp379110473-11) Executed update with SQL [INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:30.666][INFO ](qtp379110473-11) Created new Visit with ID [100808] in session [node0l0uyqswh1o0gl2jh7hdm0b7m0] [UserFacadeImpl.class]
[15:29:31.002][INFO ](qtp379110473-11) Redirecting to /Login instead of rendering [vapps] [ScreenRenderImpl.class]
[15:29:31.038][INFO ](qtp379110473-11) vapps [] in 252ms (text/html;charset=utf-8) session node0l0uyqswh1o0gl2jh7hdm0b7m0 [ScreenRenderImpl.class]
[15:29:31.291][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:29:31.292][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/Login.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.807][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.808][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.808][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.809][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.811][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.812][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.820][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.821][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.821][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.822][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.823][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.824][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.832][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:29:31.834][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_STYLESHEET]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.889][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:29:31.893][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SCRIPT]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.894][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:29:31.895][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SHORTCUT_ICON]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.897][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:29:31.899][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_BODY_CLASS]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.976][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.977][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.977][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.978][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.979][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.981][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.982][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.983][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.984][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.985][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:31.986][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:31.986][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.051][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT [EntityFindBuilder.class]
[15:29:32.052][DEBUG](qtp379110473-13) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.067][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.069][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.071][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.072][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.073][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.074][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.122][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.123][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.125][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.126][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.126][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.127][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.132][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.133][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.134][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.134][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.135][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.136][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.137][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.137][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.138][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.139][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.141][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.142][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.143][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.143][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.144][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.144][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.145][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.145][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.147][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.148][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.148][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.149][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.149][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.150][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.151][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.151][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.152][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.152][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.153][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.153][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.154][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.155][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.196][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.197][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.198][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.201][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.202][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.203][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.204][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.204][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.205][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.206][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.210][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.211][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.212][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.212][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.213][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.214][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.215][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.216][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.217][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.218][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.218][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.219][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.220][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.220][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.221][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.222][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.222][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:29:32.223][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.320][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[15:29:32.329][DEBUG](qtp379110473-13) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.330][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[15:29:32.331][DEBUG](qtp379110473-13) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[15:29:32.343][INFO ](qtp379110473-13) Login [] in 1056ms (text/html;charset=utf-8) session node0l0uyqswh1o0gl2jh7hdm0b7m0 [ScreenRenderImpl.class]
[15:29:35.879][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:29:35.881][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHit]] in [0] seconds [EntityQueryBuilder.class]
[15:29:35.882][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:29:35.883][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:29:35.883][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:29:35.883][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:29:35.883][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:29:35.883][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:29:35.883][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:29:35.883][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:29:35.883][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:29:35.884][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:29:35.884][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:29:35.884][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:29:35.885][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101009, lastUpdatedStamp:2018-04-10 00:29:35.879, seqName:moqui.server.ArtifactHit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.885][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:29:35.885][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:29:35.885][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:29:35.885][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:29:35.897][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.955][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.955][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.957][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.958][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.958][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.962][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.963][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.963][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.964][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.964][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.969][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.970][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.970][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.971][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.972][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.972][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.973][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.974][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.975][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.975][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.976][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.977][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.977][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.978][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.979][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:35.979][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:29:35.980][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:44.821][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:29:44.822][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:29:44.824][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:29:44.825][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:29:44.826][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:29:44.826][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:29:44.827][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100923, lastRunTime:2018-04-10 00:29:44.82, lastUpdatedStamp:2018-04-10 00:29:44.821, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:44.827][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:29:44.827][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:29:44.827][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:29:44.827][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:29:44.828][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100923 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:27-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:29:44.835][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:29:44.836][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:29:44.837][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:29:44.834, lastUpdatedStamp:2018-04-10 00:29:44.835, jobRunId:100923]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:29:44.837][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:29:44.837][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:29:44.837][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:29:44.837][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:29:44.857][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:29:44.858][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:29:44.913][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:29:44.913][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:29:44.917][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:29:44.820-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:29:44.941][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:29:44.945][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:29:44.945][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:29:44.954][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:29:44.954][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:30:05.963][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:30:05.963][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:30:05.963][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:30:05.969][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:30:05.970][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:30:05.974][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:30:05.974][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:30:05.974][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:30:05.976][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:30:06.453][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:30:06.455][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:30:06.497][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:30:06.499][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:30:06.503][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:30:06.505][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:30:06.505][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:30:06.507][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:30:06.507][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:30:06.508][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:30:06.510][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:30:06.507, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:30:06.510][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:30:06.511][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:30:06.511][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:30:06.511][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:30:06.514][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:30:06.515][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:30:06.515][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:30:06.515][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:30:06.515][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:30:06.516][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:30:06.506, lastUpdatedStamp:2018-04-10 00:30:06.514, jobRunId:100923]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:30:06.516][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:30:06.516][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:30:06.516][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:30:06.516][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:30:44.813][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:30:44.814][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:30:44.815][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:30:44.816][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:30:44.816][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:30:44.817][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:30:44.817][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:30:44.817][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:30:44.817][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100924, lastRunTime:2018-04-10 00:30:44.812, lastUpdatedStamp:2018-04-10 00:30:44.812, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:30:44.817][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:30:44.818][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:30:44.818][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:30:44.818][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:30:44.818][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100924 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:30:44.822][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:30:44.823][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:30:44.824][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:30:44.824][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:30:44.824][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:30:44.825][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:30:44.825][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:30:44.825][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:30:44.825][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:30:44.825][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:30:44.825][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:30:44.825][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:30:44.826][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:30:44.826][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:30:44.826][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:30:44.827][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:30:44.828][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:30:44.829][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:30:44.830][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:30:44.812-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:30:44.831][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:30:44.823, lastUpdatedStamp:2018-04-10 00:30:44.824, jobRunId:100924]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:30:44.831][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:30:44.831][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:30:44.831][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:30:44.832][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:30:44.938][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:30:44.939][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:30:44.940][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:30:44.942][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:30:44.942][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:31:05.943][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:31:05.943][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:31:05.943][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:31:05.947][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:31:05.947][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:31:05.950][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:31:05.950][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:31:05.950][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:31:05.950][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:31:06.397][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:31:06.399][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:31:06.415][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:31:06.417][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:31:06.419][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:31:06.421][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:31:06.422][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:31:06.423][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:31:06.423][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:31:06.423][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:31:06.423][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:31:06.423][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:31:06.423][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:31:06.424][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:31:06.424][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:31:06.424][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:31:06.424][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:31:06.424][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:31:06.424][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:31:06.426][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:31:06.423, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:31:06.426][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:31:06.426][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:31:06.427][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:31:06.427][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:31:06.428][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:31:06.428][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:31:06.428][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:31:06.428][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:31:06.429][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:31:06.430][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:31:06.430][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:31:06.431][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:31:06.423, lastUpdatedStamp:2018-04-10 00:31:06.428, jobRunId:100924]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:31:06.431][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:31:06.432][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:31:06.432][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:31:06.432][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:31:44.819][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:31:44.820][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:31:44.822][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:31:44.822][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:31:44.822][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:31:44.822][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:31:44.822][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:31:44.823][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:31:44.823][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:31:44.830][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100925, lastRunTime:2018-04-10 00:31:44.818, lastUpdatedStamp:2018-04-10 00:31:44.819, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:31:44.830][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:31:44.830][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:31:44.830][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:31:44.830][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:31:44.830][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100925 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:31:44.833][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:31:44.833][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:31:44.835][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:31:44.835][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:31:44.836][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:31:44.818-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:31:44.837][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:31:44.838][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:31:44.842][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:31:44.837, lastUpdatedStamp:2018-04-10 00:31:44.837, jobRunId:100925]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:31:44.843][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:31:44.843][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:31:44.843][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:31:44.843][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:31:44.965][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:31:44.967][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:31:44.967][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:31:44.969][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:31:44.969][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:32:05.972][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:32:05.973][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:32:05.973][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:32:05.976][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:32:05.977][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:32:05.980][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:32:05.980][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:32:05.980][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:32:05.981][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:32:06.539][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:32:06.541][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:32:06.558][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:32:06.560][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:32:06.561][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:32:06.563][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:32:06.564][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:32:06.565][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:32:06.565][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:32:06.565][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:32:06.565][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:32:06.565][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:32:06.565][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:32:06.565][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:32:06.566][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:32:06.566][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:32:06.566][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:32:06.566][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:32:06.566][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:32:06.567][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:32:06.565, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:32:06.567][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:32:06.567][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:32:06.567][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:32:06.567][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:32:06.569][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:32:06.569][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:32:06.570][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:32:06.570][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:32:06.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:32:06.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:32:06.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:32:06.570][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:32:06.571][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:32:06.571][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:32:06.571][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:32:06.571][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:32:06.571][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:32:06.571][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:32:06.572][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:32:06.573][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:32:06.565, lastUpdatedStamp:2018-04-10 00:32:06.569, jobRunId:100925]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:32:06.573][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:32:06.573][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:32:06.573][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:32:06.573][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:32:44.816][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:32:44.817][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:32:44.818][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:32:44.818][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:32:44.819][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:32:44.819][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:32:44.819][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:32:44.819][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:32:44.820][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:32:44.820][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:32:44.820][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:32:44.820][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:32:44.820][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:32:44.822][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:32:44.822][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:32:44.822][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:32:44.822][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:32:44.823][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100926, lastRunTime:2018-04-10 00:32:44.816, lastUpdatedStamp:2018-04-10 00:32:44.816, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:32:44.823][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:32:44.823][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:32:44.823][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:32:44.823][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:32:44.823][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100926 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:30-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:32:44.826][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:32:44.826][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:32:44.826][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:32:44.826][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:32:44.826][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:32:44.826][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:32:44.826][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:32:44.826][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:32:44.827][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:32:44.827][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:32:44.827][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:32:44.827][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:32:44.827][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:32:44.827][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:32:44.827][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:32:44.829][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:32:44.830][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:32:44.830][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:32:44.833][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:32:44.816-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:32:44.838][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:32:44.826, lastUpdatedStamp:2018-04-10 00:32:44.826, jobRunId:100926]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:32:44.838][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:32:44.838][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:32:44.838][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:32:44.838][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:32:44.940][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:32:44.946][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:32:44.946][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:32:44.948][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:32:44.948][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:33:05.947][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:33:05.948][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:33:05.948][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:33:05.949][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:33:05.949][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:33:05.951][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:33:05.952][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:33:05.952][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:33:05.952][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:33:06.413][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:33:06.416][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:33:06.440][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:33:06.443][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:33:06.445][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:33:06.448][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:33:06.449][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:33:06.450][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:33:06.451][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:33:06.451][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:33:06.451][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:33:06.451][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:33:06.452][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:33:06.452][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:33:06.452][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:33:06.452][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:33:06.452][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:33:06.453][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:33:06.453][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:33:06.454][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:33:06.45, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:33:06.455][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:33:06.455][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:33:06.455][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:33:06.455][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:33:06.457][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:33:06.457][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:33:06.457][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:33:06.457][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:33:06.458][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:33:06.458][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:33:06.458][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:33:06.458][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:33:06.458][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:33:06.459][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:33:06.459][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:33:06.459][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:33:06.459][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:33:06.459][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:33:06.460][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:33:06.461][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:33:06.45, lastUpdatedStamp:2018-04-10 00:33:06.457, jobRunId:100926]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:33:06.461][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:33:06.461][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:33:06.461][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:33:06.461][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:33:44.820][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:33:44.821][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:33:44.822][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:33:44.822][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:33:44.822][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:33:44.823][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:33:44.823][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:33:44.826][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:33:44.826][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:33:44.827][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100927, lastRunTime:2018-04-10 00:33:44.819, lastUpdatedStamp:2018-04-10 00:33:44.82, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:33:44.827][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:33:44.827][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:33:44.827][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:33:44.827][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:33:44.827][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100927 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:33-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:33:44.866][INFO ](pool-2-thread-2) Found entities in 20 files in 37ms [EntityFacadeImpl.class]
[15:33:44.870][INFO ](pool-2-thread-2) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:33:44.871][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:33:44.872][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:33:44.872][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:33:44.87, lastUpdatedStamp:2018-04-10 00:33:44.871, jobRunId:100927]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:33:44.872][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:33:44.872][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:33:44.872][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:33:44.872][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:33:44.883][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:33:44.886][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:33:44.888][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:33:44.888][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:33:44.889][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:33:44.819-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:33:45.068][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:33:45.069][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:33:45.069][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:33:45.071][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:33:45.072][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:34:06.072][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:34:06.073][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:34:06.073][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:34:06.074][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:34:06.080][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:34:06.084][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:34:06.085][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:34:06.085][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:34:06.088][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:34:06.462][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:34:06.464][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:34:06.477][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:34:06.479][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:34:06.482][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:34:06.496][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:34:06.497][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:34:06.498][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:34:06.498][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:34:06.499][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:34:06.500][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:34:06.498, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:34:06.500][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:34:06.500][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:34:06.500][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:34:06.500][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:34:06.503][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:34:06.506][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:34:06.506][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:34:06.506][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:34:06.506][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:34:06.507][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:34:06.508][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:34:06.498, lastUpdatedStamp:2018-04-10 00:34:06.503, jobRunId:100927]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:34:06.508][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:34:06.508][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:34:06.508][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:34:06.508][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:34:41.516][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ? [EntityFindBuilder.class]
[15:34:41.517][DEBUG](qtp379110473-15) Executed query with SQL [SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ?] and parameters [[username:admin]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.522][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.523][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.526][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.527][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.531][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.531][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.532][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.532][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.536][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.536][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.537][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.537][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.547][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.548][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.548][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.549][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.553][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.553][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.554][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.554][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.559][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.559][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.560][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.560][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.567][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ? [EntityFindBuilder.class]
[15:34:41.567][DEBUG](qtp379110473-15) Executed query with SQL [SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ?] and parameters [[userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.569][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:34:41.571][DEBUG](qtp379110473-15) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.644][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:41.645][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/apps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.676][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.677][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.677][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.677][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.678][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.678][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.695][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.695][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Security, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.701][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:41.702][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.705][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:41.706][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.708][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:41.708][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Charts.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.877][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.878][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:NacsAdmin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.899][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.899][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.901][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.901][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.902][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.903][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.914][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.914][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.915][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.915][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.916][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.917][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.941][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.942][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Dashboard, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.943][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:41.943][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.957][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:41.957][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.964][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.965][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:System, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:41.978][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:41.982][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Artifact Stats, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.007][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.007][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.010][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.010][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.021][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.022][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.024][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.030][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Applications, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.031][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.032][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.032][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.033][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.033][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.034][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.048][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.049][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.058][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.059][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.064][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.064][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.066][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.066][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.068][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.068][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount/UserAccountList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.076][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.076][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.077][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.077][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.078][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.078][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.084][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.085][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.086][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.086][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.087][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.088][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.095][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.095][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.097][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.097][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.098][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.098][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.098][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.099][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Mrchnt.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.104][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.105][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-mrchnt/screen/NacsMrchnt/MrchntList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.145][INFO ](qtp379110473-15) Created 256 automatic reverse relationships [EntityFacadeImpl.class]
[15:34:42.176][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.177][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.177][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.178][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.178][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.178][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.185][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.186][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.188][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.189][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.190][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.191][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.195][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.196][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.196][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.200][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.200][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.201][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.201][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.203][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Channel.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.206][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.209][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.225][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.227][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.228][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.229][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.229][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.230][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.236][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.237][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.237][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.237][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.238][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.238][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.242][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.242][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.243][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.243][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.243][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.247][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.248][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.248][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Route.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.258][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.259][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-route/screen/NacsRoute/RouteList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.279][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.280][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.280][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.281][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.284][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.285][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.290][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.293][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.293][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.294][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.295][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.295][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.298][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.299][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.299][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.300][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.300][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.300][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.303][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.303][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.305][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.305][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.305][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.306][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.309][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.309][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.310][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.310][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.311][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.311][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.311][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.313][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Check.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.319][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.320][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-check/screen/NacsCheck/ChannelCheckList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.322][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.323][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.324][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.324][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.325][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.325][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.333][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.333][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.334][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.335][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.335][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.335][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.338][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.339][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.340][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.340][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.340][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.341][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.341][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.342][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Clear.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.346][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.347][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-clear/screen/NacsClear/ChannelClearList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.349][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.350][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.350][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.351][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.351][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.351][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.435][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.436][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.438][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.439][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/TxItem.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.451][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.451][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.452][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.453][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.454][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.454][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.472][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.473][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.475][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:34:42.476][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System/ServiceJob.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.500][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.500][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.506][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.507][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.507][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.508][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:42.509][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:42.509][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Nacs Admin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.729][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.730][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.731][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.731][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.747][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.748][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.748][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.749][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.749][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.750][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.769][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.781][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.781][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.782][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.782][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.790][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.807][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.808][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.808][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.809][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.809][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.809][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.819][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.819][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代收交易统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.820][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.820][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代收交易统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.820][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.821][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代收交易统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.822][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.822][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${ss11}元  总笔数：${c11}笔, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.823][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.823][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${ss11}元  总笔数：${c11}笔, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:43.823][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:43.824][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${ss11}元  总笔数：${c11}笔, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.288][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.289][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.289][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.290][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.291][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.291][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.309][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.310][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.310][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.311][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.311][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.312][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.323][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.323][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.324][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.325][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.325][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.326][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.337][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.338][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代付交易统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.339][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.340][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代付交易统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.340][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.347][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代付交易统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.349][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.350][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s22}元  总笔数：${c22}笔, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.350][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.350][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s22}元  总笔数：${c22}笔, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.351][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.352][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s22}元  总笔数：${c22}笔, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.695][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT [EntityFindBuilder.class]
[15:34:44.697][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.735][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.742][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100051, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.744][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.745][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100051, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.758][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.759][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100052, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.759][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.760][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100052, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.761][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.762][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100053, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.763][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.763][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100053, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.768][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.768][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100054, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.769][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.770][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100054, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.771][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.772][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100055, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.772][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.773][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100055, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.776][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.777][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100056, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.777][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:44.778][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100056, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.789][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.790][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.790][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.791][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.791][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.792][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.801][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.801][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.802][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.802][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.802][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.803][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.816][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.817][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.817][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.818][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.819][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.820][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.822][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:34:44.824][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.825][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:34:44.833][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:34:44.833][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:34:44.833][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:34:44.834][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100928, lastRunTime:2018-04-10 00:34:44.822, lastUpdatedStamp:2018-04-10 00:34:44.822, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:34:44.834][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:34:44.834][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:34:44.834][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:34:44.834][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:34:44.835][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100928 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:33-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:34:44.838][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.839][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:34:44.839][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:34:44.840][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:34:44.840][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:34:44.840][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:34:44.840][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:34:44.840][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:34:44.840][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:34:44.840][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:34:44.840][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:34:44.841][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:34:44.841][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:34:44.841][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:34:44.844][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代收交易统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.845][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.845][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代收交易统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.847][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.847][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代收交易统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.848][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.848][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s33}元  总笔数：${c33}笔, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.848][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.849][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s33}元  总笔数：${c33}笔, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.850][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:44.850][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s33}元  总笔数：${c33}笔, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.934][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:34:44.935][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.937][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:34:44.938][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:34:44.939][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:34:44.822-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:34:44.942][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:34:44.944][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:34:44.838, lastUpdatedStamp:2018-04-10 00:34:44.839, jobRunId:100928]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:34:44.944][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:34:44.944][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:34:44.944][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:34:44.944][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:34:45.289][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT [EntityFindBuilder.class]
[15:34:45.290][DEBUG](qtp379110473-11) Executed query with SQL [SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.294][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.295][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100051, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.300][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.303][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100051, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.306][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.307][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100052, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.309][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.310][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100052, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.321][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.322][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100053, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.323][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.324][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100053, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.335][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.336][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100054, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.338][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.338][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100054, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.341][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.342][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100055, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.342][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.343][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100055, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.344][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.344][DEBUG](qtp379110473-11) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100056, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.344][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[15:34:45.345][DEBUG](qtp379110473-11) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100056, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.363][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.364][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name4, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.364][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.366][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name4, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.366][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.367][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name4, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.376][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.376][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count4, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.377][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.377][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count4, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.377][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.378][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count4, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.387][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.387][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum4, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.390][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:34:45.391][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:34:45.391][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:34:45.392][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.392][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum4, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.393][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:34:45.393][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:34:45.394][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.394][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum4, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.405][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.406][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代付交易统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.406][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.407][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代付交易统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.407][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.408][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代付交易统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.408][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.409][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s44}元  总笔数：${c44}笔, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.409][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.410][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s44}元  总笔数：${c44}笔, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.411][DEBUG](qtp379110473-11) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:45.411][DEBUG](qtp379110473-11) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s44}元  总笔数：${c44}笔, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:45.429][INFO ](qtp379110473-11) apps/nacs-admin/dashboard [] in 2752ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:34:45.908][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:34:45.909][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:34:45.910][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:34:45.911][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:34:49.702][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:34:49.704][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:OpnFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.705][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST [EntityFindBuilder.class]
[15:34:49.706][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST] and parameters [[enumTypeId:VerifiedFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.710][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL [EntityFindBuilder.class]
[15:34:49.711][DEBUG](qtp379110473-16) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.712][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:34:49.712][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:TrxCtgy]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.713][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:34:49.720][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:FeeChargeMode]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.889][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.889][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.890][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.890][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.890][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.891][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.911][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.911][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.912][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.912][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.912][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.912][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.922][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.922][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.923][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.923][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.923][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.924][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.926][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.927][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.928][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.928][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.929][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.931][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.932][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.933][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.933][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.935][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.935][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.935][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.981][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.982][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.982][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.983][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.983][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.983][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.984][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.984][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.986][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.986][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:49.987][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:49.987][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.005][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.006][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.006][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.007][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.007][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.008][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.021][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.021][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.021][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.022][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.022][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.023][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.023][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.023][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.024][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.024][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.025][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.026][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.047][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.048][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.049][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.049][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.049][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.050][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.058][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.059][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.059][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.060][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.060][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.061][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.078][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.078][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.079][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.079][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.080][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.080][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.081][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.081][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.081][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.082][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.082][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.082][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.083][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.083][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.084][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.084][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.085][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.086][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.086][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.086][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.088][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.088][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.089][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.089][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.091][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.093][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.093][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.094][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.095][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.096][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.096][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.096][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.097][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.097][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.097][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.098][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.100][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.101][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.101][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.101][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.102][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.102][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.104][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.104][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.105][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.106][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.108][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.108][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.109][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.109][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.109][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:34:50.113][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:34:50.176][INFO ](qtp379110473-16) apps/nacs-admin/Channel/ChannelList [] in 739ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:34:50.881][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:34:50.882][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:34:50.882][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:34:50.883][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:35:06.393][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:35:06.393][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:35:06.394][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:35:06.398][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:35:06.401][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:35:06.405][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:35:06.405][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:35:06.405][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:35:06.406][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:35:06.700][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:35:06.711][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:35:06.723][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:35:06.725][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:35:06.726][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:35:06.728][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:35:06.728][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:35:06.729][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:35:06.730][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:35:06.730][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:35:06.731][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:35:06.729, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:35:06.732][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:35:06.732][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:35:06.732][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:35:06.732][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:35:06.733][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:35:06.733][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:35:06.733][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:35:06.734][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:35:06.735][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:35:06.735][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:35:06.737][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:35:06.729, lastUpdatedStamp:2018-04-10 00:35:06.733, jobRunId:100928]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:35:06.737][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:35:06.737][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:35:06.737][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:35:06.737][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:35:44.825][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:35:44.825][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:35:44.826][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:35:44.827][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:35:44.827][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:35:44.827][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100929, lastRunTime:2018-04-10 00:35:44.823, lastUpdatedStamp:2018-04-10 00:35:44.824, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:35:44.827][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:35:44.828][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:35:44.828][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100929 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:33-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:35:44.830][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:35:44.831][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:35:44.831][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:35:44.83, lastUpdatedStamp:2018-04-10 00:35:44.83, jobRunId:100929]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:35:44.831][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:35:44.831][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:35:44.831][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:35:44.831][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:35:44.851][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:35:44.851][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:35:44.858][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:35:44.859][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:35:44.864][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:35:44.823-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:35:44.919][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:35:44.922][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:35:44.922][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:35:44.924][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:35:44.924][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:36:05.927][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:36:05.928][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:36:05.928][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:36:05.929][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:36:05.929][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:36:05.932][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:36:05.932][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:36:05.932][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:36:05.933][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:36:06.247][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:36:06.249][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:36:06.268][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:36:06.270][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:36:06.272][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:36:06.274][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:36:06.274][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:36:06.276][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:36:06.276][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:36:06.276][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:36:06.277][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:36:06.277][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:36:06.277][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:36:06.277][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:36:06.277][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:36:06.277][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:36:06.277][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:36:06.277][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:36:06.277][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:36:06.278][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:36:06.276, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:36:06.278][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:36:06.278][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:36:06.278][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:36:06.278][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:36:06.279][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:36:06.279][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:36:06.279][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:36:06.280][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:36:06.280][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:36:06.281][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:36:06.276, lastUpdatedStamp:2018-04-10 00:36:06.279, jobRunId:100929]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:36:06.281][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:36:06.281][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:36:06.281][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:36:06.281][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:36:44.828][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:36:44.829][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:36:44.830][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:36:44.831][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:36:44.832][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:36:44.832][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:36:44.833][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:36:44.833][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:36:44.834][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100930, lastRunTime:2018-04-10 00:36:44.825, lastUpdatedStamp:2018-04-10 00:36:44.827, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:36:44.834][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:36:44.834][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:36:44.834][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:36:44.834][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:36:44.834][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100930 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:36-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:36:44.838][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:36:44.839][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:36:44.840][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:36:44.841][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:36:44.842][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:36:44.825-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:36:44.843][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:36:44.844][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:36:44.844][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:36:44.844][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:36:44.844][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:36:44.844][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:36:44.845][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:36:44.843, lastUpdatedStamp:2018-04-10 00:36:44.843, jobRunId:100930]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:36:44.845][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:36:44.846][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:36:44.846][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:36:44.846][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:36:44.916][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:36:44.917][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:36:44.917][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:36:44.919][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:36:44.919][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:37:05.912][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:37:05.912][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:37:05.913][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:37:05.918][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:37:05.918][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:37:05.924][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:37:05.924][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:37:05.924][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:37:05.924][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:37:06.235][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:37:06.237][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:37:06.245][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:37:06.248][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:37:06.249][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:37:06.251][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:37:06.251][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:37:06.258][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:37:06.258][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:37:06.258][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:37:06.266][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:37:06.258, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:37:06.267][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:37:06.267][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:37:06.267][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:37:06.267][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:37:06.268][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:37:06.269][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:37:06.269][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:37:06.270][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:37:06.257, lastUpdatedStamp:2018-04-10 00:37:06.268, jobRunId:100930]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:37:06.270][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:37:06.270][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:37:06.270][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:37:06.270][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:37:44.830][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:37:44.830][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:37:44.831][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:37:44.831][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:37:44.831][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:37:44.831][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:37:44.831][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:37:44.831][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:37:44.831][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:37:44.832][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:37:44.832][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100931, lastRunTime:2018-04-10 00:37:44.827, lastUpdatedStamp:2018-04-10 00:37:44.829, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:37:44.832][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100931 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:36-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:37:44.835][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:37:44.835][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:37:44.835][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:37:44.835][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:37:44.835][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:37:44.835][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:37:44.835][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:37:44.836][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:37:44.836][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:37:44.836][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:37:44.836][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:37:44.836][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:37:44.836][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:37:44.836][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:37:44.836][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:37:44.835, lastUpdatedStamp:2018-04-10 00:37:44.835, jobRunId:100931]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:37:44.836][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:37:44.836][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:37:44.837][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:37:44.837][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:37:44.875][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:37:44.876][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:37:44.877][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:37:44.878][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:37:44.878][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:37:44.827-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:37:44.916][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:37:44.920][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:37:44.921][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:37:44.922][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:37:44.923][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:38:05.925][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:38:05.925][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:38:05.925][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:38:05.926][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:38:05.927][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:38:05.932][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:38:05.932][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:38:05.932][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:38:05.933][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:38:06.254][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:38:06.256][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:38:06.267][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:38:06.269][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:38:06.271][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:38:06.274][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:38:06.274][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:38:06.279][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:38:06.279][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:38:06.279][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:38:06.279][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:38:06.279][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:38:06.279][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:38:06.279][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:38:06.280][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:38:06.280][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:38:06.280][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:38:06.280][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:38:06.280][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:38:06.281][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:38:06.279, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:38:06.281][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:38:06.281][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:38:06.281][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:38:06.281][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:38:06.282][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:38:06.282][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:38:06.283][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:38:06.283][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:38:06.284][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:38:06.279, lastUpdatedStamp:2018-04-10 00:38:06.282, jobRunId:100931]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:38:06.284][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:38:06.284][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:38:06.284][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:38:06.284][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:38:44.830][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:38:44.832][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:38:44.834][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:38:44.835][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:38:44.835][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:38:44.835][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:38:44.836][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:38:44.836][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:38:44.837][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100932, lastRunTime:2018-04-10 00:38:44.83, lastUpdatedStamp:2018-04-10 00:38:44.83, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:38:44.837][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:38:44.837][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:38:44.837][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:38:44.837][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:38:44.837][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100932 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:36-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:38:44.841][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:38:44.841][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:38:44.841][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:38:44.841][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:38:44.841][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:38:44.841][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:38:44.841][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:38:44.841][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:38:44.842][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:38:44.842][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:38:44.842][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:38:44.842][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:38:44.842][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:38:44.842][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:38:44.843][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:38:44.843][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:38:44.845][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:38:44.84, lastUpdatedStamp:2018-04-10 00:38:44.841, jobRunId:100932]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:38:44.845][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:38:44.845][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:38:44.845][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:38:44.845][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:38:44.848][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:38:44.849][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:38:44.850][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:38:44.830-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:38:44.909][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:38:44.931][INFO ](MoquiWorker-3) Found entities in 20 files in 22ms [EntityFacadeImpl.class]
[15:38:44.932][INFO ](MoquiWorker-3) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:38:44.933][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:38:44.933][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:38:44.935][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:38:44.935][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:39:05.942][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:39:05.943][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:39:05.943][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:39:05.944][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:39:05.944][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:39:05.946][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:39:05.946][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:39:05.946][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:39:05.949][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:39:06.224][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:39:06.227][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:39:06.240][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:39:06.242][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:39:06.243][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:39:06.245][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:39:06.245][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:39:06.246][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:39:06.246][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:39:06.247][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:39:06.247][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:39:06.246, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:06.247][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:39:06.247][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:39:06.248][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:39:06.248][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:39:06.249][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:39:06.249][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:39:06.250][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:39:06.246, lastUpdatedStamp:2018-04-10 00:39:06.248, jobRunId:100932]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:06.250][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:39:06.250][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:39:06.250][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:39:06.250][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:39:31.712][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.714][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.716][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.717][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.718][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.719][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.719][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.719][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.720][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.721][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.814][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:39:31.814][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_NAVBAR_COMP]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.815][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:39:31.816][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_LOGO]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.819][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:39:31.820][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_TITLE]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.826][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.826][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.827][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.827][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.828][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.828][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.829][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.829][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.830][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.830][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.831][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:39:31.831][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:39:31.838][INFO ](qtp379110473-15) vapps/nacs-admin/Channel/ChannelList [] in 386ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:39:32.649][INFO ](qtp379110473-15) Reloading modified screen component://nacs-channel/screen/NacsChannel/ChannelList.xml [ScreenFacadeImpl.class]
[15:39:32.684][INFO ](qtp379110473-15) Created 28 automatic reverse relationships [EntityFacadeImpl.class]
[15:39:32.875][INFO ](qtp379110473-65) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:56245 [NotificationEndpoint.class]
[15:39:33.041][INFO ](qtp379110473-12) apps/nacs-admin [] in 128ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:39:33.090][INFO ](qtp379110473-66) apps/nacs-admin/Channel [] in 13ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:39:33.273][INFO ](qtp379110473-15) apps/nacs-admin/Channel/ChannelList [] in 144ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:39:35.894][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.897][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.897][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.898][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.898][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.900][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.902][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.902][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.903][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.903][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.904][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.904][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.904][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.905][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.905][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.905][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.906][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.906][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.908][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.909][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.910][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.911][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.911][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.912][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.913][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.914][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.914][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.915][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.916][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.917][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.917][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.924][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.924][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.925][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.925][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.928][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.928][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.929][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.929][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.930][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:35.936][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:39:35.938][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:44.832][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:39:44.833][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:39:44.834][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:39:44.834][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:39:44.835][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:39:44.836][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:39:44.836][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100933, lastRunTime:2018-04-10 00:39:44.832, lastUpdatedStamp:2018-04-10 00:39:44.832, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:44.836][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:39:44.836][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:39:44.836][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:39:44.836][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:39:44.837][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100933 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:39-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:39:44.841][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:39:44.841][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:39:44.841][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:39:44.842][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:39:44.842][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:39:44.843][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:39:44.841, lastUpdatedStamp:2018-04-10 00:39:44.841, jobRunId:100933]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:39:44.843][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:39:44.843][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:39:44.843][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:39:44.843][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:39:44.846][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:39:44.847][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:39:44.848][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:39:44.832-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:39:44.931][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:39:44.931][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:39:44.932][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:39:44.935][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:39:44.935][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:40:05.937][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:40:05.937][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:40:05.937][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:40:05.938][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:40:05.939][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:40:05.942][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:40:05.942][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:40:05.942][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:40:05.944][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:40:06.190][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:40:06.193][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:40:06.208][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:40:06.210][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:40:06.214][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:40:06.216][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:40:06.216][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:40:06.217][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:40:06.217][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:40:06.217][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:40:06.217][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:40:06.217][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:40:06.217][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:40:06.217][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:40:06.217][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:40:06.218][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:40:06.218][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:40:06.218][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:40:06.218][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:40:06.219][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:40:06.217, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:06.219][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:40:06.219][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:40:06.219][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:40:06.219][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:40:06.229][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:40:06.230][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:40:06.230][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:40:06.230][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:40:06.217, lastUpdatedStamp:2018-04-10 00:40:06.229, jobRunId:100933]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:06.230][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:40:06.230][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:40:06.230][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:40:06.231][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:40:06.238][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHitBin]] in [0] seconds [EntityQueryBuilder.class]
[15:40:06.238][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:40:06.239][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:40:06.239][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:40:06.241][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101009, lastUpdatedStamp:2018-04-10 00:40:06.229, seqName:moqui.server.ArtifactHitBin]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:06.242][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:40:06.242][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:40:06.242][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:40:06.243][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:40:06.252][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:06.252][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:06.254][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:06.257][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:42.937][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:42.954][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:43.130][INFO ](qtp379110473-13) vapps/nacs-admin/Channel/ChannelList [] in 209ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:40:43.916][INFO ](qtp379110473-13) Reloading modified screen component://nacs-channel/screen/NacsChannel/ChannelList.xml [ScreenFacadeImpl.class]
[15:40:43.941][INFO ](qtp379110473-15) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:56286 [NotificationEndpoint.class]
[15:40:43.949][INFO ](qtp379110473-13) Created 28 automatic reverse relationships [EntityFacadeImpl.class]
[15:40:44.230][INFO ](qtp379110473-13) apps/nacs-admin [] in 125ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:40:44.263][INFO ](qtp379110473-12) apps/nacs-admin/Channel [] in 3ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:40:44.483][INFO ](qtp379110473-65) apps/nacs-admin/Channel/ChannelList [] in 182ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:40:44.835][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:44.835][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:40:44.836][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:40:44.837][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:44.837][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:40:44.837][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:44.837][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:40:44.838][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:40:44.838][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:40:44.838][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:40:44.839][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100934, lastRunTime:2018-04-10 00:40:44.835, lastUpdatedStamp:2018-04-10 00:40:44.835, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:44.839][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:40:44.839][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:44.839][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:40:44.839][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:40:44.839][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:40:44.840][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100934 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:39-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:40:44.840][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:44.841][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:44.843][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:44.844][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:44.845][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:40:44.845][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:40:44.846][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:44.846][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:40:44.847][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:40:44.847][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:40:44.847][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:40:44.847][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:40:44.848][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:40:44.849][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:40:44.844, lastUpdatedStamp:2018-04-10 00:40:44.846, jobRunId:100934]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:44.849][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:40:44.849][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:40:44.849][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:40:44.849][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:40:44.849][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:40:44.835-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:40:44.912][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:40:44.912][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:40:44.913][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:40:44.915][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:40:44.915][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:40:45.896][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.896][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.898][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.899][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.899][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.900][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.900][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.901][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.901][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.902][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.902][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.903][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.903][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.903][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.903][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.904][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.904][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.905][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.905][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.908][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.909][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.909][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.909][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.910][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.910][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.911][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.911][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.912][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.912][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.913][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.913][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.914][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.914][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.915][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.915][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.916][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.916][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.918][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.918][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.919][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:45.919][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:45.919][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:50.762][INFO ](qtp379110473-66) apps/nacs-admin/Channel/ChannelList [] in 117ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:40:50.895][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:50.896][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:50.897][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:50.898][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:52.703][INFO ](qtp379110473-12) apps/nacs-admin/Channel/ChannelList [] in 17ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:40:53.552][INFO ](qtp379110473-15) apps/nacs-admin/Channel/ChannelList [] in 15ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:40:55.895][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:55.896][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:55.897][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:55.899][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:55.899][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:55.900][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:55.901][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:40:55.902][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:40:58.588][INFO ](qtp379110473-66) apps/nacs-admin/Channel/ChannelList [] in 267ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:00.895][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:00.896][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:02.758][INFO ](qtp379110473-13) apps/nacs-admin/Channel/ChannelList [] in 15ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:05.896][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:05.897][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:05.911][INFO ](MoquiWorker-1) 333 [Test_DaliySign_Bank.class]
[15:41:05.912][INFO ](MoquiWorker-1) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:41:05.912][INFO ](MoquiWorker-1) 4444 [Test_DaliySign_Bank.class]
[15:41:05.913][INFO ](MoquiWorker-1) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:41:05.914][INFO ](MoquiWorker-1) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:41:05.916][INFO ](MoquiWorker-1) 开始获取参数！ [SFTPServiceContext.class]
[15:41:05.917][INFO ](MoquiWorker-1) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:41:05.917][ERROR](MoquiWorker-1) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:41:05.917][INFO ](MoquiWorker-1) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:41:06.409][INFO ](MoquiWorker-1) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:41:06.413][ERROR](MoquiWorker-1) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:41:06.431][WARN ](MoquiWorker-1) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:41:06.434][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:41:06.436][WARN ](MoquiWorker-1) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:41:06.439][ERROR](MoquiWorker-1) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:41:06.439][WARN ](MoquiWorker-1) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:41:06.440][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:41:06.440][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:41:06.441][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:41:06.441][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:41:06.44, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:06.442][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:41:06.442][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:41:06.442][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:41:06.442][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:41:06.444][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:41:06.445][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:41:06.448][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:41:06.448][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:41:06.448][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:41:06.448][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:41:06.448][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:41:06.449][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:41:06.439, lastUpdatedStamp:2018-04-10 00:41:06.444, jobRunId:100934]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:06.449][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:41:06.449][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:41:06.449][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:41:06.449][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:41:15.159][INFO ](qtp379110473-12) vapps/nacs-admin/Channel [] in 219ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:15.899][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.902][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.902][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.903][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.903][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.904][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.904][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.904][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.905][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.905][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.906][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.906][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.907][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.907][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.907][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.913][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.913][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.915][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.915][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.916][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.916][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.917][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.917][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.917][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.917][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.922][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.922][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.923][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.923][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.926][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.927][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:15.928][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:15.966][INFO ](qtp379110473-16) Reloading modified screen component://nacs-channel/screen/NacsChannel/ChannelList.xml [ScreenFacadeImpl.class]
[15:41:15.987][INFO ](qtp379110473-64) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:56316 [NotificationEndpoint.class]
[15:41:16.006][INFO ](qtp379110473-16) Created 28 automatic reverse relationships [EntityFacadeImpl.class]
[15:41:16.249][INFO ](qtp379110473-16) apps/nacs-admin [] in 126ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:16.302][INFO ](qtp379110473-66) apps/nacs-admin/Channel [] in 2ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:16.577][INFO ](qtp379110473-12) apps/nacs-admin/Channel/ChannelList [] in 221ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:20.898][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:20.898][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:20.899][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:20.899][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:20.899][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:20.900][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:20.900][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:20.900][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:20.900][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:20.901][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:33.507][INFO ](qtp379110473-64) vapps/nacs-admin/Channel [] in 152ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:34.204][INFO ](qtp379110473-13) Reloading modified screen component://nacs-channel/screen/NacsChannel/ChannelList.xml [ScreenFacadeImpl.class]
[15:41:34.286][INFO ](qtp379110473-65) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:56328 [NotificationEndpoint.class]
[15:41:34.489][INFO ](qtp379110473-64) apps/nacs-admin [] in 93ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:34.516][INFO ](qtp379110473-11) apps/nacs-admin/Channel [] in 2ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:34.675][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.675][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Fee Type, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.675][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.676][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Fee Type, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.676][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.676][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Fee Type, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.677][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.677][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Percentage, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.677][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.677][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Percentage, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.677][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.678][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Percentage, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.678][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.678][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Amt, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.679][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.679][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Amt, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.679][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.679][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Amt, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.680][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.681][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行开启时间, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.681][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.681][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行开启时间, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.681][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.682][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行开启时间, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.683][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.683][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.683][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.683][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.684][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.684][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.684][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.685][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行关闭时间, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.685][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.685][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行关闭时间, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.685][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.685][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道运行关闭时间, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.686][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.686][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约验证标志, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.687][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.687][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约验证标志, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.687][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.687][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约验证标志, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.716][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.716][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NON-VERIFIED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.717][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.719][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NON-VERIFIED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.720][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.720][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:NON-VERIFIED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.720][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.721][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:非验证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.721][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.721][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:非验证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.721][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.722][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:非验证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.722][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.722][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:VERIFIED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.722][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.723][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:VERIFIED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.723][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.723][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:VERIFIED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.723][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.723][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:验证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.723][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.723][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:验证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.724][DEBUG](qtp379110473-65) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:41:34.724][DEBUG](qtp379110473-65) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:验证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:41:34.730][INFO ](qtp379110473-65) apps/nacs-admin/Channel/ChannelList [] in 180ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:35.897][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.898][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.898][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.899][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.899][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.900][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.900][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.901][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.901][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.902][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.902][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.902][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.903][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.903][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.903][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.906][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.906][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.907][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.907][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.908][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.908][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.912][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.914][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.914][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.916][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:41:35.917][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHit]] in [0] seconds [EntityQueryBuilder.class]
[15:41:35.917][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:41:35.917][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:41:35.918][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:41:35.918][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101110, lastUpdatedStamp:2018-04-10 00:41:35.915, seqName:moqui.server.ArtifactHit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.918][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:41:35.918][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:41:35.919][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:41:35.919][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:41:35.920][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.921][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.922][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.922][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.923][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.923][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.923][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.924][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.924][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.924][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.924][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.925][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.925][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.925][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.925][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.926][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:35.926][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:35.926][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:42.478][INFO ](qtp379110473-16) vapps/nacs-admin/Channel [] in 127ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:43.159][INFO ](qtp379110473-65) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:56333 [NotificationEndpoint.class]
[15:41:43.215][INFO ](qtp379110473-17) apps/nacs-admin [] in 101ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:43.251][INFO ](qtp379110473-16) apps/nacs-admin/Channel [] in 2ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:43.304][INFO ](qtp379110473-11) apps/nacs-admin/Channel/ChannelList [] in 21ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:41:44.836][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:41:44.837][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:41:44.838][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:41:44.838][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:44.838][INFO ](pool-2-thread-3) 更 [EntityValueBase.class]
[15:41:44.838][INFO ](pool-2-thread-3) 更1 [EntityValueBase.class]
[15:41:44.838][INFO ](pool-2-thread-3) 更2 [EntityValueBase.class]
[15:41:44.838][INFO ](pool-2-thread-3) 更4 [EntityValueBase.class]
[15:41:44.838][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:41:44.838][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:41:44.838][INFO ](pool-2-thread-3) 更5 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) 更5.5 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) 更9 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) 更10 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) 更11 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) 打SQL！ [EntityValueImpl.class]
[15:41:44.839][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:41:44.839][DEBUG](pool-2-thread-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100935, lastRunTime:2018-04-10 00:41:44.836, lastUpdatedStamp:2018-04-10 00:41:44.836, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:44.839][INFO ](pool-2-thread-3) 更12 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) 更13 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) 更7 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) 更8 [EntityValueBase.class]
[15:41:44.839][INFO ](pool-2-thread-3) Running job HandleChkBeFile run 100935 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:39-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:41:44.842][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:41:44.842][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:41:44.842][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:41:44.842][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:41:44.843][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:41:44.843][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:41:44.843][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:41:44.844][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:41:44.844][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-2, startTime:2018-04-10 00:41:44.842, lastUpdatedStamp:2018-04-10 00:41:44.842, jobRunId:100935]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:44.844][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:41:44.844][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:41:44.844][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:41:44.844][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:41:44.845][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:41:44.846][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:41:44.846][INFO ](pool-2-thread-3) Ran 1 Service Jobs starting 2018-04-10T00:41:44.836-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:41:44.906][INFO ](MoquiWorker-2) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:41:44.906][INFO ](MoquiWorker-2) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:41:44.906][INFO ](MoquiWorker-2) ============调核心对账============= [LoggerFacadeImpl.class]
[15:41:44.908][INFO ](MoquiWorker-2) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:41:44.908][INFO ](MoquiWorker-2) 222 [Test_DaliySign_Bank.class]
[15:41:45.897][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.898][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.898][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.899][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.899][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.902][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.902][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.903][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.903][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.903][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.904][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.904][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.904][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.905][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.905][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.906][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.906][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.906][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.907][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.907][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.907][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.908][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.908][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.908][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.909][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.909][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.909][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.910][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.910][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.911][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.911][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.911][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.912][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.912][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.912][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.913][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.913][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.914][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.914][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.915][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:41:45.915][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:41:45.916][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:42:05.903][INFO ](MoquiWorker-2) 333 [Test_DaliySign_Bank.class]
[15:42:05.903][INFO ](MoquiWorker-2) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:42:05.903][INFO ](MoquiWorker-2) 4444 [Test_DaliySign_Bank.class]
[15:42:05.905][INFO ](MoquiWorker-2) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:42:05.905][INFO ](MoquiWorker-2) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:42:05.908][INFO ](MoquiWorker-2) 开始获取参数！ [SFTPServiceContext.class]
[15:42:05.908][INFO ](MoquiWorker-2) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:42:05.908][ERROR](MoquiWorker-2) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:42:05.909][INFO ](MoquiWorker-2) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:42:06.246][INFO ](MoquiWorker-2) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:42:06.248][ERROR](MoquiWorker-2) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:42:06.260][WARN ](MoquiWorker-2) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:42:06.262][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:42:06.264][WARN ](MoquiWorker-2) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:42:06.266][ERROR](MoquiWorker-2) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:42:06.266][WARN ](MoquiWorker-2) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:42:06.267][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:42:06.267][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:42:06.267][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:42:06.268][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:42:06.268][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:42:06.268][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:42:06.268][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:42:06.268][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:42:06.270][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:42:06.270][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:42:06.270][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:42:06.270][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:42:06.271][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:42:06.267, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:42:06.271][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:42:06.271][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:42:06.271][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:42:06.271][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:42:06.272][INFO ](MoquiWorker-2) 更 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更1 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更2 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更4 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更5 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更5.5 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更9 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更10 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 更11 [EntityValueBase.class]
[15:42:06.273][INFO ](MoquiWorker-2) 打SQL！ [EntityValueImpl.class]
[15:42:06.273][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:42:06.274][DEBUG](MoquiWorker-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:42:06.267, lastUpdatedStamp:2018-04-10 00:42:06.272, jobRunId:100935]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:42:06.274][INFO ](MoquiWorker-2) 更12 [EntityValueBase.class]
[15:42:06.274][INFO ](MoquiWorker-2) 更13 [EntityValueBase.class]
[15:42:06.274][INFO ](MoquiWorker-2) 更7 [EntityValueBase.class]
[15:42:06.274][INFO ](MoquiWorker-2) 更8 [EntityValueBase.class]
[15:42:44.838][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:42:44.839][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:42:44.839][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:42:44.840][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:42:44.840][INFO ](pool-2-thread-1) 更 [EntityValueBase.class]
[15:42:44.840][INFO ](pool-2-thread-1) 更1 [EntityValueBase.class]
[15:42:44.840][INFO ](pool-2-thread-1) 更2 [EntityValueBase.class]
[15:42:44.840][INFO ](pool-2-thread-1) 更4 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更5 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更5.5 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更9 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更10 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更11 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 打SQL！ [EntityValueImpl.class]
[15:42:44.841][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:42:44.841][DEBUG](pool-2-thread-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100936, lastRunTime:2018-04-10 00:42:44.838, lastUpdatedStamp:2018-04-10 00:42:44.838, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更12 [EntityValueBase.class]
[15:42:44.841][INFO ](pool-2-thread-1) 更13 [EntityValueBase.class]
[15:42:44.842][INFO ](pool-2-thread-1) 更7 [EntityValueBase.class]
[15:42:44.842][INFO ](pool-2-thread-1) 更8 [EntityValueBase.class]
[15:42:44.842][INFO ](pool-2-thread-1) Running job HandleChkBeFile run 100936 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:42-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:42:44.844][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:42:44.844][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:42:44.844][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:42:44.844][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:42:44.844][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:42:44.844][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:42:44.844][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:42:44.844][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:42:44.845][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:42:44.845][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:42:44.845][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:42:44.845][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:42:44.845][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:42:44.845][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:42:44.845][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:42:44.846][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:42:44.847][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 00:42:44.844, lastUpdatedStamp:2018-04-10 00:42:44.844, jobRunId:100936]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:42:44.847][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:42:44.847][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:42:44.847][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:42:44.847][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:42:44.849][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:42:44.850][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:42:44.851][INFO ](pool-2-thread-1) Ran 1 Service Jobs starting 2018-04-10T00:42:44.838-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:42:44.913][INFO ](MoquiWorker-3) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:42:44.914][INFO ](MoquiWorker-3) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:42:44.914][INFO ](MoquiWorker-3) ============调核心对账============= [LoggerFacadeImpl.class]
[15:42:44.915][INFO ](MoquiWorker-3) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:42:44.915][INFO ](MoquiWorker-3) 222 [Test_DaliySign_Bank.class]
[15:43:05.917][INFO ](MoquiWorker-3) 333 [Test_DaliySign_Bank.class]
[15:43:05.917][INFO ](MoquiWorker-3) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:43:05.917][INFO ](MoquiWorker-3) 4444 [Test_DaliySign_Bank.class]
[15:43:05.918][INFO ](MoquiWorker-3) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:43:05.919][INFO ](MoquiWorker-3) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:43:05.920][INFO ](MoquiWorker-3) 开始获取参数！ [SFTPServiceContext.class]
[15:43:05.920][INFO ](MoquiWorker-3) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:43:05.920][ERROR](MoquiWorker-3) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:43:05.921][INFO ](MoquiWorker-3) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:43:06.184][INFO ](MoquiWorker-3) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:43:06.185][ERROR](MoquiWorker-3) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:43:06.196][WARN ](MoquiWorker-3) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:43:06.198][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:43:06.199][WARN ](MoquiWorker-3) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:43:06.201][ERROR](MoquiWorker-3) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:43:06.201][WARN ](MoquiWorker-3) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:43:06.202][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:43:06.202][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:43:06.203][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:43:06.203][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:43:06.204][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:43:06.202, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:43:06.204][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:43:06.204][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:43:06.204][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:43:06.204][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[15:43:06.205][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[15:43:06.205][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:43:06.207][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:43:06.202, lastUpdatedStamp:2018-04-10 00:43:06.205, jobRunId:100936]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:43:06.207][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[15:43:06.207][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[15:43:06.208][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[15:43:06.208][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[15:43:44.841][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:43:44.842][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:43:44.842][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:43:44.843][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[15:43:44.843][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[15:43:44.844][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:43:44.844][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100937, lastRunTime:2018-04-10 00:43:44.841, lastUpdatedStamp:2018-04-10 00:43:44.841, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:43:44.844][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[15:43:44.844][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[15:43:44.844][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[15:43:44.844][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[15:43:44.844][INFO ](pool-2-thread-2) Running job HandleChkBeFile run 100937 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:42-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:43:44.847][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:43:44.848][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:43:44.848][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:43:44.848][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:43:44.848][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:43:44.848][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:43:44.848][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 00:43:44.847, lastUpdatedStamp:2018-04-10 00:43:44.847, jobRunId:100937]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:43:44.848][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:43:44.848][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:43:44.849][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:43:44.849][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:43:44.865][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:43:44.865][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:43:44.866][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:43:44.867][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:43:44.868][INFO ](pool-2-thread-2) Ran 1 Service Jobs starting 2018-04-10T00:43:44.841-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:43:44.925][INFO ](MoquiWorker-4) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:43:44.926][INFO ](MoquiWorker-4) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:43:44.926][INFO ](MoquiWorker-4) ============调核心对账============= [LoggerFacadeImpl.class]
[15:43:44.928][INFO ](MoquiWorker-4) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:43:44.928][INFO ](MoquiWorker-4) 222 [Test_DaliySign_Bank.class]
[15:44:05.933][INFO ](MoquiWorker-4) 333 [Test_DaliySign_Bank.class]
[15:44:05.933][INFO ](MoquiWorker-4) 秘钥：null 时间戳： null [Test_DaliySign_Bank.class]
[15:44:05.933][INFO ](MoquiWorker-4) 4444 [Test_DaliySign_Bank.class]
[15:44:05.935][INFO ](MoquiWorker-4) 签到结束问问额 [Test_DaliySign_Bank.class]
[15:44:05.938][INFO ](MoquiWorker-4) ===去核心取对账文件=== [LoggerFacadeImpl.class]
[15:44:05.957][INFO ](MoquiWorker-4) Found entities in 20 files in 18ms [EntityFacadeImpl.class]
[15:44:05.958][INFO ](MoquiWorker-4) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:44:05.958][INFO ](MoquiWorker-4) 开始获取参数！ [SFTPServiceContext.class]
[15:44:05.958][INFO ](MoquiWorker-4) 准备开始下载文件:[null] [SFTPServiceContext.class]
[15:44:05.958][ERROR](MoquiWorker-4) 下载文件:[null]异常null [SFTPServiceContext.class]
[15:44:05.959][INFO ](MoquiWorker-4) ===核心对账文件落地成功=== [LoggerFacadeImpl.class]
[15:44:06.227][INFO ](MoquiWorker-4) 开始处理行内对账文件 [LoggerFacadeImpl.class]
[15:44:06.228][ERROR](MoquiWorker-4) Error running groovy script (java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)): 
1 : import static org.moqui.util.ObjectUtilities.*
2 : import static org.moqui.util.CollectionUtilities.*
3 : import static org.moqui.util.StringUtilities.*
4 : import java.sql.Timestamp
5 : // these are in the context by default: ExecutionContext ec, Map<String, Object> context, Map<String, Object> result
6 :     ec.logger.log("info", """开始处理行内对账文件""", null)
7 : 
8 :     // begin inline script
9 :     result = new File(fileName).readLines();
10 :                 n=0;
11 :                 //获取总笔数
12 :                 for(i in 0..result.size()-1){
13 :                    if(result[i].contains("-") && !result[i].contains("\\|")){
14 :                       n=i+1;
15 :                       break;
16 :                    }
17 :                 }
18 :                 count=result[n].trim().toInteger();
19 :     // end inline script
20 :     ec.logger.log("info", """===================总笔数 ${count}=======================""", null)
21 :     if (count==0) {
22 :     ec.logger.log("info", """====总笔数为0.直接去检查需要调账的记录=====""", null)
23 :     }
24 : 
25 :     if (count!=0) {
26 :     flag = basicConvert("""true""", "Boolean")
27 :     flag1 = basicConvert("""false""", "Boolean")
28 :     aaa = basicConvert("""${result[0].contains('|')}""", "Boolean")
29 :     ec.logger.log("info", """===================aaa ${aaa}=======================""", null)
30 :     if (aaa) {
31 : 
32 :     // begin inline script
33 :     //获取单笔数据集合
34 :                         single1=result[0].split('\\|');
35 :     // end inline script
36 :     ec.logger.log("info", """===================获取单笔数据集合 ${single1}=======================""", null)
37 :     coreDate = ("""${single1[2]}""")
38 :     ec.logger.log("debug", """日期=${coreDate}""", null)
39 :     coreTxId = ("""${single1[3]}""")
40 :     ec.logger.log("debug", """流水=${coreTxId}""", null)
41 :     coreAmt = ("""${single1[8]}""")
42 :     ec.logger.log("debug", """金额=${coreAmt}""", null)
43 :     flag1 = basicConvert("""true""", "Boolean")
44 :     }
45 : 
46 :     }
47 : 
48 :     startIndex = basicConvert("""0""", "Integer")
49 :     while (flag && flag1) {
50 :     ec.logger.log("info", """循环读取文件""", null)
51 :     dqSum = basicConvert("""0""", "Integer")
52 :     maxLength = basicConvert("""5000""", "Integer")
53 :     if (!(count > maxLength)) {
54 :     flag = basicConvert("""false""", "Boolean")
55 :     dqSum = basicConvert(count, "Integer")
56 :     }
57 : 
58 :     if (count > maxLength) {
59 :     count = ("""${count-maxLength}""")
60 :     dqSum = basicConvert(maxLength, "Integer")
61 :     }
62 : 
63 :     ec.logger.log("info", """===================起始index ${startIndex} 读取条数${dqSum} result${result}=======================""", null)
64 :     if (true) {
65 :         ec.service.sync().name("nacs.check.RegisterServices.resgister#ChkCoreFile1").requireNewTransaction(true).useTransactionCache(false)
66 :             .parameters([startIndex:startIndex,dqSum:dqSum,fileName:fileName]).call()
67 :         
68 :         if (ec.message.hasError()) return
69 :     }
70 :     startIndex = basicConvert("""${startIndex+maxLength}""", "Integer")
71 :     }
72 : 
73 :     txItem_xafind = ec.entity.find("nacs.trx.TxItem")
74 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
75 :             txItem = txItem_xafind.list()
76 :         txItemEntry_index = 0
77 :         _txItemEntryIterator = txItem.iterator()
78 :         while (_txItemEntryIterator.hasNext()) {
79 :             txItemEntry = _txItemEntryIterator.next()
80 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
81 :     mapSize = 1
82 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
83 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
84 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItem").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", txItem[0].nacsTxId, null, null, false, false, false, "false"))
85 :     ef.updateAll(temp_internal_Map);
86 :     }
87 :             txItemEntry_index++
88 :         }
89 :         if (txItem instanceof org.moqui.entity.EntityListIterator) txItem.close()
90 :     
91 :     TxItemCore_xafind = ec.entity.find("nacs.trx.TxItemCore")
92 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("workDate", "equals", workDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFlag", "equals", coreAcctFlag, "0", null, false, false, false, "false"))
93 :             TxItemCore = TxItemCore_xafind.list()
94 :         TxItemCoreEntry_index = 0
95 :         _TxItemCoreEntryIterator = TxItemCore.iterator()
96 :         while (_TxItemCoreEntryIterator.hasNext()) {
97 :             TxItemCoreEntry = _TxItemCoreEntryIterator.next()
98 :             TxItemCoreEntry_has_next = _TxItemCoreEntryIterator.hasNext()
99 :     mapSize = 1
100 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
101 :     temp_internal_Map.put('coreStatus',("""ACCT_TRANS_FAIL"""));
102 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.trx.TxItemCore").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("nacsTxId", "equals", TxItemCore[0].nacsTxId, null, null, false, false, false, "false"))
103 :     ef.updateAll(temp_internal_Map);
104 :     }
105 :             TxItemCoreEntry_index++
106 :         }
107 :         if (TxItemCore instanceof org.moqui.entity.EntityListIterator) TxItemCore.close()
108 :     
109 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
110 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false"))
111 :             checkChannel = checkChannel_xafind.list()
112 :     if (checkChannel) {
113 :     mapSize = 1
114 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
115 :     temp_internal_Map.put('coreType',("""CORE_CHECKING"""));
116 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
117 :     ef.updateAll(temp_internal_Map);
118 :     }
119 :     }
120 : 
121 :     txItem1_xafind = ec.entity.find("NacsTxItemAndCoreView")
122 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_SUCCESS", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "not-equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
123 :             txItem1 = txItem1_xafind.list()
124 :     txItem2_xafind = ec.entity.find("NacsTxItemAndCoreView")
125 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeCondition([(org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("txStatuId", "equals", txStatuId, "TX_STATU_FAIL", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("or")), (org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("coreAcctFalg", "equals", coreAcctFalg, "1", null, false, false, false, "false")], org.moqui.impl.entity.EntityConditionFactoryImpl.getJoinOperator("and")))
126 :             txItem2 = txItem2_xafind.list()
127 :     ec.entity.find("nacs.chk.CheckChannelError")
128 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).deleteAll()
129 :         txItemEntry_index = 0
130 :         _txItemEntryIterator = txItem1.iterator()
131 :         while (_txItemEntryIterator.hasNext()) {
132 :             txItemEntry = _txItemEntryIterator.next()
133 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
134 :     CheckChannelError1 = ec.entity.makeValue("nacs.chk.CheckChannelError")
135 : CheckChannelError1.setDynamicSequencedIdPrimary()
136 :     CheckChannelError1.setFields(context, false, null, null)
137 :     CheckChannelError1.create()
138 :             txItemEntry_index++
139 :         }
140 :         if (txItem1 instanceof org.moqui.entity.EntityListIterator) txItem1.close()
141 :     
142 :         txItemEntry_index = 0
143 :         _txItemEntryIterator = txItem2.iterator()
144 :         while (_txItemEntryIterator.hasNext()) {
145 :             txItemEntry = _txItemEntryIterator.next()
146 :             txItemEntry_has_next = _txItemEntryIterator.hasNext()
147 :     CheckChannelError2 = ec.entity.makeValue("nacs.chk.CheckChannelError")
148 : CheckChannelError2.setDynamicSequencedIdPrimary()
149 :     CheckChannelError2.setFields(context, false, null, null)
150 :     CheckChannelError2.create()
151 :             txItemEntry_index++
152 :         }
153 :         if (txItem2 instanceof org.moqui.entity.EntityListIterator) txItem2.close()
154 :     
155 :     ec.logger.log("info", """错账入库完成,更新对账状态""", null)
156 :     checkChannel_xafind = ec.entity.find("nacs.chk.CheckChannel")
157 :             .condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkDate, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", channelCode, null, null, false, false, false, "false"))
158 :             checkChannel = checkChannel_xafind.list()
159 :     if (checkChannel) {
160 :     mapSize = 1
161 :     if ( mapSize > 0 ){ Map < String, Object > temp_internal_Map =new HashMap < String, Object > ( (int) Math.ceil ( mapSize / 0.75 ) );
162 :     temp_internal_Map.put('coreType',("""CORE_CHECKED"""));
163 :     org.moqui.entity.EntityFind ef = ec.entity.find("nacs.chk.CheckChannel").condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("channelCode", "equals", checkChannel[0].channelCode, null, null, false, false, false, "false")).condition((org.moqui.entity.EntityCondition) ec.entity.conditionFactory.makeActionConditionDirect("checkDate", "equals", checkChannel[0].checkDate, null, null, false, false, false, "false"))
164 :     ef.updateAll(temp_internal_Map);
165 :     }
166 :     }
167 : 
168 : // make sure the last statement is not considered the return value
169 : return;
170 : 

 [XmlAction.class]
[15:44:06.238][WARN ](MoquiWorker-4) Transaction rollback. The rollback was originally caused by: Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [TransactionFacadeImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:44:06.240][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:431) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:306) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:44:06.251][WARN ](MoquiWorker-4) Error running service nacs.check.RegisterServices.register#ChkCoreFile (Throwable) [ServiceCallSyncImpl.class]
java.io.FileNotFoundException: \home\nacs\pufahexin.txt (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method) ~[?:1.8.0_31]
	at java.io.FileInputStream.<init>(FileInputStream.java:138) ~[?:1.8.0_31]
	at groovy.util.CharsetToolkit.<init>(CharsetToolkit.java:71) ~[groovy-2.4.12.jar:2.4.12]
	at nacs_check_RegisterServices_register_ChkCoreFile.run(nacs_check_RegisterServices_register_ChkCoreFile:9) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_check_CheckMainServices_check_ChkBeFile.run(nacs_check_CheckMainServices_check_ChkBeFile:32) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:44:06.255][ERROR](MoquiWorker-4) \home\nacs\pufahexin.txt (系统找不到指定的路径。) [MessageFacadeImpl.class]
[15:44:06.258][WARN ](MoquiWorker-4) Transaction rollback for [Error running service nacs.check.CheckMainServices.check#ChkBeFile (message): \home\nacs\pufahexin.txt (系统找不到指定的路径。)
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:293) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallJobImpl$ServiceJobCallable.call(ServiceCallJobImpl.groovy:217) [moqui-framework-2.1.0.jar:2.1.0]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:44:06.261][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:44:06.261][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:44:06.261][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:44:06.262][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastRunTime:2018-03-11 19:40:35.543, lastUpdatedStamp:2018-04-10 00:44:06.261, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:44:06.262][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:44:06.262][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:44:06.262][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:44:06.262][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[15:44:06.263][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[15:44:06.263][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:44:06.264][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{}, messages:null, hasError:Y, errors:\home\nacs\pufahexin.txt (系统找不到指定的路径。)
, endTime:2018-04-10 00:44:06.26, lastUpdatedStamp:2018-04-10 00:44:06.263, jobRunId:100937]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:44:06.264][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[15:44:06.264][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[15:44:06.264][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[15:44:06.264][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[15:44:44.850][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:44:44.850][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:44:44.851][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[15:44:44.851][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:44:44.864][INFO ](pool-2-thread-4) 更 [EntityValueBase.class]
[15:44:44.864][INFO ](pool-2-thread-4) 更1 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更2 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更4 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更5 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更5.5 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更9 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更10 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 更11 [EntityValueBase.class]
[15:44:44.865][INFO ](pool-2-thread-4) 打SQL！ [EntityValueImpl.class]
[15:44:44.865][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[15:44:44.866][DEBUG](pool-2-thread-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100938, lastRunTime:2018-04-10 00:44:44.849, lastUpdatedStamp:2018-04-10 00:44:44.849, jobName:HandleChkBeFile]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:44:44.866][INFO ](pool-2-thread-4) 更12 [EntityValueBase.class]
[15:44:44.866][INFO ](pool-2-thread-4) 更13 [EntityValueBase.class]
[15:44:44.866][INFO ](pool-2-thread-4) 更7 [EntityValueBase.class]
[15:44:44.866][INFO ](pool-2-thread-4) 更8 [EntityValueBase.class]
[15:44:44.866][INFO ](pool-2-thread-4) Running job HandleChkBeFile run 100938 (last run 2018-03-11 19:40:35.543, schedule 2018-04-10T00:42-07:00[US/Pacific]) [ScheduledJobRunner.class]
[15:44:44.924][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:44:44.924][INFO ](MoquiWorker-1) 更 [EntityValueBase.class]
[15:44:44.924][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更1 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更2 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更4 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更5 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更5.5 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更9 [EntityValueBase.class]
[15:44:44.925][INFO ](MoquiWorker-1) 更10 [EntityValueBase.class]
[15:44:44.926][INFO ](MoquiWorker-1) 更11 [EntityValueBase.class]
[15:44:44.926][INFO ](MoquiWorker-1) 打SQL！ [EntityValueImpl.class]
[15:44:44.931][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[15:44:44.933][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:44:44.934][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:44:44.940][INFO ](pool-2-thread-4) Ran 1 Service Jobs starting 2018-04-10T00:44:44.849-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[15:44:44.941][DEBUG](MoquiWorker-1) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-1, startTime:2018-04-10 00:44:44.923, lastUpdatedStamp:2018-04-10 00:44:44.924, jobRunId:100938]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:44:44.941][INFO ](MoquiWorker-1) 更12 [EntityValueBase.class]
[15:44:44.941][INFO ](MoquiWorker-1) 更13 [EntityValueBase.class]
[15:44:44.942][INFO ](MoquiWorker-1) 更7 [EntityValueBase.class]
[15:44:44.942][INFO ](MoquiWorker-1) 更8 [EntityValueBase.class]
[15:44:45.055][INFO ](MoquiWorker-1) ========行内对账开始======== [LoggerFacadeImpl.class]
[15:44:45.056][INFO ](MoquiWorker-1) ============通道对账全成功开始行内对账============= [LoggerFacadeImpl.class]
[15:44:45.056][INFO ](MoquiWorker-1) ============调核心对账============= [LoggerFacadeImpl.class]
[15:44:45.058][INFO ](MoquiWorker-1) 文签到开始成功11 [Test_DaliySign_Bank.class]
[15:44:45.058][INFO ](MoquiWorker-1) 222 [Test_DaliySign_Bank.class]
[15:45:32.858][INFO ](main) Loading Webapp 'webroot' (Moqui Root Webapp) on ROOT, located at: D:\IDEAWorkSpace\trunk\execwartmp\ROOT\webapp [MoquiContextListener.class]
[15:45:33.226][INFO ](main) Initializing Moqui Framework version 2.1.0
 - runtime directory: D:\IDEAWorkSpace\trunk\runtime
 - runtime config:    D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:45:33.891][INFO ](main) Added component tools              at file:D:/IDEAWorkSpace/trunk/runtime/base-component/tools [ExecutionContextFactoryImpl.class]
[15:45:33.910][INFO ](main) Added component webroot            at file:D:/IDEAWorkSpace/trunk/runtime/base-component/webroot [ExecutionContextFactoryImpl.class]
[15:45:33.916][INFO ](main) Added component nacs-access        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-access [ExecutionContextFactoryImpl.class]
[15:45:33.920][INFO ](main) Added component nacs-admin         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-admin [ExecutionContextFactoryImpl.class]
[15:45:33.925][INFO ](main) Added component nacs-be            at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be [ExecutionContextFactoryImpl.class]
[15:45:33.929][INFO ](main) Added component nacs-be-spd        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be-spd [ExecutionContextFactoryImpl.class]
[15:45:33.932][INFO ](main) Added component nacs-channel       at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel [ExecutionContextFactoryImpl.class]
[15:45:33.936][INFO ](main) Added component nacs-channel-unionpay at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel-unionpay [ExecutionContextFactoryImpl.class]
[15:45:33.940][INFO ](main) Added component nacs-check         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-check [ExecutionContextFactoryImpl.class]
[15:45:33.943][INFO ](main) Added component nacs-clear         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-clear [ExecutionContextFactoryImpl.class]
[15:45:33.946][INFO ](main) Added component nacs-main          at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-main [ExecutionContextFactoryImpl.class]
[15:45:33.949][INFO ](main) Added component nacs-mrchnt        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-mrchnt [ExecutionContextFactoryImpl.class]
[15:45:33.952][INFO ](main) Added component nacs-route         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-route [ExecutionContextFactoryImpl.class]
[15:45:33.955][INFO ](main) Added component nacs-udm           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-udm [ExecutionContextFactoryImpl.class]
[15:45:33.957][INFO ](main) Added component nacs-usl           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-usl [ExecutionContextFactoryImpl.class]
[15:45:33.958][INFO ](main) Components after depends-on sort: [tools, webroot, nacs-access, nacs-udm, nacs-admin, nacs-be, nacs-be-spd, nacs-channel, nacs-channel-unionpay, nacs-check, nacs-clear, nacs-main, nacs-mrchnt, nacs-route, nacs-usl] [ExecutionContextFactoryImpl.class]
[15:45:33.982][INFO ](main) Merging runtime configuration at D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:45:34.054][INFO ](main) Found default_time_zone US/Pacific: sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:45:34.056][INFO ](main) Default locale en_US, time zone sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:45:34.270][INFO ](main) Initializing worker ThreadPoolExecutor: queue limit 65535, pool-core 4, pool-max 16, pool-alive 60s [ExecutionContextFactoryImpl.class]
[15:45:34.401][INFO ](main) Added JARs from component webroot: [closure-compiler-v20160208.jar, gradle-js-plugin-2.14.1.jar, html2js-0.1.jar] [ExecutionContextFactoryImpl.class]
[15:45:34.467][INFO ](main) Added JARs from component nacs-be-spd: [cxf-2.7.18.jar, cxf-rt-ws-policy-2.7.18.jar, dom4j-1.6.1.jar, nacs-be-spd-1.0.0.jar, wsdl4j-1.6.3.jar] [ExecutionContextFactoryImpl.class]
[15:45:34.518][INFO ](main) Added JARs from component nacs-channel-unionpay: [bcprov-jdk15on-1.54.jar, commons-codec-1.6.jar, commons-io-2.2.jar, commons-lang-2.5.jar, javax.servlet-api-3.1.0.jar, log4j-1.2.17.jar, nacs-channel-unionpay-1.0.0.jar, nacs-unionpay-1.0.0.jar, slf4j-api-1.5.11.jar, slf4j-log4j12-1.5.11.jar, upacp_sdk-1.1.0-20151216.jar] [ExecutionContextFactoryImpl.class]
[15:45:34.519][INFO ](main) Added JARs from component nacs-check: [nacs-check-1.0.0.jar] [ExecutionContextFactoryImpl.class]
[15:45:34.531][INFO ](main) Added JARs from component nacs-usl: [commons-net-1.4.1.jar, javolution-5.4.3.jar] [ExecutionContextFactoryImpl.class]
[15:45:34.532][INFO ](main) Initialized ClassLoader in 240ms [ExecutionContextFactoryImpl.class]
[15:45:34.536][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.JackrabbitRunToolFactory [ExecutionContextFactoryImpl.class]
[15:45:34.536][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.SubEthaSmtpToolFactory [ExecutionContextFactoryImpl.class]
[15:45:34.542][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.MCacheToolFactory [ExecutionContextFactoryImpl.class]
[15:45:34.553][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.H2ServerToolFactory [ExecutionContextFactoryImpl.class]
[15:45:34.594][INFO ](main) Cache Facade initialized [ExecutionContextFactoryImpl.class]
[15:45:34.895][INFO ](main) Resource Facade initialized [ExecutionContextFactoryImpl.class]
[15:45:34.941][INFO ](main) Bitronix Transaction Manager version 3.0.0-SNAPSHOT [BitronixTransactionManager.class]
[15:45:34.950][WARN ](main) Cannot get the unique server ID for this JVM ('bitronix.tm.serverId'). Make sure it is configured and you use only US-ASCII characters. Will use IP address instead (unsafe for production usage!). [Configuration.class]
[15:45:34.952][INFO ](main) JVM unique ID: <192.168.191.1> - Using this server ID to ensure uniqueness of transaction IDs across the network. [Configuration.class]
[15:45:35.024][WARN ](main) active log file is unclean, did you call BitronixTransactionManager.shutdown() at the end of the last run? [DiskJournal.class]
[15:45:35.241][INFO ](main) recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 0 resource(s) [] (restricted to serverId '192.168.191.1') [Recoverer.class]
[15:45:35.260][INFO ](main) Transaction Facade initialized [ExecutionContextFactoryImpl.class]
[15:45:35.366][INFO ](main) Database time zone is sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [EntityFacadeImpl.class]
[15:45:35.510][INFO ](main) Initializing DataSource transactional_DS (h2) with properties: [user:sa, url:jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui;lock_timeout=30000] [TransactionInternalBitronix.class]
[15:45:37.055][INFO ](main) incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [transactional_DS] (restricted to serverId '192.168.191.1') [IncrementalRecoverer.class]
[15:45:37.056][INFO ](main) Init DataSource transactional_DS (h2) isolation READ_COMMITTED (2), max pool 50 [TransactionInternalBitronix.class]
[15:45:37.078][INFO ](main) Loaded 0 Entity ECA rules from 0 .eecas.xml files [EntityFacadeImpl.class]
[15:45:37.095][INFO ](main) Entity Cache initialized, distributed cache invalidate enabled: false [EntityCache.class]
[15:45:37.130][INFO ](main) Entity Facade initialized [ExecutionContextFactoryImpl.class]
[15:45:37.179][INFO ](main) Loaded 0 Service ECA rules from 0 .secas.xml files [ServiceFacadeImpl.class]
[15:45:37.305][INFO ](main) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[15:45:37.308][INFO ](main) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[15:45:37.312][INFO ](main) Loaded REST API files, 2 roots, in 111ms [RestApi.class]
[15:45:37.356][INFO ](main) No distributed-factory specified, distributed async service calls will be run local only [ServiceFacadeImpl.class]
[15:45:37.395][INFO ](main) Service Facade initialized [ExecutionContextFactoryImpl.class]
[15:45:37.419][INFO ](main) Screen Facade initialized [ExecutionContextFactoryImpl.class]
[15:45:37.420][INFO ](main) Loading entity definitions [ExecutionContextFactoryImpl.class]
[15:45:37.688][INFO ](main) Found entities in 20 files in 267ms [EntityFacadeImpl.class]
[15:45:37.958][INFO ](main) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:45:38.548][INFO ](main) Loaded 199 entity definitions in 1127ms [ExecutionContextFactoryImpl.class]
[15:45:38.548][INFO ](main) Initializing ToolFactory: MCache [ExecutionContextFactoryImpl.class]
[15:45:38.549][INFO ](main) Initializing ToolFactory: H2Server [ExecutionContextFactoryImpl.class]
[15:45:38.623][INFO ](main) Started H2 remote server on port 9092 status: TCP server running at tcp://192.168.191.1:9092 (only local connections) [H2ServerToolFactory.class]
[15:45:38.623][INFO ](main) H2 args: [-tcpPort, 9092, -ifExists, -baseDir, D:\IDEAWorkSpace\trunk\runtime/db/h2] [H2ServerToolFactory.class]
[15:45:38.634][INFO ](main) Found shutdown hook: org.eclipse.jetty.util.thread.ShutdownThread Thread[Thread-0,5,main] [H2ServerToolFactory.class]
[15:45:38.634][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-13,5,main] [H2ServerToolFactory.class]
[15:45:38.634][INFO ](main) Found shutdown hook: java.lang.Thread Thread[pool-1-thread-1,5,main] [H2ServerToolFactory.class]
[15:45:38.635][INFO ](main) Found shutdown hook: java.util.logging.LogManager$Cleaner Thread[Thread-9,5,main] [H2ServerToolFactory.class]
[15:45:38.635][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-12,5,main] [H2ServerToolFactory.class]
[15:45:38.962][INFO ](main) Execution Context Factory initialized in 5.913 seconds [ExecutionContextFactoryImpl.class]
[15:45:38.990][DEBUG](main) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM ENUMERATION [EntityFindBuilder.class]
[15:45:38.992][DEBUG](main) Executed query with SQL [SELECT COUNT(*)  FROM ENUMERATION] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:45:38.995][INFO ](main) Found 289 Enumeration records, NOT loading empty-db-load data types (all) [ExecutionContextFactoryImpl.class]
[15:45:39.089][INFO ](main) Initializing webapp webroot http://null:null https://null:null https enabled? false [ExecutionContextFactoryImpl.class]
[15:45:39.104][INFO ](main) Added webapp listener org.moqui.impl.webapp.MoquiSessionListener [MoquiContextListener.class]
[15:45:39.177][INFO ](main) Added servlet MoquiServlet on: [/*] [MoquiContextListener.class]
[15:45:39.190][INFO ](main) Added servlet MoquiFopServlet on: [/fop/*] [MoquiContextListener.class]
[15:45:39.201][INFO ](main) Added servlet H2Console on: [/h2/*] [MoquiContextListener.class]
[15:45:39.202][INFO ](main) Found WebSocket ServerContainer org.eclipse.jetty.websocket.jsr356.server.ServerContainer [MoquiContextListener.class]
[15:45:39.229][INFO ](main) Added WebSocket endpoint /notws for class org.moqui.impl.webapp.NotificationEndpoint [MoquiContextListener.class]
[15:45:39.231][INFO ](main) Moqui Framework initialized in 6.402 seconds [MoquiContextListener.class]
[15:45:39.281][INFO ](main) MoquiServlet initialized for webapp webroot [MoquiServlet.class]
[15:45:54.107][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ? [EntityFindBuilder.class]
[15:45:54.109][DEBUG](qtp379110473-12) Executed query with SQL [SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ?] and parameters [[username:admin]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.375][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.380][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.392][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.406][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.416][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.417][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.448][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.449][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.450][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.451][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.457][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.458][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.459][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.459][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.460][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.461][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.467][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.470][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.470][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.471][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.473][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.474][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.478][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.479][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.480][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.482][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.483][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.484][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.489][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.490][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.493][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.494][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.495][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:54.496][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.503][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:54.504][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.577][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ? [EntityFindBuilder.class]
[15:45:54.579][DEBUG](qtp379110473-12) Executed query with SQL [SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ?] and parameters [[userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.616][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:45:54.624][DEBUG](qtp379110473-12) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:54.635][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:45:54.636][DEBUG](qtp379110473-12) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ALL_USERS]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.461][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:55.462][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/apps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.498][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.500][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.501][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.503][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.504][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.505][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.522][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.524][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Security, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.530][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:55.530][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.541][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.543][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.544][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.545][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.546][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.547][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.561][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.563][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.564][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.565][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.567][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.568][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.571][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:55.572][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Channel.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.588][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:55.590][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.649][INFO ](qtp379110473-12) Created 256 automatic reverse relationships [EntityFacadeImpl.class]
[15:45:55.766][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:55.767][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.769][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:55.770][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Charts.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:55.985][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:55.986][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:NacsAdmin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.018][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.020][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.021][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.021][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.022][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.023][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.037][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.037][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.038][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.039][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.040][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.040][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.078][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.081][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Dashboard, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.082][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.083][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.086][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.087][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.090][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.092][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:System, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.106][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.108][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Artifact Stats, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.124][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.124][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.127][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.127][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.137][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.137][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.138][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.140][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Applications, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.141][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.142][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.142][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.143][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.144][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.144][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.160][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.161][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.168][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.169][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.174][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.175][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.182][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.183][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.186][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.186][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount/UserAccountList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.209][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.210][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.213][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.216][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.216][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.217][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.223][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.224][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.225][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.225][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.226][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.226][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.234][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.235][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.235][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.236][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.236][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.237][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.238][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.238][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Mrchnt.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.244][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.244][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-mrchnt/screen/NacsMrchnt/MrchntList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.272][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.273][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.273][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.274][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.274][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.275][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.276][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.277][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.278][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.279][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.279][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.282][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.302][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.303][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.304][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.304][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.305][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.306][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.321][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.321][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.322][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.323][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.325][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.325][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.326][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.328][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Route.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.334][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.335][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-route/screen/NacsRoute/RouteList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.351][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.352][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.353][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.353][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.354][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.354][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.360][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.361][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.361][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.362][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.363][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.363][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.367][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.367][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.368][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.370][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.371][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.371][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.375][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.376][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.376][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.377][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.378][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.378][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.382][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.382][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.386][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.387][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.388][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.388][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.389][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.390][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Check.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.393][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.394][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-check/screen/NacsCheck/ChannelCheckList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.396][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.397][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.397][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.398][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.399][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.399][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.406][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.407][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.408][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.409][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.409][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.410][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.412][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.413][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.414][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.414][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.415][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.415][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.416][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.416][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Clear.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.420][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.421][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-clear/screen/NacsClear/ChannelClearList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.424][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.425][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.426][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.426][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.427][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.427][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.448][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.449][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.451][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.452][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/TxItem.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.464][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.465][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.465][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.466][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.466][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.467][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.490][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.490][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.493][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:45:56.494][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System/ServiceJob.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.505][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.506][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.507][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.507][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.508][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.509][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:56.510][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:56.511][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Nacs Admin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.267][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:45:57.270][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:OpnFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.272][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST [EntityFindBuilder.class]
[15:45:57.273][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST] and parameters [[enumTypeId:VerifiedFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.285][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL [EntityFindBuilder.class]
[15:45:57.285][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.287][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:45:57.287][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:TrxCtgy]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.289][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:45:57.291][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:FeeChargeMode]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.706][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.706][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.707][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.707][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.708][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.709][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.757][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.757][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.758][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.759][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.760][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.760][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.788][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.788][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.790][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.790][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.791][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.793][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.816][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.816][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.817][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.818][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.818][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.819][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.823][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.823][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.826][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.827][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.829][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.830][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.835][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.836][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.837][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.838][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.839][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.841][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.880][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.882][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.885][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.886][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.887][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.888][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.888][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.889][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.889][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.890][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.890][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.891][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.951][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.952][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.952][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.953][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.954][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.954][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.987][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.988][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.989][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.992][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.993][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.993][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.995][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.995][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:57.996][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:57.999][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.002][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.003][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.034][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.035][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.036][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.036][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.037][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.037][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Trx Ctgy, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.041][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.041][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.042][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.042][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.043][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.043][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.061][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.062][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.063][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.064][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.064][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.065][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.105][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.109][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.110][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.112][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.112][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.118][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.119][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.120][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.120][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.121][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.122][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.123][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.123][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.124][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.124][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.125][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.125][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.126][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.126][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.127][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.128][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.128][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.130][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.130][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.131][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.131][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.132][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.132][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.133][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.135][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.141][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.142][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.142][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.143][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.143][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.144][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.148][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.149][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.150][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.152][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.153][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.154][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.156][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.157][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.158][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:45:58.159][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.252][INFO ](qtp379110473-18) apps/nacs-admin/Channel/ChannelList [] in 1541ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:45:58.295][INFO ](qtp379110473-13) apps/nacs-admin/Channel/ChannelList [] in 38ms (text/html;charset=utf-8) session node02e7b23m1xb09u6mpxsnrja9d0 [ScreenRenderImpl.class]
[15:45:58.697][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:45:58.701][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHit]] in [0] seconds [EntityQueryBuilder.class]
[15:45:58.703][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:45:58.703][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:45:58.704][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:45:58.708][INFO ](RequireNewTx) Built entity.data.feed.info cache for in 4ms, entries for 0 entities [EntityDataFeed.class]
[15:45:58.709][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:45:58.709][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:45:58.709][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:45:58.709][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:45:58.709][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:45:58.709][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:45:58.709][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:45:58.709][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:45:58.712][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:45:58.717][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101211, lastUpdatedStamp:2018-04-10 00:45:58.692, seqName:moqui.server.ArtifactHit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:45:58.718][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:45:58.718][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:45:58.718][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:45:58.718][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:45:58.745][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:45:58.754][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:45:58.755][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:45:58.756][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:45:58.756][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:45:58.757][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:45:58.758][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:45:58.758][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:47:37.480][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL [EntityFindBuilder.class]
[15:47:37.482][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:47:37.489][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:47:37.491][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:47:37.494][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:47:37.494][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:47:37.525][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:47:37.528][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.868][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.869][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.870][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.870][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.876][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.877][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.882][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.882][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.883][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.884][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.884][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.885][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.889][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.889][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.890][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.891][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.894][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.894][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.895][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.896][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.899][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.900][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.901][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.902][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.904][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.905][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.906][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.906][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.910][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.911][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.912][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:56.913][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.916][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:47:56.917][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/vapps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.922][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ? [EntityFindBuilder.class]
[15:47:56.922][DEBUG](qtp379110473-13) Executed query with SQL [SELECT VISITOR_ID, CREATED_DATE, LAST_UPDATED_STAMP FROM VISITOR WHERE VISITOR_ID = ?] and parameters [[visitorId:100102]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.936][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:47:56.938][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.Visit]] in [0] seconds [EntityQueryBuilder.class]
[15:47:56.938][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:47:56.938][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:47:56.938][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:47:56.938][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:47:56.938][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:47:56.938][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:47:56.939][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:47:56.939][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:47:56.939][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:47:56.939][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:47:56.939][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:47:56.939][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:47:56.940][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101009, lastUpdatedStamp:2018-04-10 00:47:56.935, seqName:moqui.server.Visit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:47:56.940][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:47:56.940][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:47:56.940][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:47:56.940][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:47:56.955][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:47:56.958][DEBUG](qtp379110473-13) Executed update with SQL [INSERT INTO VISIT (VISIT_ID, VISITOR_ID, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, FROM_DATE, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:47:56.960][INFO ](qtp379110473-13) Created new Visit with ID [100909] in session [node0aylxrf3n1y3q1eez69h4fgk2w0] [UserFacadeImpl.class]
[15:47:57.099][INFO ](qtp379110473-13) Redirecting to /Login instead of rendering [vapps, nacs-admin, Channel] [ScreenRenderImpl.class]
[15:47:57.116][INFO ](qtp379110473-13) vapps/nacs-admin/Channel [] in 156ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:47:57.127][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:47:57.128][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/Login.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.040][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.041][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.041][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.042][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.042][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.043][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.043][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.044][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.044][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.045][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.045][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.045][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:登录, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.054][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:47:58.055][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_STYLESHEET]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.084][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:47:58.085][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SCRIPT]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.087][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:47:58.088][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SHORTCUT_ICON]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.090][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:47:58.091][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_BODY_CLASS]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.189][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.189][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.190][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.192][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.192][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.193][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:inner, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.194][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.195][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.195][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.203][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.204][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.204][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:container-fluid, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.284][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT [EntityFindBuilder.class]
[15:47:58.285][DEBUG](qtp379110473-13) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.294][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.294][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.295][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.295][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.296][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.297][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.297][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.298][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.298][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.298][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username and password to sign in, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.303][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.304][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.304][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.305][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.305][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.306][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Username, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.306][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.309][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.310][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.310][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.310][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.311][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.312][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.312][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.312][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.313][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.313][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.314][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sign in, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.315][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.317][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.318][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.318][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.318][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.319][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter your username to reset and email your password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.321][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.322][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.322][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.323][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.323][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.324][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset and Email Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.325][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.325][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.326][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.326][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.327][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.328][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Enter details to change your password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.329][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.330][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.330][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.330][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.331][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.335][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Old Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.336][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.337][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.337][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.338][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.338][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.339][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.339][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.340][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.340][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.341][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.342][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.342][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:New Password Verify, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.343][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.344][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.344][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.345][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.346][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:47:58.347][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset Password, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.446][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[15:47:58.463][DEBUG](qtp379110473-13) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.464][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?) [EntityFindBuilder.class]
[15:47:58.465][DEBUG](qtp379110473-13) Executed query with SQL [SELECT COUNT(*)  FROM USER_ACCOUNT WHERE (USER_ID = ? AND CURRENT_PASSWORD = ?)] and parameters [[userId:EX_JOHN_DOE, currentPassword:16ac58bbfa332c1c55bd98b53e60720bfa90d394]] in [0] seconds [EntityQueryBuilder.class]
[15:47:58.470][INFO ](qtp379110473-13) Login [] in 1346ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:48:00.062][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ? [EntityFindBuilder.class]
[15:48:00.063][DEBUG](qtp379110473-16) Executed query with SQL [SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ?] and parameters [[visitId:100909]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.064][INFO ](qtp379110473-16) 更 [EntityValueBase.class]
[15:48:00.064][INFO ](qtp379110473-16) 更1 [EntityValueBase.class]
[15:48:00.064][INFO ](qtp379110473-16) 更2 [EntityValueBase.class]
[15:48:00.066][INFO ](qtp379110473-16) 更4 [EntityValueBase.class]
[15:48:00.066][INFO ](qtp379110473-16) 更5 [EntityValueBase.class]
[15:48:00.066][INFO ](qtp379110473-16) 更5.5 [EntityValueBase.class]
[15:48:00.066][INFO ](qtp379110473-16) 更9 [EntityValueBase.class]
[15:48:00.066][INFO ](qtp379110473-16) 更10 [EntityValueBase.class]
[15:48:00.066][INFO ](qtp379110473-16) 更11 [EntityValueBase.class]
[15:48:00.066][INFO ](qtp379110473-16) 打SQL！ [EntityValueImpl.class]
[15:48:00.066][DEBUG](qtp379110473-16) making crud PreparedStatement for SQL: UPDATE VISIT SET USER_ID=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[15:48:00.071][DEBUG](qtp379110473-16) Executed update with SQL [UPDATE VISIT SET USER_ID=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[userId:EP_ADMIN, lastUpdatedStamp:2018-04-10 00:47:59.982, visitId:100909]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:00.071][INFO ](qtp379110473-16) 更12 [EntityValueBase.class]
[15:48:00.071][INFO ](qtp379110473-16) 更13 [EntityValueBase.class]
[15:48:00.072][INFO ](qtp379110473-16) 更7 [EntityValueBase.class]
[15:48:00.072][INFO ](qtp379110473-16) 更8 [EntityValueBase.class]
[15:48:00.139][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT USER_ID, FROM_DATE, THRU_DATE, VISIT_ID, PASSWORD_USED, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP FROM USER_LOGIN_HISTORY WHERE (FROM_DATE = ? AND USER_ID = ?) [EntityFindBuilder.class]
[15:48:00.140][DEBUG](qtp379110473-16) Executed query with SQL [SELECT USER_ID, FROM_DATE, THRU_DATE, VISIT_ID, PASSWORD_USED, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP FROM USER_LOGIN_HISTORY WHERE (FROM_DATE = ? AND USER_ID = ?)] and parameters [[fromDate:2018-04-10 00:48:00.136, userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.208][INFO ](qtp379110473-16) Transition Login/login in 226ms, redirecting to screen path URL: http://localhost:8080/vapps/nacs-admin/Channel [ScreenRenderImpl.class]
[15:48:00.211][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO USER_LOGIN_HISTORY (USER_ID, FROM_DATE, VISIT_ID, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:00.213][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO USER_LOGIN_HISTORY (USER_ID, FROM_DATE, VISIT_ID, SUCCESSFUL_LOGIN, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:00.285][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.285][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.287][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.287][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.315][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.315][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.316][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.317][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.317][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.318][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.327][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ? [EntityFindBuilder.class]
[15:48:00.328][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT VISIT_ID, VISITOR_ID, USER_ID, USER_CREATED, SESSION_ID, SERVER_IP_ADDRESS, SERVER_HOST_NAME, WEBAPP_NAME, INITIAL_LOCALE, INITIAL_REQUEST, INITIAL_REFERRER, INITIAL_USER_AGENT, CLIENT_IP_ADDRESS, CLIENT_HOST_NAME, CLIENT_USER, CLIENT_IP_ISP_NAME, CLIENT_IP_POSTAL_CODE, CLIENT_IP_CITY, CLIENT_IP_METRO_CODE, CLIENT_IP_REGION_CODE, CLIENT_IP_REGION_NAME, CLIENT_IP_STATE_PROV_GEO_ID, CLIENT_IP_COUNTRY_GEO_ID, CLIENT_IP_LATITUDE, CLIENT_IP_LONGITUDE, CLIENT_IP_TIME_ZONE, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM VISIT WHERE VISIT_ID = ?] and parameters [[visitId:100909]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.346][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.347][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:en_US]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.347][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.348][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:en]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.348][DEBUG](MoquiWorker-1) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.349][DEBUG](MoquiWorker-1) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:IP address not a IPv4 address, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.350][INFO ](MoquiWorker-1) IP address not a IPv4 address [MessageFacadeImpl.class]
[15:48:00.408][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:48:00.409][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_NAVBAR_COMP]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.410][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:48:00.410][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_LOGO]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.415][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:48:00.416][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_TITLE]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.420][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.420][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.421][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.422][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.422][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.423][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.423][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.423][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.424][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.424][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.425][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:48:00.425][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:48:00.431][INFO ](qtp379110473-15) vapps/nacs-admin/Channel [] in 154ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:48:01.612][INFO ](qtp379110473-16) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:56563 [NotificationEndpoint.class]
[15:48:01.808][INFO ](qtp379110473-15) apps/nacs-admin [] in 168ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:48:01.900][INFO ](qtp379110473-13) apps/nacs-admin/Channel [] in 26ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:48:02.046][INFO ](qtp379110473-14) apps/nacs-admin/Channel/ChannelList [] in 36ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:48:03.664][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:03.666][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:03.667][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:03.669][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:03.669][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:03.670][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:03.670][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:03.671][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:03.671][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:03.672][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:04.127][INFO ](qtp379110473-15) apps/nacs-admin/Channel/ChannelList [orderByField:+^trxCtgy] in 22ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:48:05.014][INFO ](qtp379110473-14) apps/nacs-admin/Channel/ChannelList [orderByField:-^trxCtgy] in 22ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:48:08.661][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:08.662][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:08.663][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:08.664][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:08.665][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:08.665][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:08.666][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:48:08.666][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:48:37.404][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:48:37.406][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:48:37.408][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:48:37.409][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:48:37.412][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:48:37.413][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:49:02.476][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:49:02.478][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:nacs.channel.Channel]] in [0] seconds [EntityQueryBuilder.class]
[15:49:02.480][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:49:02.480][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:49:02.481][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:49:02.492][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100152, lastUpdatedStamp:2018-04-10 00:49:02.476, seqName:nacs.channel.Channel]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:49:02.492][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:49:02.492][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:49:02.492][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:49:02.492][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:49:02.499][INFO ](qtp379110473-15) Creating table for nacs.channel.Channel pks: [seqId] [EntityDbMeta.class]
[15:49:02.547][INFO ](qtp379110473-15) Created table CHANNEL for entity nacs.channel.Channel in group transactional [EntityDbMeta.class]
[15:49:02.705][INFO ](qtp379110473-15) Created 28 automatic reverse relationships [EntityFacadeImpl.class]
[15:49:02.722][DEBUG](qtp379110473-15) making crud PreparedStatement for SQL: INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:49:02.723][WARN ](qtp379110473-15) Error in JDBC update for SQL INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:49:02.741][WARN ](qtp379110473-15) Error creating [nacs.channel.Channel: {lastUpdatedStamp=2018-04-10 00:49:02.228, channelNm=测试1, channelNo=10001, percentage=null, amt=12, channelStatus=ENABLED, trxCtgy=null, feeType=FEE_CHARGE_MODE1, seqId=100102}] tx a Bitronix Transaction with GTRID [3139322E3136382E3139312E3100000162AE878E940000001F], status=ACTIVE, 1 resource(s) enlisted (started Tue Apr 10 00:49:02 PDT 2018) con Group: transactional, Con: a ConnectionJavaProxy of a JdbcPooledConnection from datasource transactional_DS in state ACCESSIBLE with usage count 1 wrapping xads9: conn19: url=jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui user=SA on conn20: url=jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui user=SA: org.h2.jdbc.JdbcSQLException: NULL not allowed for column "TRX_CTGY"; SQL statement:
INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-196] [EntityValueImpl.class]
[15:49:02.831][ERROR](qtp379110473-15) Error running service create#nacs.channel.Channel [ServiceCallSyncImpl.class]
org.moqui.impl.entity.EntitySqlException: Error creating Channel {seqId=100102}: empty value not allowed [23502]
	at org.moqui.impl.entity.EntityValueBase.create(EntityValueBase.java:1331) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.EntityAutoServiceRunner.createRecursive(EntityAutoServiceRunner.groovy:210) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.EntityAutoServiceRunner.createEntity(EntityAutoServiceRunner.groovy:189) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.runImplicitEntityAuto(ServiceCallSyncImpl.java:488) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:215) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_channel_admin_NacsChannelService_create_Channel.run(nacs_channel_admin_NacsChannelService_create_Channel:45) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call.run(component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call:7) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenDefinition$TransitionItem.run(ScreenDefinition.groovy:778) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:608) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.internalRender(ScreenRenderImpl.groovy:336) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.render(ScreenRenderImpl.groovy:147) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.webapp.MoquiServlet.service(MoquiServlet.groovy:95) ~[moqui-framework-2.1.0.jar:2.1.0]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[moqui_temp1754862029781253772execlib_javax.servlet-api-3.1.0.jar.:3.1.0]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
Caused by: org.h2.jdbc.JdbcSQLException: NULL not allowed for column "TRX_CTGY"; SQL statement:
INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-196]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:345) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:797) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.dml.Insert.insertRows(Insert.java:151) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.dml.Insert.update(Insert.java:114) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.CommandContainer.update(CommandContainer.java:101) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.Command.executeUpdate(Command.java:260) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:164) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:150) ~[h2-1.4.196.jar:1.4.196]
	at bitronix.tm.resource.jdbc.proxy.PreparedStatementJavassistProxy.executeUpdate(PreparedStatementJavassistProxy.java) ~[?:?]
	at org.moqui.impl.entity.EntityQueryBuilder.executeUpdate(EntityQueryBuilder.java:112) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityValueImpl.createExtended(EntityValueImpl.java:101) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityValueBase.basicCreate(EntityValueBase.java:1355) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityValueBase.create(EntityValueBase.java:1321) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.EntityAutoServiceRunner.createRecursive(EntityAutoServiceRunner.groovy:210) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.EntityAutoServiceRunner.createEntity(EntityAutoServiceRunner.groovy:189) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.runImplicitEntityAuto(ServiceCallSyncImpl.java:488) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:215) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.service.ServiceCallSync$call$2.call(Unknown Source) [moqui-framework-2.1.0.jar:2.1.0]
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48) [groovy-2.4.12.jar:2.4.12]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113) [groovy-2.4.12.jar:2.4.12]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117) [groovy-2.4.12.jar:2.4.12]
	at nacs_channel_admin_NacsChannelService_create_Channel.run(nacs_channel_admin_NacsChannelService_create_Channel:45) [script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.service.ServiceCallSync$call$2.call(Unknown Source) [moqui-framework-2.1.0.jar:2.1.0]
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48) [groovy-2.4.12.jar:2.4.12]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113) [groovy-2.4.12.jar:2.4.12]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117) [groovy-2.4.12.jar:2.4.12]
	at component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call.run(component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call:7) [script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenDefinition$TransitionItem.run(ScreenDefinition.groovy:778) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:608) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.internalRender(ScreenRenderImpl.groovy:336) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.render(ScreenRenderImpl.groovy:147) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.webapp.MoquiServlet.service(MoquiServlet.groovy:95) [moqui-framework-2.1.0.jar:2.1.0]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) [moqui_temp1754862029781253772execlib_javax.servlet-api-3.1.0.jar.:3.1.0]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:833) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:206) [moqui_temp4905684921071253364execlib_websocket-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) [moqui_temp4561604444719735609execlib_jetty-security-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(GzipHandler.java:455) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.Server.handle(Server.java:561) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) [moqui_temp3854274149973175493execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104) [moqui_temp3854274149973175493execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) [moqui_temp3854274149973175493execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	... 1 more
[15:49:02.851][WARN ](qtp379110473-15) Transaction set rollback only. The rollback was originally caused by: Error running service create#nacs.channel.Channel (Throwable) [TransactionFacadeImpl.class]
org.moqui.impl.entity.EntitySqlException: Error creating Channel {seqId=100102}: empty value not allowed [23502]
	at org.moqui.impl.entity.EntityValueBase.create(EntityValueBase.java:1331) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.EntityAutoServiceRunner.createRecursive(EntityAutoServiceRunner.groovy:210) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.EntityAutoServiceRunner.createEntity(EntityAutoServiceRunner.groovy:189) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.runImplicitEntityAuto(ServiceCallSyncImpl.java:488) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:215) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_channel_admin_NacsChannelService_create_Channel.run(nacs_channel_admin_NacsChannelService_create_Channel:45) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call.run(component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call:7) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenDefinition$TransitionItem.run(ScreenDefinition.groovy:778) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:608) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.internalRender(ScreenRenderImpl.groovy:336) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.render(ScreenRenderImpl.groovy:147) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.webapp.MoquiServlet.service(MoquiServlet.groovy:95) ~[moqui-framework-2.1.0.jar:2.1.0]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[moqui_temp1754862029781253772execlib_javax.servlet-api-3.1.0.jar.:3.1.0]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
Caused by: org.h2.jdbc.JdbcSQLException: NULL not allowed for column "TRX_CTGY"; SQL statement:
INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-196]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:345) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:797) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.dml.Insert.insertRows(Insert.java:151) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.dml.Insert.update(Insert.java:114) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.CommandContainer.update(CommandContainer.java:101) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.command.Command.executeUpdate(Command.java:260) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:164) ~[h2-1.4.196.jar:1.4.196]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:150) ~[h2-1.4.196.jar:1.4.196]
	at bitronix.tm.resource.jdbc.proxy.PreparedStatementJavassistProxy.executeUpdate(PreparedStatementJavassistProxy.java) ~[?:?]
	at org.moqui.impl.entity.EntityQueryBuilder.executeUpdate(EntityQueryBuilder.java:112) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityValueImpl.createExtended(EntityValueImpl.java:101) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityValueBase.basicCreate(EntityValueBase.java:1355) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.entity.EntityValueBase.create(EntityValueBase.java:1321) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.EntityAutoServiceRunner.createRecursive(EntityAutoServiceRunner.groovy:210) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.EntityAutoServiceRunner.createEntity(EntityAutoServiceRunner.groovy:189) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.runImplicitEntityAuto(ServiceCallSyncImpl.java:488) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:215) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.service.ServiceCallSync$call$2.call(Unknown Source) [moqui-framework-2.1.0.jar:2.1.0]
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48) [groovy-2.4.12.jar:2.4.12]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113) [groovy-2.4.12.jar:2.4.12]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117) [groovy-2.4.12.jar:2.4.12]
	at nacs_channel_admin_NacsChannelService_create_Channel.run(nacs_channel_admin_NacsChannelService_create_Channel:45) [script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.service.ServiceCallSync$call$2.call(Unknown Source) [moqui-framework-2.1.0.jar:2.1.0]
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48) [groovy-2.4.12.jar:2.4.12]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113) [groovy-2.4.12.jar:2.4.12]
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117) [groovy-2.4.12.jar:2.4.12]
	at component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call.run(component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call:7) [script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenDefinition$TransitionItem.run(ScreenDefinition.groovy:778) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:608) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.internalRender(ScreenRenderImpl.groovy:336) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.render(ScreenRenderImpl.groovy:147) [moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.webapp.MoquiServlet.service(MoquiServlet.groovy:95) [moqui-framework-2.1.0.jar:2.1.0]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) [moqui_temp1754862029781253772execlib_javax.servlet-api-3.1.0.jar.:3.1.0]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:833) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:206) [moqui_temp4905684921071253364execlib_websocket-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) [moqui_temp4561604444719735609execlib_jetty-security-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) [moqui_temp5863808267883924257execlib_jetty-servlet-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(GzipHandler.java:455) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.Server.handle(Server.java:561) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) [moqui_temp4701507124478289476execlib_jetty-server-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) [moqui_temp3854274149973175493execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104) [moqui_temp3854274149973175493execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) [moqui_temp3854274149973175493execlib_jetty-io-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) [moqui_temp3702912124891961747execlib_jetty-util-9.4.7.v20170914.jar.:9.4.7.v20170914]
	... 1 more
[15:49:02.870][WARN ](qtp379110473-15) Transaction set rollback only for [Error running service create#nacs.channel.Channel (Throwable)]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Set rollback only location
	at org.moqui.impl.context.TransactionFacadeImpl.setRollbackOnly(TransactionFacadeImpl.groovy:457) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:411) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.runImplicitEntityAuto(ServiceCallSyncImpl.java:509) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:215) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at nacs_channel_admin_NacsChannelService_create_Channel.run(nacs_channel_admin_NacsChannelService_create_Channel:45) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.runner.InlineServiceRunner.runService(InlineServiceRunner.java:58) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.callSingle(ServiceCallSyncImpl.java:282) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.service.ServiceCallSyncImpl.call(ServiceCallSyncImpl.java:117) ~[moqui-framework-2.1.0.jar:2.1.0]
	at component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call.run(component___nacs_channel_screen_NacsChannel_ChannelList_xml_transition_createChannel_service_call:7) ~[script:?]
	at org.moqui.impl.actions.XmlAction.run(XmlAction.java:67) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenDefinition$TransitionItem.run(ScreenDefinition.groovy:778) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:608) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.recursiveRunTransition(ScreenRenderImpl.groovy:604) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.internalRender(ScreenRenderImpl.groovy:336) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.render(ScreenRenderImpl.groovy:147) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.webapp.MoquiServlet.service(MoquiServlet.groovy:95) ~[moqui-framework-2.1.0.jar:2.1.0]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[moqui_temp1754862029781253772execlib_javax.servlet-api-3.1.0.jar.:3.1.0]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:49:02.874][ERROR](qtp379110473-15) Error creating Channel {seqId=100102}: empty value not allowed [23502] [MessageFacadeImpl.class]
[15:49:02.874][ERROR](qtp379110473-15) NULL not allowed for column "TRX_CTGY"; SQL statement:
INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-196] [MessageFacadeImpl.class]
[15:49:02.876][WARN ](qtp379110473-15) Transaction rollback for [Error creating Channel {seqId=100102}: empty value not allowed [23502]
NULL not allowed for column "TRX_CTGY"; SQL statement:
INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, TRX_CTGY, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) [23502-196]
]. Here is the current location:  [TransactionFacadeImpl.class]
org.moqui.BaseException: Rollback location
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:434) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.context.TransactionFacadeImpl.rollback(TransactionFacadeImpl.groovy:409) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.internalRender(ScreenRenderImpl.groovy:345) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.screen.ScreenRenderImpl.render(ScreenRenderImpl.groovy:147) ~[moqui-framework-2.1.0.jar:2.1.0]
	at org.moqui.impl.webapp.MoquiServlet.service(MoquiServlet.groovy:95) ~[moqui-framework-2.1.0.jar:2.1.0]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) ~[moqui_temp1754862029781253772execlib_javax.servlet-api-3.1.0.jar.:3.1.0]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]
[15:49:02.909][INFO ](qtp379110473-15) Transition apps/nacs-admin/Channel/ChannelList/createChannel in 760ms, JSON redirect to: /apps/nacs-admin/Channel/ChannelList [ScreenRenderImpl.class]
[15:49:03.665][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, ERROR_MESSAGE, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:49:03.677][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, ERROR_MESSAGE, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:49:03.678][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, ERROR_MESSAGE, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:49:03.680][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, ERROR_MESSAGE, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:49:37.417][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:49:37.419][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:49:37.420][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:49:37.421][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:49:37.430][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:49:37.431][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:50:52.690][INFO ](main) Loading Webapp 'webroot' (Moqui Root Webapp) on ROOT, located at: D:\IDEAWorkSpace\trunk\execwartmp\ROOT\webapp [MoquiContextListener.class]
[15:50:53.266][INFO ](main) Initializing Moqui Framework version 2.1.0
 - runtime directory: D:\IDEAWorkSpace\trunk\runtime
 - runtime config:    D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:50:54.061][INFO ](main) Added component tools              at file:D:/IDEAWorkSpace/trunk/runtime/base-component/tools [ExecutionContextFactoryImpl.class]
[15:50:54.085][INFO ](main) Added component webroot            at file:D:/IDEAWorkSpace/trunk/runtime/base-component/webroot [ExecutionContextFactoryImpl.class]
[15:50:54.095][INFO ](main) Added component nacs-access        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-access [ExecutionContextFactoryImpl.class]
[15:50:54.100][INFO ](main) Added component nacs-admin         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-admin [ExecutionContextFactoryImpl.class]
[15:50:54.104][INFO ](main) Added component nacs-be            at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be [ExecutionContextFactoryImpl.class]
[15:50:54.108][INFO ](main) Added component nacs-be-spd        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be-spd [ExecutionContextFactoryImpl.class]
[15:50:54.112][INFO ](main) Added component nacs-channel       at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel [ExecutionContextFactoryImpl.class]
[15:50:54.117][INFO ](main) Added component nacs-channel-unionpay at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel-unionpay [ExecutionContextFactoryImpl.class]
[15:50:54.121][INFO ](main) Added component nacs-check         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-check [ExecutionContextFactoryImpl.class]
[15:50:54.126][INFO ](main) Added component nacs-clear         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-clear [ExecutionContextFactoryImpl.class]
[15:50:54.132][INFO ](main) Added component nacs-main          at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-main [ExecutionContextFactoryImpl.class]
[15:50:54.136][INFO ](main) Added component nacs-mrchnt        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-mrchnt [ExecutionContextFactoryImpl.class]
[15:50:54.140][INFO ](main) Added component nacs-route         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-route [ExecutionContextFactoryImpl.class]
[15:50:54.144][INFO ](main) Added component nacs-udm           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-udm [ExecutionContextFactoryImpl.class]
[15:50:54.151][INFO ](main) Added component nacs-usl           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-usl [ExecutionContextFactoryImpl.class]
[15:50:54.153][INFO ](main) Components after depends-on sort: [tools, webroot, nacs-access, nacs-udm, nacs-admin, nacs-be, nacs-be-spd, nacs-channel, nacs-channel-unionpay, nacs-check, nacs-clear, nacs-main, nacs-mrchnt, nacs-route, nacs-usl] [ExecutionContextFactoryImpl.class]
[15:50:54.187][INFO ](main) Merging runtime configuration at D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:50:54.284][INFO ](main) Found default_time_zone US/Pacific: sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:50:54.285][INFO ](main) Default locale en_US, time zone sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:50:54.468][INFO ](main) Initializing worker ThreadPoolExecutor: queue limit 65535, pool-core 4, pool-max 16, pool-alive 60s [ExecutionContextFactoryImpl.class]
[15:50:55.454][INFO ](main) Added JARs from component webroot: [closure-compiler-v20160208.jar, gradle-js-plugin-2.14.1.jar, html2js-0.1.jar] [ExecutionContextFactoryImpl.class]
[15:50:55.503][INFO ](main) Added JARs from component nacs-be-spd: [cxf-2.7.18.jar, cxf-rt-ws-policy-2.7.18.jar, dom4j-1.6.1.jar, nacs-be-spd-1.0.0.jar, wsdl4j-1.6.3.jar] [ExecutionContextFactoryImpl.class]
[15:50:55.549][INFO ](main) Added JARs from component nacs-channel-unionpay: [bcprov-jdk15on-1.54.jar, commons-codec-1.6.jar, commons-io-2.2.jar, commons-lang-2.5.jar, javax.servlet-api-3.1.0.jar, log4j-1.2.17.jar, nacs-channel-unionpay-1.0.0.jar, nacs-unionpay-1.0.0.jar, slf4j-api-1.5.11.jar, slf4j-log4j12-1.5.11.jar, upacp_sdk-1.1.0-20151216.jar] [ExecutionContextFactoryImpl.class]
[15:50:55.552][INFO ](main) Added JARs from component nacs-check: [nacs-check-1.0.0.jar] [ExecutionContextFactoryImpl.class]
[15:50:55.561][INFO ](main) Added JARs from component nacs-usl: [commons-net-1.4.1.jar, javolution-5.4.3.jar] [ExecutionContextFactoryImpl.class]
[15:50:55.562][INFO ](main) Initialized ClassLoader in 1072ms [ExecutionContextFactoryImpl.class]
[15:50:55.566][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.JackrabbitRunToolFactory [ExecutionContextFactoryImpl.class]
[15:50:55.567][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.SubEthaSmtpToolFactory [ExecutionContextFactoryImpl.class]
[15:50:55.573][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.MCacheToolFactory [ExecutionContextFactoryImpl.class]
[15:50:55.586][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.H2ServerToolFactory [ExecutionContextFactoryImpl.class]
[15:50:55.620][INFO ](main) Cache Facade initialized [ExecutionContextFactoryImpl.class]
[15:50:55.899][INFO ](main) Resource Facade initialized [ExecutionContextFactoryImpl.class]
[15:50:55.971][INFO ](main) Bitronix Transaction Manager version 3.0.0-SNAPSHOT [BitronixTransactionManager.class]
[15:50:55.979][WARN ](main) Cannot get the unique server ID for this JVM ('bitronix.tm.serverId'). Make sure it is configured and you use only US-ASCII characters. Will use IP address instead (unsafe for production usage!). [Configuration.class]
[15:50:55.982][INFO ](main) JVM unique ID: <192.168.191.1> - Using this server ID to ensure uniqueness of transaction IDs across the network. [Configuration.class]
[15:50:56.462][WARN ](main) active log file is unclean, did you call BitronixTransactionManager.shutdown() at the end of the last run? [DiskJournal.class]
[15:50:56.892][INFO ](main) recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 0 resource(s) [] (restricted to serverId '192.168.191.1') [Recoverer.class]
[15:50:56.977][INFO ](main) Transaction Facade initialized [ExecutionContextFactoryImpl.class]
[15:50:57.080][INFO ](main) Database time zone is sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [EntityFacadeImpl.class]
[15:50:57.552][INFO ](main) Initializing DataSource transactional_DS (h2) with properties: [user:sa, url:jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui;lock_timeout=30000] [TransactionInternalBitronix.class]
[15:50:59.532][INFO ](main) incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [transactional_DS] (restricted to serverId '192.168.191.1') [IncrementalRecoverer.class]
[15:50:59.533][INFO ](main) Init DataSource transactional_DS (h2) isolation READ_COMMITTED (2), max pool 50 [TransactionInternalBitronix.class]
[15:50:59.579][INFO ](main) Loaded 0 Entity ECA rules from 0 .eecas.xml files [EntityFacadeImpl.class]
[15:50:59.602][INFO ](main) Entity Cache initialized, distributed cache invalidate enabled: false [EntityCache.class]
[15:50:59.640][INFO ](main) Entity Facade initialized [ExecutionContextFactoryImpl.class]
[15:50:59.681][INFO ](main) Loaded 0 Service ECA rules from 0 .secas.xml files [ServiceFacadeImpl.class]
[15:50:59.797][INFO ](main) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[15:50:59.804][INFO ](main) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[15:50:59.808][INFO ](main) Loaded REST API files, 2 roots, in 105ms [RestApi.class]
[15:50:59.851][INFO ](main) No distributed-factory specified, distributed async service calls will be run local only [ServiceFacadeImpl.class]
[15:50:59.883][INFO ](main) Service Facade initialized [ExecutionContextFactoryImpl.class]
[15:50:59.910][INFO ](main) Screen Facade initialized [ExecutionContextFactoryImpl.class]
[15:50:59.911][INFO ](main) Loading entity definitions [ExecutionContextFactoryImpl.class]
[15:51:00.100][INFO ](main) Found entities in 20 files in 189ms [EntityFacadeImpl.class]
[15:51:00.426][INFO ](main) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:51:01.003][INFO ](main) Loaded 199 entity definitions in 1092ms [ExecutionContextFactoryImpl.class]
[15:51:01.003][INFO ](main) Initializing ToolFactory: MCache [ExecutionContextFactoryImpl.class]
[15:51:01.003][INFO ](main) Initializing ToolFactory: H2Server [ExecutionContextFactoryImpl.class]
[15:51:01.091][INFO ](main) Started H2 remote server on port 9092 status: TCP server running at tcp://192.168.191.1:9092 (only local connections) [H2ServerToolFactory.class]
[15:51:01.092][INFO ](main) H2 args: [-tcpPort, 9092, -ifExists, -baseDir, D:\IDEAWorkSpace\trunk\runtime/db/h2] [H2ServerToolFactory.class]
[15:51:01.101][INFO ](main) Found shutdown hook: org.eclipse.jetty.util.thread.ShutdownThread Thread[Thread-0,5,main] [H2ServerToolFactory.class]
[15:51:01.102][INFO ](main) Found shutdown hook: java.lang.Thread Thread[pool-1-thread-1,5,main] [H2ServerToolFactory.class]
[15:51:01.102][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-12,5,main] [H2ServerToolFactory.class]
[15:51:01.102][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-13,5,main] [H2ServerToolFactory.class]
[15:51:01.102][INFO ](main) Found shutdown hook: java.util.logging.LogManager$Cleaner Thread[Thread-9,5,main] [H2ServerToolFactory.class]
[15:51:01.839][INFO ](main) Execution Context Factory initialized in 8.508 seconds [ExecutionContextFactoryImpl.class]
[15:51:01.863][DEBUG](main) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM ENUMERATION [EntityFindBuilder.class]
[15:51:01.866][DEBUG](main) Executed query with SQL [SELECT COUNT(*)  FROM ENUMERATION] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:51:01.869][INFO ](main) Found 289 Enumeration records, NOT loading empty-db-load data types (all) [ExecutionContextFactoryImpl.class]
[15:51:01.982][INFO ](main) Initializing webapp webroot http://null:null https://null:null https enabled? false [ExecutionContextFactoryImpl.class]
[15:51:02.003][INFO ](main) Added webapp listener org.moqui.impl.webapp.MoquiSessionListener [MoquiContextListener.class]
[15:51:02.116][INFO ](main) Added servlet MoquiServlet on: [/*] [MoquiContextListener.class]
[15:51:02.130][INFO ](main) Added servlet MoquiFopServlet on: [/fop/*] [MoquiContextListener.class]
[15:51:02.143][INFO ](main) Added servlet H2Console on: [/h2/*] [MoquiContextListener.class]
[15:51:02.143][INFO ](main) Found WebSocket ServerContainer org.eclipse.jetty.websocket.jsr356.server.ServerContainer [MoquiContextListener.class]
[15:51:02.165][INFO ](main) Added WebSocket endpoint /notws for class org.moqui.impl.webapp.NotificationEndpoint [MoquiContextListener.class]
[15:51:02.165][INFO ](main) Moqui Framework initialized in 9.525 seconds [MoquiContextListener.class]
[15:51:02.220][INFO ](main) MoquiServlet initialized for webapp webroot [MoquiServlet.class]
[15:51:05.369][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ? [EntityFindBuilder.class]
[15:51:05.379][DEBUG](qtp379110473-15) Executed query with SQL [SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ?] and parameters [[username:admin]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.643][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.647][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.662][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.667][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.678][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.681][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.714][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.715][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.715][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.716][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.727][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.728][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.729][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.730][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.731][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.732][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.747][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.754][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.755][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.755][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.756][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.758][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.764][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.765][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.766][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.770][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.770][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.771][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.778][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.778][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.779][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.780][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.780][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:05.781][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.788][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:05.789][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.879][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:05.926][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/vapps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.952][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ? [EntityFindBuilder.class]
[15:51:05.953][DEBUG](qtp379110473-15) Executed query with SQL [SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ?] and parameters [[userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:05.980][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:51:06.032][DEBUG](qtp379110473-15) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:06.053][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:51:06.055][DEBUG](qtp379110473-15) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ALL_USERS]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.226][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.228][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.231][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.232][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.232][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.233][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Webroot, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.234][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.369][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Applications, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.407][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.408][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.409][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.409][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.410][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.411][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:应用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.428][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:51:07.430][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_STYLESHEET]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.486][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:51:07.503][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SCRIPT]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.504][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:51:07.505][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_SHORTCUT_ICON]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.509][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:51:07.510][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_BODY_CLASS]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.632][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:51:07.634][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_NAVBAR_COMP]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.635][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:51:07.636][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_LOGO]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.684][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST [EntityFindBuilder.class]
[15:51:07.685][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_THEME_ID, SEQUENCE_NUM, RESOURCE_TYPE_ENUM_ID, RESOURCE_VALUE, LAST_UPDATED_STAMP FROM SCREEN_THEME_RESOURCE WHERE (SCREEN_THEME_ID = ? AND RESOURCE_TYPE_ENUM_ID = ?) ORDER BY SEQUENCE_NUM ASC NULLS LAST] and parameters [[screenThemeId:DEFAULT, resourceTypeEnumId:STRT_HEADER_TITLE]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.690][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:07.690][DEBUG](qtp379110473-15) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/Login.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.724][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.726][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.727][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.728][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.729][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.730][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Documentation, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.731][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.732][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.733][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.734][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.735][DEBUG](qtp379110473-15) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:07.736][DEBUG](qtp379110473-15) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Close, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:07.764][INFO ](qtp379110473-15) vapps/nacs-admin/Channel/ChannelList [orderByField:-^trxCtgy] in 2287ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:10.026][INFO ](qtp379110473-39) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:56784 [NotificationEndpoint.class]
[15:51:10.808][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:10.809][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/apps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.891][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.892][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.893][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.895][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.895][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.896][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.925][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.926][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Security, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.941][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:10.941][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.955][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.955][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.956][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.957][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.957][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.958][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.961][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.962][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.963][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.963][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.964][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:10.965][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.966][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:10.966][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Channel.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:10.971][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:10.972][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.054][INFO ](qtp379110473-14) Created 256 automatic reverse relationships [EntityFacadeImpl.class]
[15:51:11.347][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.348][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.351][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.352][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Charts.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.442][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:51:11.473][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHit]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.474][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:51:11.474][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:51:11.474][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:51:11.533][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.565][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:NacsAdmin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.570][INFO ](RequireNewTx) Built entity.data.feed.info cache for in 96ms, entries for 0 entities [EntityDataFeed.class]
[15:51:11.571][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:51:11.571][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:51:11.572][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:51:11.572][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:51:11.572][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:51:11.581][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:51:11.582][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:51:11.582][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:51:11.585][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:51:11.589][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101312, lastUpdatedStamp:2018-04-10 00:51:11.393, seqName:moqui.server.ArtifactHit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.590][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:51:11.590][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:51:11.590][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:51:11.591][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:51:11.611][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.615][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.616][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.618][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.619][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.620][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.620][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.621][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.622][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.623][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.623][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.624][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.625][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.637][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.638][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.639][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.639][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.641][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.641][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.642][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.642][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.643][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.644][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.645][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.645][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.646][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.648][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.649][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.653][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.659][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.660][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:11.661][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:11.707][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.708][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.709][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.709][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.710][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.711][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.728][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.729][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.734][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.734][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.735][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.735][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.770][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.771][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Dashboard, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.772][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.773][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.777][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.777][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.781][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.781][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:System, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.806][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.806][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Artifact Stats, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.834][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.834][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.837][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.838][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.845][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.846][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.847][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.848][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.849][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.850][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.864][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.864][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.896][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.896][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.919][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.920][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.928][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.929][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.930][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.931][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.938][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.942][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount/UserAccountList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.956][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.957][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.958][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.958][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.959][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.960][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.976][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.977][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.978][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.979][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.979][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.979][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.986][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.986][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.988][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.988][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.989][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:11.990][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.990][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.990][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Mrchnt.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:11.995][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:11.996][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-mrchnt/screen/NacsMrchnt/MrchntList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.071][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.072][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.073][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.074][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.076][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.077][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.092][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.093][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.093][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.094][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.101][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.102][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.112][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.113][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.113][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.114][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.115][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.115][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.124][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.125][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.126][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.126][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.127][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.127][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.128][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.129][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Route.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.134][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.134][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-route/screen/NacsRoute/RouteList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.150][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.150][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.151][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.152][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.153][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.153][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.165][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.166][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.166][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.168][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.169][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.170][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.174][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.175][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.176][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.177][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.177][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.178][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.183][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.184][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.185][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.185][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.186][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.187][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.190][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.191][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.191][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.192][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.192][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.193][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.193][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.194][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Check.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.201][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.202][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-check/screen/NacsCheck/ChannelCheckList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.204][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.206][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.207][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.207][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.207][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.208][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.214][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.215][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.216][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.217][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.217][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.218][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.236][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.237][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.237][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.240][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.241][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.241][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.242][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.243][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Clear.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.257][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.257][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-clear/screen/NacsClear/ChannelClearList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.260][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.260][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.261][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.261][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.261][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.262][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.290][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.296][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.299][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.299][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/TxItem.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.318][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.319][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.320][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.320][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.321][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.321][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.337][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.338][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.340][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:12.340][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System/ServiceJob.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.349][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.350][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.350][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.351][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.351][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.352][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.352][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:12.353][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Nacs Admin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:12.897][INFO ](qtp379110473-41) apps/nacs-admin [orderByField:-^trxCtgy] in 292ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:13.011][INFO ](qtp379110473-16) apps/nacs-admin/Channel [orderByField:-^trxCtgy] in 53ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:13.409][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[15:51:13.410][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.414][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[15:51:13.416][DEBUG](qtp379110473-39) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.467][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:51:13.491][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:OpnFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.492][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST [EntityFindBuilder.class]
[15:51:13.493][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST] and parameters [[enumTypeId:VerifiedFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.499][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL [EntityFindBuilder.class]
[15:51:13.500][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.501][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:51:13.502][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:TrxCtgy]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.503][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:51:13.540][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:FeeChargeMode]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.542][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.543][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.543][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.545][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.546][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.546][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.578][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.579][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.579][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.580][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.582][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.582][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.625][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.625][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.626][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.626][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.627][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.627][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.646][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.646][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.647][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.647][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.648][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.648][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.650][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.651][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.653][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.654][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.654][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.655][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.656][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.657][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.658][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.659][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.660][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.670][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.715][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.717][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.718][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.718][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.719][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.720][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.722][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.722][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.723][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.724][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.725][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.726][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.745][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.745][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.746][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.746][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.747][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.748][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.762][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.763][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.764][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.764][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.765][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.765][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.767][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.769][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.769][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.770][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.770][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.771][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.780][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.780][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.781][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.781][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.782][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.782][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.798][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.799][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.799][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.800][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.800][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.801][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.802][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.802][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.803][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.803][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.804][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.804][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.805][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.821][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.822][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.822][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.823][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.824][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.824][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.825][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.825][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.826][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.826][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.827][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.827][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.829][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.829][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.853][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.853][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.854][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.854][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.855][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.855][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.856][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.856][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.857][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.861][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.862][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.862][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.863][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.863][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.863][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.866][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.867][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.867][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.868][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.869][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.870][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.870][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.871][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.871][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:13.872][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:13.940][INFO ](qtp379110473-39) apps/nacs-admin/Channel/ChannelList [orderByField:-^trxCtgy] in 875ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:16.139][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:16.142][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:16.143][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:16.144][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:16.144][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:16.145][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:16.145][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:16.146][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:31.235][INFO ](qtp379110473-18) vapps/nacs-admin/Channel/ChannelList [orderByField:-^trxCtgy] in 278ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:32.224][INFO ](qtp379110473-16) Notification subscribe user EP_ADMIN topics [ALL] session 0:0:0:0:0:0:0:1:8080->0:0:0:0:0:0:0:1:56802 [NotificationEndpoint.class]
[15:51:32.556][INFO ](qtp379110473-14) apps/nacs-admin [orderByField:-^trxCtgy] in 173ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:32.608][INFO ](qtp379110473-18) apps/nacs-admin/Channel [orderByField:-^trxCtgy] in 2ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:32.655][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[15:51:32.656][DEBUG](qtp379110473-16) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:51:32.657][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[15:51:32.658][DEBUG](qtp379110473-16) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:51:32.691][INFO ](qtp379110473-16) apps/nacs-admin/Channel/ChannelList [orderByField:-^trxCtgy] in 42ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:35.215][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.215][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:仪表盘, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.216][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.216][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:仪表盘, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.217][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.218][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:仪表盘, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.231][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.233][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/AutoScreen.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.235][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.235][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/AutoScreen/MainEntityList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.238][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.238][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Auto Screen, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.242][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.243][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/ArtifactStats.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.296][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.297][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:构件统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.299][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.299][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:构件统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.300][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.300][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:构件统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.316][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.316][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/DataView.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.322][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.323][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/DataView/FindDbView.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.332][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.332][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data View, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.370][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.371][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.393][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.393][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.396][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.397][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit/EntityList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.400][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.403][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.421][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.421][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Service Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.422][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.422][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Service Detail, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.423][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.424][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Service Detail, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.431][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.432][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Service.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.434][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.434][DEBUG](qtp379110473-39) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Service/ServiceReference.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.437][DEBUG](qtp379110473-39) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.438][DEBUG](qtp379110473-39) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Service, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.487][INFO ](qtp379110473-41) apps/tools [] in 14ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:35.569][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.570][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:General Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.574][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.575][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Auto Screens, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.575][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.576][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Auto Screens, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.576][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.577][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Auto Screens, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.583][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.584][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Services, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.584][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.585][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Services, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.585][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.586][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Services, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.692][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:35.693][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/rest.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.721][INFO ](qtp379110473-14) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[15:51:35.726][INFO ](qtp379110473-14) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[15:51:35.732][INFO ](qtp379110473-14) Loaded REST API files, 2 roots, in 33ms [RestApi.class]
[15:51:35.823][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.824][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:REST API: Swagger UI, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.825][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.826][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:REST API: Swagger UI, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.826][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.827][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:REST API: Swagger UI, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.850][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.851][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.displayName ?: resource.name} (${resource.childMethods}), locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.852][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.852][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.displayName ?: resource.name} (${resource.childMethods}), locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.853][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.854][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.displayName ?: resource.name} (${resource.childMethods}), locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.874][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.874][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:plain, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.875][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.876][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:plain, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.877][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.877][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:plain, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.879][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.880][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/service.swagger/${resource.name}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.882][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.883][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/service.swagger/${resource.name}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.885][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.886][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/service.swagger/${resource.name}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.909][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.910][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.description ?: ''}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.911][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.911][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.description ?: ''}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.912][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.912][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${resource.description ?: ''}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.936][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.938][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Master API, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.951][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.951][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Master API, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.955][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.956][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Master API, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.997][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.998][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${masterEntityName}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:35.998][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:35.999][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${masterEntityName}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.000][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.001][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${masterEntityName}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.018][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.019][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/master.swagger/${masterEntityName}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.020][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.020][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/master.swagger/${masterEntityName}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.021][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.022][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:/toolstatic/lib/swagger-ui/index.html?url=${restUrl}/master.swagger/${masterEntityName}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.076][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.076][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:The larger APIs take a few seconds to load. Runs in same session (already authenticated)., locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.077][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.077][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:The larger APIs take a few seconds to load. Runs in same session (already authenticated)., locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.078][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.078][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:The larger APIs take a few seconds to load. Runs in same session (already authenticated)., locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.082][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.083][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.084][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.085][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Import, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.086][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.087][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Import, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.088][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.089][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Import, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.099][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:36.100][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataImport.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.103][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.103][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Export, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.118][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.119][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Export, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.121][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.121][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Export, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.128][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:36.129][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataExport.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.131][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.131][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Snapshots, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.132][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.132][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Snapshots, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.133][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.133][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Snapshots, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.141][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.153][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.153][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.154][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.155][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.155][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.156][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.157][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.157][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.159][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.159][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.160][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.160][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.161][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.161][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.162][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.162][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.163][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.163][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.164][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.164][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.165][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.165][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.166][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.167][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.167][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.168][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.169][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.169][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.170][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.170][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.171][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.171][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.172][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.176][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.177][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.178][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.179][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.206][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:36.207][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataSnapshot.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.216][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.231][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.231][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.233][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.233][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.234][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.234][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:36.235][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:36.245][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.245][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Runner, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.246][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.246][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Runner, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.247][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.247][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Runner, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.251][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:36.251][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/SqlRunner.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.253][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.254][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entities, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.254][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.254][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entities, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.255][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.255][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entities, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.257][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.258][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Views, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.259][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.259][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Views, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.259][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.260][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Data Views, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.261][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.262][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Speed Test, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.262][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.263][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Speed Test, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.263][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.264][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Speed Test, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.273][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:36.274][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/SpeedTest.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.277][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.278][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Stats, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.279][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.280][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Stats, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.281][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:36.282][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Stats, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.290][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:36.291][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/QueryStats.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:36.295][INFO ](qtp379110473-14) apps/tools/dashboard [] in 754ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:38.339][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.339][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.340][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.340][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.341][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.341][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.345][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.345][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Import, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.346][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.346][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Import, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.347][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.348][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Import, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.349][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.350][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.350][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.350][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.351][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.351][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.352][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.352][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Snapshots, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.353][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.353][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Snapshots, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.353][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.354][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Snapshots, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.359][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:38.359][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit/EntityDetail.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.422][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.422][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.435][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:38.436][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit/EntityDataFind.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.448][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:51:38.448][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/Entity/DataEdit/EntityDataEdit.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.655][INFO ](qtp379110473-16) apps/tools/Entity [] in 185ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:38.696][INFO ](qtp379110473-39) apps/tools/Entity/DataEdit [] in 12ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:38.833][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.833][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Check/Update All Tables, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.836][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.837][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Liquibase Init XML, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.838][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.838][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Liquibase Init XML, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.839][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.839][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Liquibase Init XML, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.843][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.843][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter Regexp, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.844][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.852][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter Regexp, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.853][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.853][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter Regexp, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.855][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.856][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Download, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.856][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.856][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Download, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.857][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.858][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Download, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.862][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.863][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.863][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.864][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.864][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.865][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Filter, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.924][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.925][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Package, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.926][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.926][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Package, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.926][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.927][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Package, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.928][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.929][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Name, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.929][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.929][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Name, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.930][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.930][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Name, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.931][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.932][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:View##DataBase, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.932][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.933][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:View##DataBase, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.933][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.936][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:View##DataBase, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.936][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.937][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:View, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.938][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.938][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查看, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.938][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.939][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查看, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.939][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.939][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查看, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.940][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.941][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Find, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.941][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.942][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Find, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:38.943][DEBUG](qtp379110473-41) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:38.943][DEBUG](qtp379110473-41) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:39.222][INFO ](qtp379110473-41) apps/tools/Entity/DataEdit/EntityList [] in 497ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:41.145][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:41.148][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:41.149][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:41.149][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:41.152][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:41.154][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:41.154][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:41.163][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:41.163][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:41.164][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:41.164][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:41.165][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:41.270][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.271][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Group Name, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.271][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.271][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Group Name, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.273][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.274][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Group Name, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.290][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.290][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Statement, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.291][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.291][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Statement, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.291][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.292][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:SQL Statement, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.293][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.294][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Limit, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.294][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.295][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Limit, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.295][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.295][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Limit, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.296][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.297][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:500, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.297][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.297][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:500, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.298][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.298][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:500, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.300][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.300][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Run SQL, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.301][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.301][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Run SQL, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.301][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.302][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Run SQL, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.303][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.303][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Results, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.304][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.304][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Results, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.304][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:41.305][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query Results, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:41.307][INFO ](qtp379110473-18) apps/tools/Entity/SqlRunner [] in 468ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:46.137][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:46.138][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:54.241][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:54.242][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query altered ${rowsAffected} rows., locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:54.244][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:54.244][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query altered ${rowsAffected} rows., locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:54.245][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:54.245][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Query altered ${rowsAffected} rows., locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:54.401][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:54.401][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${message}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:51:54.402][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:54.402][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${message}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:51:54.403][DEBUG](qtp379110473-16) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:51:54.403][DEBUG](qtp379110473-16) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${message}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:51:54.427][INFO ](qtp379110473-16) apps/tools/Entity/SqlRunner [limit:500, groupName:transactional, submitButton:submitButton, sql:drop table Channel] in 288ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:51:56.137][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:56.139][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:51:56.139][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:51:56.140][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:52:36.763][INFO ](main) Loading Webapp 'webroot' (Moqui Root Webapp) on ROOT, located at: D:\IDEAWorkSpace\trunk\execwartmp\ROOT\webapp [MoquiContextListener.class]
[15:52:37.130][INFO ](main) Initializing Moqui Framework version 2.1.0
 - runtime directory: D:\IDEAWorkSpace\trunk\runtime
 - runtime config:    D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:52:37.727][INFO ](main) Added component tools              at file:D:/IDEAWorkSpace/trunk/runtime/base-component/tools [ExecutionContextFactoryImpl.class]
[15:52:37.744][INFO ](main) Added component webroot            at file:D:/IDEAWorkSpace/trunk/runtime/base-component/webroot [ExecutionContextFactoryImpl.class]
[15:52:37.752][INFO ](main) Added component nacs-access        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-access [ExecutionContextFactoryImpl.class]
[15:52:37.758][INFO ](main) Added component nacs-admin         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-admin [ExecutionContextFactoryImpl.class]
[15:52:37.763][INFO ](main) Added component nacs-be            at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be [ExecutionContextFactoryImpl.class]
[15:52:37.778][INFO ](main) Added component nacs-be-spd        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-be-spd [ExecutionContextFactoryImpl.class]
[15:52:37.785][INFO ](main) Added component nacs-channel       at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel [ExecutionContextFactoryImpl.class]
[15:52:37.789][INFO ](main) Added component nacs-channel-unionpay at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-channel-unionpay [ExecutionContextFactoryImpl.class]
[15:52:37.795][INFO ](main) Added component nacs-check         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-check [ExecutionContextFactoryImpl.class]
[15:52:37.799][INFO ](main) Added component nacs-clear         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-clear [ExecutionContextFactoryImpl.class]
[15:52:37.802][INFO ](main) Added component nacs-main          at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-main [ExecutionContextFactoryImpl.class]
[15:52:37.805][INFO ](main) Added component nacs-mrchnt        at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-mrchnt [ExecutionContextFactoryImpl.class]
[15:52:37.808][INFO ](main) Added component nacs-route         at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-route [ExecutionContextFactoryImpl.class]
[15:52:37.810][INFO ](main) Added component nacs-udm           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-udm [ExecutionContextFactoryImpl.class]
[15:52:37.814][INFO ](main) Added component nacs-usl           at file:D:/IDEAWorkSpace/trunk/runtime/component/nacs-usl [ExecutionContextFactoryImpl.class]
[15:52:37.815][INFO ](main) Components after depends-on sort: [tools, webroot, nacs-access, nacs-udm, nacs-admin, nacs-be, nacs-be-spd, nacs-channel, nacs-channel-unionpay, nacs-check, nacs-clear, nacs-main, nacs-mrchnt, nacs-route, nacs-usl] [ExecutionContextFactoryImpl.class]
[15:52:37.840][INFO ](main) Merging runtime configuration at D:\IDEAWorkSpace\trunk\runtime/conf/MoquiDevConf.xml [ExecutionContextFactoryImpl.class]
[15:52:37.912][INFO ](main) Found default_time_zone US/Pacific: sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:52:37.913][INFO ](main) Default locale en_US, time zone sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [ExecutionContextFactoryImpl.class]
[15:52:38.122][INFO ](main) Initializing worker ThreadPoolExecutor: queue limit 65535, pool-core 4, pool-max 16, pool-alive 60s [ExecutionContextFactoryImpl.class]
[15:52:38.249][INFO ](main) Added JARs from component webroot: [closure-compiler-v20160208.jar, gradle-js-plugin-2.14.1.jar, html2js-0.1.jar] [ExecutionContextFactoryImpl.class]
[15:52:38.282][INFO ](main) Added JARs from component nacs-be-spd: [cxf-2.7.18.jar, cxf-rt-ws-policy-2.7.18.jar, dom4j-1.6.1.jar, nacs-be-spd-1.0.0.jar, wsdl4j-1.6.3.jar] [ExecutionContextFactoryImpl.class]
[15:52:38.337][INFO ](main) Added JARs from component nacs-channel-unionpay: [bcprov-jdk15on-1.54.jar, commons-codec-1.6.jar, commons-io-2.2.jar, commons-lang-2.5.jar, javax.servlet-api-3.1.0.jar, log4j-1.2.17.jar, nacs-channel-unionpay-1.0.0.jar, nacs-unionpay-1.0.0.jar, slf4j-api-1.5.11.jar, slf4j-log4j12-1.5.11.jar, upacp_sdk-1.1.0-20151216.jar] [ExecutionContextFactoryImpl.class]
[15:52:38.340][INFO ](main) Added JARs from component nacs-check: [nacs-check-1.0.0.jar] [ExecutionContextFactoryImpl.class]
[15:52:38.349][INFO ](main) Added JARs from component nacs-usl: [commons-net-1.4.1.jar, javolution-5.4.3.jar] [ExecutionContextFactoryImpl.class]
[15:52:38.350][INFO ](main) Initialized ClassLoader in 211ms [ExecutionContextFactoryImpl.class]
[15:52:38.358][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.JackrabbitRunToolFactory [ExecutionContextFactoryImpl.class]
[15:52:38.359][INFO ](main) Not loading disabled ToolFactory with class: org.moqui.impl.tools.SubEthaSmtpToolFactory [ExecutionContextFactoryImpl.class]
[15:52:38.384][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.MCacheToolFactory [ExecutionContextFactoryImpl.class]
[15:52:38.409][INFO ](main) Loading ToolFactory with class: org.moqui.impl.tools.H2ServerToolFactory [ExecutionContextFactoryImpl.class]
[15:52:38.457][INFO ](main) Cache Facade initialized [ExecutionContextFactoryImpl.class]
[15:52:38.739][INFO ](main) Resource Facade initialized [ExecutionContextFactoryImpl.class]
[15:52:38.798][INFO ](main) Bitronix Transaction Manager version 3.0.0-SNAPSHOT [BitronixTransactionManager.class]
[15:52:38.804][WARN ](main) Cannot get the unique server ID for this JVM ('bitronix.tm.serverId'). Make sure it is configured and you use only US-ASCII characters. Will use IP address instead (unsafe for production usage!). [Configuration.class]
[15:52:38.805][INFO ](main) JVM unique ID: <192.168.191.1> - Using this server ID to ensure uniqueness of transaction IDs across the network. [Configuration.class]
[15:52:38.819][WARN ](main) active log file is unclean, did you call BitronixTransactionManager.shutdown() at the end of the last run? [DiskJournal.class]
[15:52:39.053][INFO ](main) recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on 0 resource(s) [] (restricted to serverId '192.168.191.1') [Recoverer.class]
[15:52:39.087][INFO ](main) Transaction Facade initialized [ExecutionContextFactoryImpl.class]
[15:52:39.180][INFO ](main) Database time zone is sun.util.calendar.ZoneInfo[id="US/Pacific",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=US/Pacific,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]] [EntityFacadeImpl.class]
[15:52:39.402][INFO ](main) Initializing DataSource transactional_DS (h2) with properties: [user:sa, url:jdbc:h2:D:\IDEAWorkSpace\trunk\runtime/db/h2/moqui;lock_timeout=30000] [TransactionInternalBitronix.class]
[15:52:40.956][INFO ](main) incremental recovery committed 0 dangling transaction(s) and rolled back 0 aborted transaction(s) on resource [transactional_DS] (restricted to serverId '192.168.191.1') [IncrementalRecoverer.class]
[15:52:40.958][INFO ](main) Init DataSource transactional_DS (h2) isolation READ_COMMITTED (2), max pool 50 [TransactionInternalBitronix.class]
[15:52:40.993][INFO ](main) Loaded 0 Entity ECA rules from 0 .eecas.xml files [EntityFacadeImpl.class]
[15:52:41.014][INFO ](main) Entity Cache initialized, distributed cache invalidate enabled: false [EntityCache.class]
[15:52:41.053][INFO ](main) Entity Facade initialized [ExecutionContextFactoryImpl.class]
[15:52:41.110][INFO ](main) Loaded 0 Service ECA rules from 0 .secas.xml files [ServiceFacadeImpl.class]
[15:52:41.260][INFO ](main) Loaded REST API from moqui.rest.xml (71 paths, 83 methods) [RestApi.class]
[15:52:41.267][INFO ](main) Loaded REST API from access.rest.xml (5 paths, 2 methods) [RestApi.class]
[15:52:41.272][INFO ](main) Loaded REST API files, 2 roots, in 143ms [RestApi.class]
[15:52:41.318][INFO ](main) No distributed-factory specified, distributed async service calls will be run local only [ServiceFacadeImpl.class]
[15:52:41.350][INFO ](main) Service Facade initialized [ExecutionContextFactoryImpl.class]
[15:52:41.366][INFO ](main) Screen Facade initialized [ExecutionContextFactoryImpl.class]
[15:52:41.366][INFO ](main) Loading entity definitions [ExecutionContextFactoryImpl.class]
[15:52:41.487][INFO ](main) Found entities in 20 files in 121ms [EntityFacadeImpl.class]
[15:52:41.766][INFO ](main) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:52:42.427][INFO ](main) Loaded 199 entity definitions in 1061ms [ExecutionContextFactoryImpl.class]
[15:52:42.427][INFO ](main) Initializing ToolFactory: MCache [ExecutionContextFactoryImpl.class]
[15:52:42.427][INFO ](main) Initializing ToolFactory: H2Server [ExecutionContextFactoryImpl.class]
[15:52:42.478][INFO ](main) Started H2 remote server on port 9092 status: TCP server running at tcp://192.168.191.1:9092 (only local connections) [H2ServerToolFactory.class]
[15:52:42.478][INFO ](main) H2 args: [-tcpPort, 9092, -ifExists, -baseDir, D:\IDEAWorkSpace\trunk\runtime/db/h2] [H2ServerToolFactory.class]
[15:52:42.481][INFO ](main) Found shutdown hook: org.eclipse.jetty.util.thread.ShutdownThread Thread[Thread-0,5,main] [H2ServerToolFactory.class]
[15:52:42.491][INFO ](main) Found shutdown hook: java.lang.Thread Thread[pool-1-thread-1,5,main] [H2ServerToolFactory.class]
[15:52:42.491][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-13,5,main] [H2ServerToolFactory.class]
[15:52:42.491][INFO ](main) Found shutdown hook: java.util.logging.LogManager$Cleaner Thread[Thread-9,5,main] [H2ServerToolFactory.class]
[15:52:42.492][INFO ](main) Found shutdown hook: org.h2.engine.DatabaseCloser Thread[Thread-12,5,main] [H2ServerToolFactory.class]
[15:52:42.782][INFO ](main) Execution Context Factory initialized in 5.823 seconds [ExecutionContextFactoryImpl.class]
[15:52:42.797][DEBUG](main) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM ENUMERATION [EntityFindBuilder.class]
[15:52:42.804][DEBUG](main) Executed query with SQL [SELECT COUNT(*)  FROM ENUMERATION] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:52:42.807][INFO ](main) Found 289 Enumeration records, NOT loading empty-db-load data types (all) [ExecutionContextFactoryImpl.class]
[15:52:42.897][INFO ](main) Initializing webapp webroot http://null:null https://null:null https enabled? false [ExecutionContextFactoryImpl.class]
[15:52:42.909][INFO ](main) Added webapp listener org.moqui.impl.webapp.MoquiSessionListener [MoquiContextListener.class]
[15:52:42.973][INFO ](main) Added servlet MoquiServlet on: [/*] [MoquiContextListener.class]
[15:52:42.989][INFO ](main) Added servlet MoquiFopServlet on: [/fop/*] [MoquiContextListener.class]
[15:52:42.998][INFO ](main) Added servlet H2Console on: [/h2/*] [MoquiContextListener.class]
[15:52:42.998][INFO ](main) Found WebSocket ServerContainer org.eclipse.jetty.websocket.jsr356.server.ServerContainer [MoquiContextListener.class]
[15:52:43.030][INFO ](main) Added WebSocket endpoint /notws for class org.moqui.impl.webapp.NotificationEndpoint [MoquiContextListener.class]
[15:52:43.031][INFO ](main) Moqui Framework initialized in 6.294 seconds [MoquiContextListener.class]
[15:52:43.063][INFO ](main) MoquiServlet initialized for webapp webroot [MoquiServlet.class]
[15:54:41.415][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL [EntityFindBuilder.class]
[15:54:41.420][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, DESCRIPTION, SERVICE_NAME, TRANSACTION_TIMEOUT, TOPIC, LOCAL_ONLY, CRON_EXPRESSION, FROM_DATE, THRU_DATE, REPEAT_COUNT, PAUSED, EXPIRE_LOCK_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB WHERE CRON_EXPRESSION  IS NOT NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:54:41.505][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:54:41.510][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:54:41.519][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:54:41.521][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:54:41.552][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:54:41.553][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:55:41.360][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:55:41.365][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:55:41.370][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:55:41.371][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:55:41.382][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:55:41.383][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:56:41.360][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:56:41.360][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:56:41.362][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:56:41.363][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:56:41.365][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:56:41.366][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.222][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ? [EntityFindBuilder.class]
[15:56:58.225][DEBUG](qtp379110473-14) Executed query with SQL [SELECT USER_ID, USERNAME, USER_FULL_NAME, CURRENT_PASSWORD, RESET_PASSWORD, PASSWORD_SALT, PASSWORD_HASH_TYPE, PASSWORD_BASE64, PASSWORD_SET_DATE, PASSWORD_HINT, HAS_LOGGED_OUT, DISABLED, DISABLED_DATE_TIME, SUCCESSIVE_FAILED_LOGINS, REQUIRE_PASSWORD_CHANGE, CURRENCY_UOM_ID, LOCALE, TIME_ZONE, EXTERNAL_USER_ID, EMAIL_ADDRESS, LAST_UPDATED_STAMP FROM USER_ACCOUNT WHERE USERNAME = ?] and parameters [[username:admin]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.467][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.468][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Change Password, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.479][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.480][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Login, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.486][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.488][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.512][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.513][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.514][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.515][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Echopath, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.518][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.520][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.520][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.521][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.522][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.522][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Error, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.527][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.528][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.529][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.529][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.530][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.531][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rest, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.537][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.538][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.539][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.541][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.552][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.555][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Rpc, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.564][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.565][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.566][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.567][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.568][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:58.570][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Toolstatic, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.588][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:56:58.589][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.653][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ? [EntityFindBuilder.class]
[15:56:58.656][DEBUG](qtp379110473-14) Executed query with SQL [SELECT USER_GROUP_ID, USER_ID, FROM_DATE, THRU_DATE, LAST_UPDATED_STAMP FROM USER_GROUP_MEMBER WHERE USER_ID = ?] and parameters [[userId:EP_ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.687][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:56:58.697][DEBUG](qtp379110473-14) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ADMIN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:58.712][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ? [EntityFindBuilder.class]
[15:56:58.713][DEBUG](qtp379110473-14) Executed query with SQL [SELECT AAZ.USER_GROUP_ID, AAZ.ARTIFACT_AUTHZ_ID, AAZ.AUTHZ_ACTION_ENUM_ID, AAZ.AUTHZ_TYPE_ENUM_ID, AAZ.AUTHZ_SERVICE_NAME, AGM.ARTIFACT_GROUP_ID, AGM.ARTIFACT_NAME, AGM.ARTIFACT_TYPE_ENUM_ID, AGM.NAME_IS_PATTERN, AGM.INHERIT_AUTHZ, AGM.FILTER_MAP FROM (ARTIFACT_AUTHZ AAZ INNER JOIN ARTIFACT_GROUP_MEMBER AGM ON AAZ.ARTIFACT_GROUP_ID = AGM.ARTIFACT_GROUP_ID) WHERE AAZ.USER_GROUP_ID = ?] and parameters [[userGroupId:ALL_USERS]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.547][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:56:59.548][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/apps.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.587][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.594][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.595][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.596][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.602][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.602][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Charts, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.637][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.638][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Security, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.647][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:56:59.648][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.654][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.655][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.656][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.656][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.657][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.657][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.662][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.663][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.663][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.664][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.664][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:56:59.665][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.665][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:56:59.666][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Channel.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.677][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:56:59.677][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.768][INFO ](qtp379110473-14) Created 256 automatic reverse relationships [EntityFacadeImpl.class]
[15:56:59.897][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:56:59.905][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:56:59.908][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:56:59.909][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Charts.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.106][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.109][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:NacsAdmin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.149][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.153][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.154][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.155][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.156][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.157][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Entity Sync, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.171][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.172][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.173][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.174][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.175][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.176][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Print, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.208][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.212][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Dashboard, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.213][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.214][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.217][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.218][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/System/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.221][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.222][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:System, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.239][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.241][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Artifact Stats, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.273][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.274][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.277][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.278][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://tools/screen/Tools/dashboard.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.292][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.294][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Tools, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.300][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.301][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Applications, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.306][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.307][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.307][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.308][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.309][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.309][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:首页, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.373][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.374][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.386][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.387][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account Detail, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.407][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.408][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:User Account List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.410][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.410][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.412][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.413][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Security/UserAccount/UserAccountList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.420][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.420][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.422][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.423][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.424][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.424][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:用户权限, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.430][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.431][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.432][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.432][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.433][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.434][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.438][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.439][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.439][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.465][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.466][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.466][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.467][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.468][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Mrchnt.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.473][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.473][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-mrchnt/screen/NacsMrchnt/MrchntList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.523][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.524][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.525][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.526][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.527][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.527][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.528][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.528][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.529][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.530][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.530][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.531][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.541][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.542][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.543][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.544][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.545][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.546][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.551][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.552][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.552][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.553][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.554][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.555][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.555][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.556][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Route.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.560][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.561][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-route/screen/NacsRoute/RouteList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.609][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.610][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.611][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.619][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.620][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.621][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:路由管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.632][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.633][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.634][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.636][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.637][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.638][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.642][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.643][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.644][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.644][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.645][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.646][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道对账明细, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.655][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.656][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.657][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.663][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.664][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.665][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.671][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.672][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.673][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.673][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.674][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.675][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户错账列表, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.676][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.677][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Check.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.681][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.682][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-check/screen/NacsCheck/ChannelCheckList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.684][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.685][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.686][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.687][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.687][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.688][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.698][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.699][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.699][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.700][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.701][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.702][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.706][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.707][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.708][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.709][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.710][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.710][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户清算, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.711][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.712][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/Clear.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.719][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:00.720][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-clear/screen/NacsClear/ChannelClearList.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.723][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.723][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.724][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.725][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:00.726][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:00.726][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:清算管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.341][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:01.342][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.344][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:01.346][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/TxItem.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.356][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:01.362][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.365][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:01.366][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.368][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:01.369][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.399][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:01.400][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.402][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:01.403][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/System/ServiceJob.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.418][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:01.419][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.420][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:01.421][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.422][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:01.423][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:系统管理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:01.424][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:01.426][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Nacs Admin, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.034][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:57:02.036][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:OpnFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.040][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST [EntityFindBuilder.class]
[15:57:02.052][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? ORDER BY ENUM_ID ASC NULLS LAST] and parameters [[enumTypeId:VerifiedFlg]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.067][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL [EntityFindBuilder.class]
[15:57:02.068][DEBUG](qtp379110473-14) Executed query with SQL [SELECT SEQ_ID, CHANNEL_SEQ_ID, TRX_CTGY, FEE_TYPE, BEGIN_AMT, END_AMT, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL_FEE WHERE CHANNEL_SEQ_ID  IS NULL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.069][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:57:02.070][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:TrxCtgy]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.071][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:57:02.074][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:FeeChargeMode]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.427][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.427][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.428][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.428][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.429][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.430][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:添加, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.489][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.490][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.492][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.535][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:02.537][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.538][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.539][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:transition, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.547][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHit]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.548][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:57:02.548][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:57:02.548][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:57:02.553][INFO ](RequireNewTx) Built entity.data.feed.info cache for in 4ms, entries for 0 entities [EntityDataFeed.class]
[15:57:02.554][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:57:02.554][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:57:02.554][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:57:02.554][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:57:02.554][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:57:02.555][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:57:02.555][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:57:02.555][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:57:02.557][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:57:02.561][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101413, lastUpdatedStamp:2018-04-10 00:57:02.53, seqName:moqui.server.ArtifactHit]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:02.561][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:57:02.561][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:57:02.561][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:57:02.561][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:57:02.581][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.582][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.583][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.584][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.584][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.584][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.593][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.594][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.594][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.595][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.595][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.596][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道名称, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.598][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.599][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.599][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.600][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.606][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.607][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.608][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.609][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.609][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.610][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.610][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.610][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:true, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.649][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.650][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.651][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.652][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.652][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.653][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:ENABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.653][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.654][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.654][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.654][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.655][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.655][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:启用, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.671][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.672][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.673][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.673][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.674][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.674][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${description}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.690][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.691][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.692][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.692][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.693][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.693][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:DISABLED, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.694][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.694][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.695][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.695][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.696][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.696][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:关闭, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.721][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:02.723][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:02.724][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.724][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.725][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.725][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.726][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.726][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取方式, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.753][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.753][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.754][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.754][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.755][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.755][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.756][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.756][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.757][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.757][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.758][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.758][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.759][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.760][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.762][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.764][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.764][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.765][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.765][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.766][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.766][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.767][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.767][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.768][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单月收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.768][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.769][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.769][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.770][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.771][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.771][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:FEE_CHARGE_MODE3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.772][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.772][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.773][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.773][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.773][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.774][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:百分比, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.778][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.780][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.780][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.781][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.782][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.783][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收取金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.786][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.787][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.787][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.788][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Add, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.788][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.789][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.789][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.790][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.790][DEBUG](qtp379110473-14) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:02.791][DEBUG](qtp379110473-14) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:新建, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:02.877][INFO ](qtp379110473-14) apps/nacs-admin/Channel/ChannelList [] in 1304ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:57:07.517][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:07.518][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:20.166][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:20.167][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:nacs.channel.Channel]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.168][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:57:20.168][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:57:20.170][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:57:20.172][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:100203, lastUpdatedStamp:2018-04-10 00:57:20.166, seqName:nacs.channel.Channel]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:20.172][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:57:20.172][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:57:20.172][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:57:20.172][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:57:20.176][INFO ](qtp379110473-17) Creating table for nacs.channel.Channel pks: [seqId] [EntityDbMeta.class]
[15:57:20.184][INFO ](qtp379110473-17) Created table CHANNEL for entity nacs.channel.Channel in group transactional [EntityDbMeta.class]
[15:57:20.189][DEBUG](qtp379110473-17) making crud PreparedStatement for SQL: INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:20.190][DEBUG](qtp379110473-17) Executed update with SQL [INSERT INTO CHANNEL (SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:20.203][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:20.204][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.entity.EntityAuditLog]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.204][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[15:57:20.204][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[15:57:20.204][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[15:57:20.204][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[15:57:20.204][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:57:20.204][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[15:57:20.204][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[15:57:20.204][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[15:57:20.205][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[15:57:20.205][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[15:57:20.205][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[15:57:20.205][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[15:57:20.206][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101376, lastUpdatedStamp:2018-04-10 00:57:20.202, seqName:moqui.entity.EntityAuditLog]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:20.206][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[15:57:20.206][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[15:57:20.206][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[15:57:20.206][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[15:57:20.229][DEBUG](qtp379110473-17) making crud PreparedStatement for SQL: INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:20.233][DEBUG](qtp379110473-17) Executed update with SQL [INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:20.233][DEBUG](qtp379110473-17) making crud PreparedStatement for SQL: INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:20.234][DEBUG](qtp379110473-17) Executed update with SQL [INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:20.234][DEBUG](qtp379110473-17) making crud PreparedStatement for SQL: INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:20.235][DEBUG](qtp379110473-17) Executed update with SQL [INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:20.235][DEBUG](qtp379110473-17) making crud PreparedStatement for SQL: INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:20.236][DEBUG](qtp379110473-17) Executed update with SQL [INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:20.260][INFO ](qtp379110473-17) Transition apps/nacs-admin/Channel/ChannelList/createChannel in 369ms, JSON redirect to: /apps/nacs-admin/Channel/ChannelList [ScreenRenderImpl.class]
[15:57:20.283][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[15:57:20.284][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.285][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[15:57:20.285][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.475][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:20.476][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.476][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:20.477][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.477][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:20.478][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.497][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:57:20.497][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-channel/screen/NacsChannel/ChannelDetail.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.529][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:20.530][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Update, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.530][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:20.531][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Update, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.532][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:20.532][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.532][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:20.533][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.533][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:20.534][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:更新, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:20.536][INFO ](qtp379110473-18) apps/nacs-admin/Channel/ChannelList [] in 255ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:57:22.516][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:22.520][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:22.520][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:22.521][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:22.522][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:22.523][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:26.219][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:26.219][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额的方式百分比应该为空, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:57:26.220][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:26.220][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额的方式百分比应该为空, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:57:26.220][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:57:26.221][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单笔收取金额的方式百分比应该为空, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:57:26.222][INFO ](qtp379110473-13) 单笔收取金额的方式百分比应该为空 [MessageFacadeImpl.class]
[15:57:26.226][INFO ](qtp379110473-13) Transition apps/nacs-admin/Channel/ChannelList/updateChannel in 202ms, JSON redirect to: /apps/nacs-admin/Channel/ChannelList?pageIndex=0 [ScreenRenderImpl.class]
[15:57:26.401][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[15:57:26.402][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:26.402][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[15:57:26.403][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:26.662][INFO ](qtp379110473-18) apps/nacs-admin/Channel/ChannelList [pageIndex:0] in 262ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:57:27.516][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:27.517][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:27.518][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:27.520][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:27.521][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:27.522][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:27.523][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:27.524][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:33.615][INFO ](qtp379110473-13) 更 [EntityValueBase.class]
[15:57:33.615][INFO ](qtp379110473-13) 更1 [EntityValueBase.class]
[15:57:33.615][INFO ](qtp379110473-13) 更2 [EntityValueBase.class]
[15:57:33.616][INFO ](qtp379110473-13) 更3 [EntityValueBase.class]
[15:57:33.617][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL WHERE SEQ_ID=? [EntityQueryBuilder.class]
[15:57:33.618][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL WHERE SEQ_ID=?] and parameters [[seqId:100153]] in [0] seconds [EntityQueryBuilder.class]
[15:57:33.619][INFO ](qtp379110473-13) 更4 [EntityValueBase.class]
[15:57:33.619][INFO ](qtp379110473-13) 更5 [EntityValueBase.class]
[15:57:33.620][INFO ](qtp379110473-13) 更5.5 [EntityValueBase.class]
[15:57:33.620][INFO ](qtp379110473-13) 更9 [EntityValueBase.class]
[15:57:33.620][INFO ](qtp379110473-13) 更10 [EntityValueBase.class]
[15:57:33.621][INFO ](qtp379110473-13) 更11 [EntityValueBase.class]
[15:57:33.621][INFO ](qtp379110473-13) 打SQL！ [EntityValueImpl.class]
[15:57:33.621][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: UPDATE CHANNEL SET AMT=?, LAST_UPDATED_STAMP=? WHERE SEQ_ID=? [EntityQueryBuilder.class]
[15:57:33.623][DEBUG](qtp379110473-13) Executed update with SQL [UPDATE CHANNEL SET AMT=?, LAST_UPDATED_STAMP=? WHERE SEQ_ID=?] and parameters [[amt:11, lastUpdatedStamp:2018-04-10 00:57:33.519, seqId:100153]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:33.623][INFO ](qtp379110473-13) 更12 [EntityValueBase.class]
[15:57:33.624][INFO ](qtp379110473-13) 更13 [EntityValueBase.class]
[15:57:33.624][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, OLD_VALUE_TEXT, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:33.626][DEBUG](qtp379110473-13) Executed update with SQL [INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, OLD_VALUE_TEXT, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:33.626][INFO ](qtp379110473-13) 更7 [EntityValueBase.class]
[15:57:33.626][INFO ](qtp379110473-13) 更8 [EntityValueBase.class]
[15:57:33.654][INFO ](qtp379110473-13) Created 28 automatic reverse relationships [EntityFacadeImpl.class]
[15:57:33.699][INFO ](qtp379110473-13) Transition apps/nacs-admin/Channel/ChannelList/updateChannel in 193ms, JSON redirect to: /apps/nacs-admin/Channel/ChannelList?pageIndex=0 [ScreenRenderImpl.class]
[15:57:33.730][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[15:57:33.732][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:33.733][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[15:57:33.734][DEBUG](qtp379110473-13) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:33.962][INFO ](qtp379110473-13) apps/nacs-admin/Channel/ChannelList [pageIndex:0] in 234ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:57:37.516][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:37.518][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:37.518][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:37.519][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:37.519][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:37.520][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:41.363][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:41.367][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:57:41.372][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:41.373][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:57:41.380][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:57:41.385][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:57:41.618][INFO ](qtp379110473-12) Found entities in 20 files in 33ms [EntityFacadeImpl.class]
[15:57:41.619][INFO ](qtp379110473-12) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[15:57:41.619][INFO ](qtp379110473-12) 更 [EntityValueBase.class]
[15:57:41.619][INFO ](qtp379110473-12) 更1 [EntityValueBase.class]
[15:57:41.619][INFO ](qtp379110473-12) 更2 [EntityValueBase.class]
[15:57:41.619][INFO ](qtp379110473-12) 更3 [EntityValueBase.class]
[15:57:41.619][DEBUG](qtp379110473-12) making crud PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL WHERE SEQ_ID=? [EntityQueryBuilder.class]
[15:57:41.620][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL WHERE SEQ_ID=?] and parameters [[seqId:100153]] in [0] seconds [EntityQueryBuilder.class]
[15:57:41.620][INFO ](qtp379110473-12) 更4 [EntityValueBase.class]
[15:57:41.620][INFO ](qtp379110473-12) 更5 [EntityValueBase.class]
[15:57:41.620][INFO ](qtp379110473-12) 更5.5 [EntityValueBase.class]
[15:57:41.621][INFO ](qtp379110473-12) 更9 [EntityValueBase.class]
[15:57:41.621][INFO ](qtp379110473-12) 更10 [EntityValueBase.class]
[15:57:41.621][INFO ](qtp379110473-12) 更11 [EntityValueBase.class]
[15:57:41.621][INFO ](qtp379110473-12) 打SQL！ [EntityValueImpl.class]
[15:57:41.621][DEBUG](qtp379110473-12) making crud PreparedStatement for SQL: UPDATE CHANNEL SET CHANNEL_NM=?, LAST_UPDATED_STAMP=? WHERE SEQ_ID=? [EntityQueryBuilder.class]
[15:57:41.630][DEBUG](qtp379110473-12) Executed update with SQL [UPDATE CHANNEL SET CHANNEL_NM=?, LAST_UPDATED_STAMP=? WHERE SEQ_ID=?] and parameters [[channelNm:测试, lastUpdatedStamp:2018-04-10 00:57:41.584, seqId:100153]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:41.630][INFO ](qtp379110473-12) 更12 [EntityValueBase.class]
[15:57:41.631][INFO ](qtp379110473-12) 更13 [EntityValueBase.class]
[15:57:41.632][DEBUG](qtp379110473-12) making crud PreparedStatement for SQL: INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, OLD_VALUE_TEXT, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:41.636][DEBUG](qtp379110473-12) Executed update with SQL [INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, OLD_VALUE_TEXT, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:41.636][INFO ](qtp379110473-12) 更7 [EntityValueBase.class]
[15:57:41.636][INFO ](qtp379110473-12) 更8 [EntityValueBase.class]
[15:57:41.639][INFO ](qtp379110473-12) Transition apps/nacs-admin/Channel/ChannelList/updateChannel in 55ms, JSON redirect to: /apps/nacs-admin/Channel/ChannelList?pageIndex=0 [ScreenRenderImpl.class]
[15:57:41.719][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[15:57:41.720][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:41.723][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[15:57:41.723][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:57:41.902][INFO ](qtp379110473-18) apps/nacs-admin/Channel/ChannelList [pageIndex:0] in 185ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:57:42.517][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:42.519][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:42.520][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:42.521][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:57:42.522][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:57:42.522][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:17.456][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.456][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一交易流水, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.457][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.457][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一交易流水, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.458][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.458][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:统一交易流水, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.461][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:58:17.461][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/TxItemChannel.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.465][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.465][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道流水, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.466][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.466][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道流水, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.466][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.467][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道流水, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.470][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:58:17.471][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/TxItemCore.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.475][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.476][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心账务流水, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.476][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.477][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心账务流水, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.477][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.477][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心账务流水, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.481][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[15:58:17.482][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-admin/screen/NacsAdmin/QuiryStatistics/Agreement.xml]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.510][INFO ](qtp379110473-12) Created 28 automatic reverse relationships [EntityFacadeImpl.class]
[15:58:17.517][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.517][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约信息流水, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.518][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.518][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约信息流水, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.518][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:17.519][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约信息流水, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:17.530][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:58:17.531][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:17.815][INFO ](qtp379110473-18) apps/nacs-admin/QuiryStatistics [] in 271ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:58:18.442][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE WORK_DATE >= ? ORDER BY WORK_DATE DESC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[15:58:18.450][DEBUG](qtp379110473-13) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE WORK_DATE >= ? ORDER BY WORK_DATE DESC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[workDate:2018-04-10]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.451][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE WORK_DATE >= ? [EntityFindBuilder.class]
[15:58:18.457][DEBUG](qtp379110473-13) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE WORK_DATE >= ?] and parameters [[workDate:2018-04-10]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.464][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ? [EntityFindBuilder.class]
[15:58:18.465][DEBUG](qtp379110473-13) Executed query with SQL [SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ?] and parameters [[statusTypeId:BuiStatus]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.467][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ? [EntityFindBuilder.class]
[15:58:18.467][DEBUG](qtp379110473-13) Executed query with SQL [SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ?] and parameters [[statusTypeId:PayStatus]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.469][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ? [EntityFindBuilder.class]
[15:58:18.470][DEBUG](qtp379110473-13) Executed query with SQL [SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ?] and parameters [[statusTypeId:CoreStatus]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.471][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ? [EntityFindBuilder.class]
[15:58:18.474][DEBUG](qtp379110473-13) Executed query with SQL [SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ?] and parameters [[statusTypeId:TranStas]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.476][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL [EntityFindBuilder.class]
[15:58:18.476][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.478][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ? [EntityFindBuilder.class]
[15:58:18.479][DEBUG](qtp379110473-13) Executed query with SQL [SELECT STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, SEQUENCE_NUM, DESCRIPTION, LAST_UPDATED_STAMP FROM STATUS_ITEM WHERE STATUS_TYPE_ID = ?] and parameters [[statusTypeId:TxStatuId]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.481][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:58:18.483][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:Certcode]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.493][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[15:58:18.494][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:AcctTp]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.501][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ETRX.MRCHNT_NO, ETRX.MRCHNT_NM, ETRX.MRCHNT_FLAG FROM MRCHNT ETRX WHERE ETRX.MRCHNT_FLAG = ? [EntityFindBuilder.class]
[15:58:18.502][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ETRX.MRCHNT_NO, ETRX.MRCHNT_NM, ETRX.MRCHNT_FLAG FROM MRCHNT ETRX WHERE ETRX.MRCHNT_FLAG = ?] and parameters [[mrchntFlag:ENABLED]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.506][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, SUB_MRCHNT_LEVEL, SUB_MRCHNT_ST, SIGN_FLAG, SUB_MRCHNT_VALISIGN, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM SUB_MRCHNT [EntityFindBuilder.class]
[15:58:18.507][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, SUB_MRCHNT_LEVEL, SUB_MRCHNT_ST, SIGN_FLAG, SUB_MRCHNT_VALISIGN, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM SUB_MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.510][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.510][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查找, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.511][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.512][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查找, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.513][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.513][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查找, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.515][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.516][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台流水号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.516][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.521][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台流水号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.522][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.522][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台流水号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.527][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.528][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户流水号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.528][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.529][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户流水号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.531][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.532][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户流水号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.534][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.535][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工作日期, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.535][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.536][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工作日期, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.537][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.538][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工作日期, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.542][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.543][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:From, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.544][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.545][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Thru, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.547][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.548][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账日期, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.549][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.549][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账日期, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.550][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.550][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对账日期, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.554][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.554][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道流水号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.555][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.555][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道流水号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.556][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.556][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道流水号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.564][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.564][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:订单号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.565][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.565][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:订单号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.566][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.567][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:订单号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.570][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.570][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:账户类型, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.571][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.571][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:账户类型, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.572][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.572][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:账户类型, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.589][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.590][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000001, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.590][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.590][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000001, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.591][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.591][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000001, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.593][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.593][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行借记账户, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.593][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.594][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行借记账户, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.594][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.595][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行借记账户, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.595][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.596][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000002, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.596][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.597][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000002, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.597][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.604][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000002, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.604][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.604][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行贷记账户, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.605][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.605][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行贷记账户, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.606][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.606][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行贷记账户, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.607][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.607][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000003, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.608][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.608][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000003, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.608][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.609][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000003, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.609][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.609][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行准贷记账户, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.610][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.610][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行准贷记账户, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.611][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.611][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人银行准贷记账户, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.612][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.613][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000004, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.613][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.614][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000004, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.614][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.615][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000004, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.615][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.615][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人支付账户, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.616][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.616][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人支付账户, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.617][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.617][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:个人支付账户, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.618][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.618][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000005, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.619][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.619][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000005, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.619][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.620][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000005, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.620][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.620][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单位支付账户, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.621][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.621][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单位支付账户, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.622][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.622][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:单位支付账户, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.623][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.623][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000006, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.624][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.624][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000006, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.624][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.625][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000006, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.625][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.625][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对公银行账户, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.626][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.627][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对公银行账户, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.627][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.628][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:对公银行账户, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.628][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.628][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000007, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.629][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.629][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000007, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.630][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.630][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000007, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.630][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.631][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:备付金账户, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.631][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.631][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:备付金账户, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.634][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.634][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:备付金账户, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.635][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.636][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000008, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.636][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.636][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000008, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.637][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.637][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:0000008, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.638][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.638][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:存折, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.638][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.638][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:存折, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.639][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.639][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:存折, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.642][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.642][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易类别, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.642][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.643][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易类别, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.643][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.644][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易类别, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.657][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.658][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000501, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.658][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.658][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000501, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.659][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.659][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000501, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.660][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.660][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代收, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.660][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.660][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代收, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.661][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.661][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代收, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.662][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.662][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000401, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.662][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.666][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000401, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.666][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.677][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000401, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.677][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.678][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代付, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.679][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.679][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代付, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.680][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.680][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:代付, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.681][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.682][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.683][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.683][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.683][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.684][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.696][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.697][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.698][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.701][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.701][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.701][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.702][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.703][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理成功, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.703][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.704][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理成功, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.704][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.704][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理成功, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.719][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.720][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.720][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.721][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.722][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.722][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.723][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.723][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已拒绝, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.725][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.725][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已拒绝, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.726][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.726][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已拒绝, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.727][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.728][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.728][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.729][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.729][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.730][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:BUI_STATUS3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.730][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.731][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理超时, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.731][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.732][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理超时, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.732][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.733][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理超时, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.734][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.735][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.735][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.736][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.737][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.737][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.754][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.756][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.756][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.757][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.757][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.757][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.758][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.758][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.758][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.759][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.759][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.759][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.760][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.760][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.760][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.761][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.762][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.762][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:PAY_STATUS3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.763][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.763][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:状态未明, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.763][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.763][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:状态未明, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.764][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.765][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:状态未明, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.767][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.767][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.768][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.768][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.768][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.768][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.784][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.785][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:ACCT_TRANS_SUCCESS, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.785][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.786][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:ACCT_TRANS_SUCCESS, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.786][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.787][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:ACCT_TRANS_SUCCESS, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.787][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.787][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账成功, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.788][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.788][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账成功, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.789][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.789][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账成功, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.789][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.790][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:CANCEL_TRANS_SUCCESS, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.790][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.791][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:CANCEL_TRANS_SUCCESS, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.791][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.792][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:CANCEL_TRANS_SUCCESS, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.793][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.793][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:冲正成功, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.794][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.794][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:冲正成功, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.795][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.795][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:冲正成功, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.796][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.796][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:ACCT_TRANS_FAIL, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.796][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.798][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:ACCT_TRANS_FAIL, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.799][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.799][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:ACCT_TRANS_FAIL, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.800][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.800][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账失败, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.800][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.801][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账失败, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.801][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.802][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:记账失败, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.802][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.802][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:FIND_TRANS_UNKNOW, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.803][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.803][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:FIND_TRANS_UNKNOW, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.804][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.804][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:FIND_TRANS_UNKNOW, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.804][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.805][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询不明, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.805][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.806][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询不明, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.807][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.807][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:查询不明, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.808][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.808][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:HOLD_TRANS_BEEN, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.809][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.809][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:HOLD_TRANS_BEEN, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.809][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.810][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:HOLD_TRANS_BEEN, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.810][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.810][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已挂账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.810][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.811][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已挂账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.811][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.812][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已挂账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.813][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.814][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心记账日期, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.814][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.814][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心记账日期, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.815][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.815][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心记账日期, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.816][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.817][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心记账流水号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.817][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.817][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心记账流水号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.818][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.818][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:核心记账流水号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.820][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.820][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:客户号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.820][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.821][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:客户号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.821][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.821][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:客户号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.823][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.824][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.824][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.824][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.825][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.825][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.826][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT [EntityFindBuilder.class]
[15:58:18.828][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.850][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.851][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo} - ${mrchntNm}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.854][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.855][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo} - ${mrchntNm}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.855][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.856][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo} - ${mrchntNm}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.875][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.875][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:子商户编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.876][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.877][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:子商户编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.878][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.878][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:子商户编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.909][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.909][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${subMrchntNo} - ${subMrchntNm}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.910][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.910][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${subMrchntNo} - ${subMrchntNm}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.910][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.911][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${subMrchntNo} - ${subMrchntNm}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.929][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.929][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.930][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.930][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.930][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.931][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:支付通道编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.932][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:58:18.932][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.933][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.933][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo} - ${channelNm}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.933][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.934][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo} - ${channelNm}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.934][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.934][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${channelNo} - ${channelNm}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.955][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.955][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.956][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.957][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.957][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.957][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.977][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.977][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_DOING, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.981][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.981][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_DOING, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.982][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.982][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_DOING, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.983][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.983][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约中, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.984][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.984][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约中, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.985][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.985][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约中, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.986][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.986][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_DOING, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.986][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.987][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_DOING, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.987][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.988][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_DOING, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.988][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.992][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约中, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:18.993][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:18.993][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约中, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.001][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.001][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约中, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.002][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.003][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_SUCCESS, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.003][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.003][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_SUCCESS, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.004][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.004][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_SUCCESS, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.004][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.005][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约成功, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.005][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.006][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约成功, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.006][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.007][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约成功, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.007][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.008][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_SUCCESS, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.008][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.009][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_SUCCESS, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.009][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.009][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_SUCCESS, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.010][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.011][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约成功, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.011][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.012][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约成功, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.012][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.013][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约成功, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.014][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.014][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_FAIL, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.015][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.015][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_FAIL, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.016][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.016][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:SIGN_FAIL, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.016][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.018][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约失败, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.019][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.019][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约失败, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.019][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.020][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:签约失败, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.020][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.021][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_FAIL, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.021][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.022][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_FAIL, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.022][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.023][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TERMINATION_FAIL, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.023][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.024][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约失败, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.024][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.025][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约失败, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.026][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.026][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:解约失败, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.028][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.030][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台处理状态, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.031][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.031][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台处理状态, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.032][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.032][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台处理状态, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.050][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.051][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_SUCCESS, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.052][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.053][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_SUCCESS, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.055][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.055][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_SUCCESS, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.056][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.057][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:成功, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.058][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.058][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:成功, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.059][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.060][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:成功, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.061][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.061][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_UNKNOW, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.062][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.062][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_UNKNOW, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.063][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.063][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_UNKNOW, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.063][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.063][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易未明, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.064][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.064][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易未明, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.064][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.064][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易未明, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.065][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.065][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_FAIL, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.066][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.066][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_FAIL, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.067][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.067][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_FAIL, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.068][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.068][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:失败, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.068][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.069][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:失败, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.069][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.070][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:失败, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.071][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.072][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_BEEN, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.072][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.073][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_BEEN, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.073][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.073][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_BEEN, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.074][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.074][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已对账, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.074][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.074][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已对账, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.075][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.075][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已对账, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.076][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.077][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_DONE, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.077][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.078][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_DONE, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.078][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.079][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.StatusItem, pkValue:TX_STATU_DONE, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.079][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.079][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已受理, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.080][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.080][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已受理, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.080][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.081][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:已受理, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.082][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.083][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:请求时间, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.083][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.083][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:请求时间, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.084][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.084][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:请求时间, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.085][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.086][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:请求日期, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.086][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.086][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:请求日期, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.087][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.087][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:请求日期, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.089][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.089][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:客户编号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.090][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.090][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:客户编号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.091][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.091][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:客户编号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.095][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.096][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.096][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.097][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.097][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.097][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.099][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.099][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:手续费金额, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.100][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.100][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:手续费金额, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.100][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.101][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:手续费金额, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.102][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.103][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收款人账号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.103][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.103][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收款人账号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.103][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.104][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收款人账号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.106][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.106][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收款人姓名, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.106][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.107][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收款人姓名, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.107][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.107][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:收款人姓名, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.109][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.109][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:付款人账号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.109][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.110][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:付款人账号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.110][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.111][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:付款人账号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.114][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.114][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:付款人姓名, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.115][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.115][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:付款人姓名, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.115][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.116][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:付款人姓名, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.117][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.117][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:证件类型, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.118][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.118][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:证件类型, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.119][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.119][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:证件类型, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.134][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.135][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.136][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.136][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.137][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.137][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:000, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.138][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.138][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:身份证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.138][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.139][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:身份证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.139][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.139][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:身份证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.140][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.140][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:001, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.140][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.141][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:001, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.141][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.142][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:001, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.142][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.142][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:护照, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.143][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.143][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:护照, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.143][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.145][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:护照, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.146][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.147][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:002, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.147][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.148][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:002, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.148][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.149][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:002, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.149][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.149][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:军人证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.150][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.150][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:军人证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.150][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.151][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:军人证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.151][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.152][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:003, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.152][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.154][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:003, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.154][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.155][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:003, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.156][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.156][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:户口簿, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.157][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.157][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:户口簿, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.158][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.159][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:户口簿, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.159][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.160][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:004, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.161][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.161][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:004, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.161][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.162][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:004, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.162][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.162][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:武警证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.163][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.163][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:武警证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.163][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.164][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:武警证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.164][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.164][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:005, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.165][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.165][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:005, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.166][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.166][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:005, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.166][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.166][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:法人营业执照, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.167][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.167][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:法人营业执照, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.167][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.168][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:法人营业执照, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.168][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.169][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:006, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.169][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.169][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:006, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.170][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.170][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:006, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.170][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.171][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:港澳通行证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.171][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.171][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:港澳通行证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.172][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.172][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:港澳通行证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.172][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.173][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:007, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.173][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.173][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:007, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.174][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.174][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:007, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.177][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.177][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:台湾通行证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.177][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.178][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:台湾通行证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.178][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.178][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:台湾通行证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.179][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.179][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:008, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.179][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.180][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:008, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.180][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.180][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:008, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.180][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.181][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:学生证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.181][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.181][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:学生证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.187][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.188][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:学生证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.188][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.189][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:009, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.189][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.189][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:009, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.190][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.190][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:009, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.190][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.190][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工作证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.191][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.191][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工作证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.191][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.191][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工作证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.192][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.195][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:010, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.195][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.195][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:010, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.196][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.196][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:010, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.197][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.198][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工商执照, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.198][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.198][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工商执照, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.199][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.199][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:工商执照, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.199][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.200][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:011, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.200][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.200][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:011, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.200][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.201][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:011, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.201][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.201][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:警官证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.201][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.202][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:警官证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.202][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.202][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:警官证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.203][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.203][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:012, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.204][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.204][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:012, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.204][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.204][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:012, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.205][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.205][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:事业单位编码, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.205][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.206][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:事业单位编码, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.206][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.206][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:事业单位编码, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.206][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.207][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:013, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.207][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.207][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:013, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.208][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.208][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:013, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.208][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.208][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:房产证, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.209][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.209][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:房产证, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.209][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.209][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:房产证, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.210][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.210][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:051, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.210][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.211][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:051, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.211][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.217][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:051, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.217][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.217][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:组织机构编码, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.218][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.218][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:组织机构编码, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.218][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.219][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:组织机构编码, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.219][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.219][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:099, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.220][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.220][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:099, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.220][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.221][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:099, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.221][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.221][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:其它证件, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.221][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.222][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:其它证件, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.222][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.222][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:其它证件, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.224][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.224][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:证件号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.224][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.225][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:证件号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.225][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.225][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:证件号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.227][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.227][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:批次号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.228][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.228][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:批次号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.228][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.228][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:批次号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.229][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.230][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台批次号, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.230][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.231][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台批次号, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.232][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.237][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台批次号, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.238][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.238][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Find, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.238][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.239][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Find, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.240][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.240][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:返回, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.241][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.241][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:返回, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.241][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.241][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:返回, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.279][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.279][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Find Options, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.280][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.281][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Saved Finds, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.282][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.282][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Description, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.283][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.283][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Description, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.297][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.298][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Save New Find, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.318][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.318][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Find Parameters, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.319][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.319][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Clear Parameters, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.320][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.320][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Order By, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.322][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.322][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:(Asc), locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.322][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.322][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:(Asc), locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.323][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.323][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:(Asc), locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.323][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.323][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:(Desc), locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.323][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.324][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:(Desc), locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.324][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.324][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:(Desc), locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.328][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.328][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理结果信息, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.328][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.329][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理结果信息, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.329][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.329][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:处理结果信息, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.331][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.331][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台处理结果信息, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.331][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.332][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台处理结果信息, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.332][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.334][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:平台处理结果信息, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.340][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.340][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易备注, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.340][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.340][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易备注, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.341][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.341][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:交易备注, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.350][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.351][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:摘要, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.351][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.353][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:摘要, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.354][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.354][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:摘要, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.412][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT [EntityFindBuilder.class]
[15:58:19.413][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.431][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:58:19.431][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.434][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.435][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${statusId}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.435][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.436][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${statusId}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.437][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.437][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${statusId}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.449][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.449][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Column Fields, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.450][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.450][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Drag fields to the desired column or do not display, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.451][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.451][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Do Not Display, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.456][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.456][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Column, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.458][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.459][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Info, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.459][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.459][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Info, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.460][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.460][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Info, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.464][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.465][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Save Columns, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.465][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.466][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Reset to Default, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.467][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.467][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export Fixed-Width Plain Text, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.467][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.467][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export Fixed-Width Plain Text, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.468][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.468][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export Fixed-Width Plain Text, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.471][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.471][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Line Characters, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.471][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.472][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Line Characters, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.472][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.472][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Line Characters, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.473][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.473][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Page Lines, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.473][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.474][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Page Lines, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.474][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.474][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Page Lines, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.474][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.475][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Line Wrap?, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.475][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.475][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Line Wrap?, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.502][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.502][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Line Wrap?, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.504][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.504][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Save to Filename, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.505][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.505][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Save to Filename, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.505][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.505][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Save to Filename, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.506][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.506][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export Text, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.507][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.507][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export Text, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.507][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.507][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Export Text, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.508][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.508][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Generate PDF, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.508][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.508][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Generate PDF, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.509][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.515][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Generate PDF, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.517][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.518][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Page Layout, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.518][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.518][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Page Layout, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.518][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.519][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Page Layout, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.520][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.520][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Columns, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.521][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.521][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:CSV, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.522][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.522][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:CSV, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.522][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.522][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:CSV, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.523][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.523][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Text, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.523][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.524][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Text, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.524][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.525][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Text, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.525][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.525][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:PDF, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.526][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.526][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:PDF, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.526][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[15:58:19.527][DEBUG](qtp379110473-13) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:PDF, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.535][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT [EntityFindBuilder.class]
[15:58:19.535][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.544][DEBUG](qtp379110473-13) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[15:58:19.545][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:19.561][INFO ](qtp379110473-13) apps/nacs-admin/QuiryStatistics/TxItem [] in 1691ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:58:22.519][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:58:22.521][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:22.521][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:58:22.522][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:34.912][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE WORK_DATE >= ? ORDER BY WORK_DATE DESC NULLS LAST [EntityFindBuilder.class]
[15:58:34.913][DEBUG](qtp379110473-12) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE WORK_DATE >= ? ORDER BY WORK_DATE DESC NULLS LAST] and parameters [[workDate:2018-04-10]] in [0] seconds [EntityQueryBuilder.class]
[15:58:34.917][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL [EntityFindBuilder.class]
[15:58:34.918][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ECHANNEL.CHANNEL_NO, ECHANNEL.CHANNEL_NM FROM CHANNEL ECHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:34.918][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT ETRX.MRCHNT_NO, ETRX.MRCHNT_NM, ETRX.MRCHNT_FLAG FROM MRCHNT ETRX WHERE ETRX.MRCHNT_FLAG = ? [EntityFindBuilder.class]
[15:58:34.919][DEBUG](qtp379110473-12) Executed query with SQL [SELECT ETRX.MRCHNT_NO, ETRX.MRCHNT_NM, ETRX.MRCHNT_FLAG FROM MRCHNT ETRX WHERE ETRX.MRCHNT_FLAG = ?] and parameters [[mrchntFlag:ENABLED]] in [0] seconds [EntityQueryBuilder.class]
[15:58:34.919][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, SUB_MRCHNT_LEVEL, SUB_MRCHNT_ST, SIGN_FLAG, SUB_MRCHNT_VALISIGN, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM SUB_MRCHNT [EntityFindBuilder.class]
[15:58:34.919][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SEQ_ID, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, SUB_MRCHNT_LEVEL, SUB_MRCHNT_ST, SIGN_FLAG, SUB_MRCHNT_VALISIGN, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM SUB_MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[15:58:34.947][INFO ](qtp379110473-12) apps/nacs-admin/QuiryStatistics/TxItem [renderMode:csv, saveFilename:ListTxItem.csv, pageNoLimit:true, workDate_from:2018-04-10, lastStandalone:] in 81ms (text/csv;charset=GBK) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[15:58:37.519][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[15:58:37.526][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[15:58:41.365][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:58:41.366][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:58:41.367][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:58:41.368][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:58:41.371][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:58:41.371][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:59:41.367][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:59:41.367][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[15:59:41.369][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:59:41.370][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[15:59:41.373][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[15:59:41.373][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:00:41.374][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:00:41.376][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:00:41.383][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:00:41.385][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:00:41.392][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:00:41.392][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:01:41.389][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:01:41.390][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:01:41.393][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:01:41.394][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:01:41.395][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:01:41.395][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:02:41.379][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:02:41.379][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:02:41.380][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:02:41.381][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:02:41.382][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:02:41.382][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.376][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:03:41.376][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.378][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:03:41.378][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:03:41.381][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:03:41.382][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:04:41.378][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:04:41.381][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:04:41.383][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:04:41.384][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:04:41.386][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:04:41.386][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:05:41.379][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:05:41.380][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:05:41.382][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:05:41.382][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:05:41.384][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:05:41.384][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:06:41.384][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:06:41.384][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:06:41.386][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:06:41.387][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:06:41.389][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:06:41.391][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:07:41.384][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:07:41.385][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:07:41.386][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:07:41.386][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:07:41.388][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:07:41.388][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:08:41.386][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:08:41.387][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:08:41.388][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:08:41.389][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:08:41.390][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:08:41.390][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:09:41.389][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:09:41.390][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:09:41.391][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:09:41.392][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:09:41.393][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:09:41.394][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:10:41.399][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:10:41.404][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:10:41.408][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:10:41.409][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:10:41.412][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:10:41.414][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.server.ArtifactHitBin]] in [0] seconds [EntityQueryBuilder.class]
[16:10:41.414][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[16:10:41.414][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[16:10:41.414][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[16:10:41.414][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[16:10:41.415][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:10:41.415][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[16:10:41.415][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[16:10:41.415][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[16:10:41.415][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[16:10:41.415][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[16:10:41.415][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[16:10:41.415][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[16:10:41.416][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101110, lastUpdatedStamp:2018-04-10 01:10:41.412, seqName:moqui.server.ArtifactHitBin]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:41.416][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[16:10:41.416][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[16:10:41.416][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[16:10:41.416][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[16:10:41.417][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:10:41.420][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:10:41.425][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:41.425][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:10:41.427][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:10:41.429][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:11:41.394][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:11:41.395][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:11:41.397][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:11:41.402][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:11:41.409][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:11:41.410][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:12:08.817][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:08.821][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:08.821][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:08.822][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:08.823][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:08.823][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:08.854][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:08.854][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:08.879][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:08.880][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:08.999][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:09.000][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:09.011][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:09.012][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:09.103][INFO ](qtp379110473-12) Found entities in 20 files in 40ms [EntityFacadeImpl.class]
[16:12:09.103][INFO ](qtp379110473-12) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[16:12:09.105][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:12:09.105][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:12:09.107][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:09.107][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:12:09.107][DEBUG](qtp379110473-12) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:12:09.109][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:09.114][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:09.121][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:09.268][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:09.268][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:09.269][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:09.270][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:09.284][INFO ](qtp379110473-12) apps/nacs-admin/Channel/ChannelList [] in 222ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:12:09.286][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:09.287][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:12.550][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:12.551][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:12.554][DEBUG](pool-2-thread-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:12.557][DEBUG](pool-2-thread-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:25.447][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:12:25.448][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:12:25.449][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:12:25.449][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:12:25.615][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:25.616][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:25.616][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:25.617][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:25.620][INFO ](qtp379110473-18) apps/nacs-admin/Channel/ChannelList [] in 209ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:12:27.549][DEBUG](pool-2-thread-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:27.550][DEBUG](pool-2-thread-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:39.951][INFO ](qtp379110473-13) 更 [EntityValueBase.class]
[16:12:39.952][INFO ](qtp379110473-13) 更1 [EntityValueBase.class]
[16:12:39.952][INFO ](qtp379110473-13) 更2 [EntityValueBase.class]
[16:12:39.952][INFO ](qtp379110473-13) 更3 [EntityValueBase.class]
[16:12:39.952][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL WHERE SEQ_ID=? [EntityQueryBuilder.class]
[16:12:39.952][DEBUG](qtp379110473-13) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL WHERE SEQ_ID=?] and parameters [[seqId:100153]] in [0] seconds [EntityQueryBuilder.class]
[16:12:39.956][INFO ](qtp379110473-13) 更4 [EntityValueBase.class]
[16:12:39.956][INFO ](qtp379110473-13) 更5 [EntityValueBase.class]
[16:12:39.956][INFO ](qtp379110473-13) 更5.5 [EntityValueBase.class]
[16:12:39.956][INFO ](qtp379110473-13) 更9 [EntityValueBase.class]
[16:12:39.956][INFO ](qtp379110473-13) 更10 [EntityValueBase.class]
[16:12:39.956][INFO ](qtp379110473-13) 更11 [EntityValueBase.class]
[16:12:39.956][INFO ](qtp379110473-13) 打SQL！ [EntityValueImpl.class]
[16:12:39.956][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: UPDATE CHANNEL SET AMT=?, LAST_UPDATED_STAMP=? WHERE SEQ_ID=? [EntityQueryBuilder.class]
[16:12:39.957][DEBUG](qtp379110473-13) Executed update with SQL [UPDATE CHANNEL SET AMT=?, LAST_UPDATED_STAMP=? WHERE SEQ_ID=?] and parameters [[amt:12, lastUpdatedStamp:2018-04-10 01:12:39.833, seqId:100153]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:39.958][INFO ](qtp379110473-13) 更12 [EntityValueBase.class]
[16:12:39.958][INFO ](qtp379110473-13) 更13 [EntityValueBase.class]
[16:12:39.960][DEBUG](qtp379110473-13) making crud PreparedStatement for SQL: INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, OLD_VALUE_TEXT, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:39.965][DEBUG](qtp379110473-13) Executed update with SQL [INSERT INTO ENTITY_AUDIT_LOG (AUDIT_HISTORY_SEQ_ID, CHANGED_ENTITY_NAME, CHANGED_FIELD_NAME, PK_PRIMARY_VALUE, OLD_VALUE_TEXT, NEW_VALUE_TEXT, CHANGED_DATE, CHANGED_BY_USER_ID, CHANGED_IN_VISIT_ID, ARTIFACT_STACK, URL, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:39.965][INFO ](qtp379110473-13) 更7 [EntityValueBase.class]
[16:12:39.965][INFO ](qtp379110473-13) 更8 [EntityValueBase.class]
[16:12:40.042][INFO ](qtp379110473-13) Created 28 automatic reverse relationships [EntityFacadeImpl.class]
[16:12:40.047][INFO ](qtp379110473-13) Transition apps/nacs-admin/Channel/ChannelList/updateChannel in 256ms, JSON redirect to: /apps/nacs-admin/Channel/ChannelList?pageIndex=0 [ScreenRenderImpl.class]
[16:12:40.051][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:40.057][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:40.059][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:40.059][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:40.202][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:12:40.203][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:12:40.203][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:12:40.203][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:12:40.327][INFO ](qtp379110473-18) apps/nacs-admin/Channel/ChannelList [pageIndex:0] in 126ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:12:41.395][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:12:41.396][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:12:41.398][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:12:41.398][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:12:41.399][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:12:41.400][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:12:42.550][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:42.551][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:42.551][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:42.553][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:42.554][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:42.555][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:12:42.555][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:12:42.556][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:27.556][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:13:27.558][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:27.679][INFO ](qtp379110473-12) apps/nacs-admin/Route [] in 162ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:13:27.822][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT ORDER BY 1 OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:13:27.822][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT ORDER BY 1 OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.823][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM MRCHNT [EntityFindBuilder.class]
[16:13:27.823][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.825][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ? [EntityFindBuilder.class]
[16:13:27.826][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_TYPE_ID = ?] and parameters [[enumTypeId:Version]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.827][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ETRX.MRCHNT_NO, ETRX.MRCHNT_NM, ETRX.MRCHNT_FLAG FROM MRCHNT ETRX WHERE ETRX.MRCHNT_FLAG = ? [EntityFindBuilder.class]
[16:13:27.828][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ETRX.MRCHNT_NO, ETRX.MRCHNT_NM, ETRX.MRCHNT_FLAG FROM MRCHNT ETRX WHERE ETRX.MRCHNT_FLAG = ?] and parameters [[mrchntFlag:ENABLED]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.829][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:13:27.830][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:27.851][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.852][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo}-${mrchntNm}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.852][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.853][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo}-${mrchntNm}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.853][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.853][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo}-${mrchntNm}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.871][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.871][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户启用标志, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.872][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.872][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户启用标志, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.872][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.872][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户启用标志, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.887][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.887][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:运行开启时间, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.887][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.888][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:运行开启时间, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.889][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.889][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:运行开启时间, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.890][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.890][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.890][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.891][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.891][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.891][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:00:00, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.892][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.893][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:运行关闭时间, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.893][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.894][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:运行关闭时间, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.895][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.895][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:运行关闭时间, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.896][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.896][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:协议版本, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.897][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.897][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:协议版本, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.897][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.898][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:协议版本, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.912][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.913][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:1.0, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.914][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.914][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:1.0, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.914][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.915][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:1.0, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.915][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.916][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:1.0, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.916][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.916][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:1.0, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.916][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.917][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:1.0, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.917][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.918][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:2.0, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.918][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.918][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:2.0, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.919][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.919][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENTITY_NAME, FIELD_NAME, PK_VALUE, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_ENTITY_FIELD WHERE (FIELD_NAME = ? AND ENTITY_NAME = ? AND PK_VALUE = ? AND LOCALE = ?)] and parameters [[fieldName:description, entityName:moqui.basic.Enumeration, pkValue:2.0, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.919][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.920][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:2.0, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.920][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.920][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:2.0, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.920][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.921][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:2.0, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.943][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.944][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户名称, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.944][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.944][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户名称, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.945][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.945][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户名称, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.946][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.947][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo}, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.948][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.951][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo}, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.952][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:27.952][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:${mrchntNo}, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.960][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:13:27.961][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://nacs-route/screen/NacsRoute/RouteDetail.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:13:27.962][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:13:27.963][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:28.011][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ? [EntityFindBuilder.class]
[16:13:28.012][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ENUM_ID, ENUM_TYPE_ID, PARENT_ENUM_ID, ENUM_CODE, SEQUENCE_NUM, DESCRIPTION, OPTION_VALUE, RELATED_ENUM_ID, LAST_UPDATED_STAMP FROM ENUMERATION WHERE ENUM_ID = ?] and parameters [[enumId:ENABLED]] in [0] seconds [EntityQueryBuilder.class]
[16:13:28.015][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:28.016][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:设置, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:28.016][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:28.017][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:设置, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:13:28.017][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:28.018][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:设置, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:13:28.018][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:13:28.020][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:28.117][INFO ](qtp379110473-18) apps/nacs-admin/Route/RouteList [] in 412ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:13:30.507][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:13:30.507][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:13:30.508][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:13:30.508][DEBUG](qtp379110473-12) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:13:30.521][INFO ](qtp379110473-12) apps/nacs-admin/Channel/ChannelList [] in 15ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:13:32.554][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:13:32.555][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:32.555][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:13:32.555][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:32.556][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:13:32.556][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:32.557][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:13:32.557][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:13:41.399][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:13:41.400][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:13:41.401][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:13:41.401][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:13:41.406][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:13:41.406][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:13:59.188][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ? [EntityFindBuilder.class]
[16:13:59.189][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SCREEN_LOCATION, SUBSCREEN_NAME, USER_GROUP_ID, SUBSCREEN_LOCATION, MENU_TITLE, MENU_INDEX, MENU_INCLUDE, MAKE_DEFAULT, LAST_UPDATED_STAMP FROM SUBSCREENS_ITEM WHERE SCREEN_LOCATION = ?] and parameters [[screenLocation:component://webroot/screen/webroot/apps/AppList.xml]] in [0] seconds [EntityQueryBuilder.class]
[16:13:59.237][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:59.238][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:App List, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:59.396][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:13:59.397][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Choose an Application, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:13:59.557][INFO ](qtp379110473-18) apps/AppList [] in 306ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:14:02.553][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:14:02.554][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:02.554][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:14:02.555][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:03.988][INFO ](qtp379110473-13) apps/AppList [] in 15ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:14:07.553][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:14:07.554][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:09.424][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:14:09.425][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.441][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (CHANNEL_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:09.442][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (CHANNEL_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[channelSeqId:100153, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.444][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (CHANNEL_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:09.445][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (CHANNEL_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[channelSeqId:100153, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.537][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.537][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.538][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.538][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.538][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.539][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.551][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.552][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.552][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.552][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.553][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.553][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.568][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.569][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.569][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.570][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.570][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.571][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.583][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.584][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代收交易统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.585][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.585][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代收交易统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.585][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.586][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代收交易统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.587][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.587][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${ss11}元  总笔数：${c11}笔, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.588][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.588][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${ss11}元  总笔数：${c11}笔, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.589][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.590][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${ss11}元  总笔数：${c11}笔, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.973][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL [EntityFindBuilder.class]
[16:14:09.974][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.976][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (CHANNEL_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:09.977][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (CHANNEL_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[channelSeqId:100153, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.979][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (CHANNEL_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:09.980][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (CHANNEL_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[channelSeqId:100153, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.986][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.988][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.988][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.989][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:09.989][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:09.990][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Channel Name2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.002][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.003][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.003][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.004][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.004][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.005][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.017][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.017][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum2, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.018][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.018][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum2, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.018][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.019][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum2, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.030][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.031][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代付交易统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.031][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.032][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代付交易统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.032][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.033][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:通道代付交易统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.033][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.034][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s22}元  总笔数：${c22}笔, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.034][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.035][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s22}元  总笔数：${c22}笔, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.035][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.035][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s22}元  总笔数：${c22}笔, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.469][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT [EntityFindBuilder.class]
[16:14:10.470][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.472][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.473][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100051, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.474][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.476][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100051, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.477][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.478][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100052, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.478][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.479][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100052, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.480][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.481][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100053, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.481][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.482][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100053, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.484][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.484][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100054, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.485][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.485][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100054, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.489][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.490][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100055, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.490][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.491][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100055, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.492][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.493][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100056, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.493][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:10.494][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100056, trxCtgy:000501, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.507][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.507][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name1, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.508][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.508][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name1, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.509][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.509][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name1, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.520][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.520][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.521][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.521][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.521][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.522][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.535][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.535][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum3, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.535][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.536][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum3, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.536][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.536][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum3, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.546][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.546][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代收交易统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.546][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.547][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代收交易统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.548][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.548][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代收交易统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.549][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.549][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s33}元  总笔数：${c33}笔, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.549][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.549][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s33}元  总笔数：${c33}笔, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:10.550][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:10.550][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s33}元  总笔数：${c33}笔, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.095][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT [EntityFindBuilder.class]
[16:14:11.095][DEBUG](qtp379110473-18) Executed query with SQL [SELECT SEQ_ID, MRCHNT_NO, MRCHNT_NM, VERSION, MRCHNT_ST, MRCHNT_FLAG, SUB_MRCHNT_FLAG, MRCHNT_BEGIN_TIME, MRCHNT_END_TIME, MANAGER_INSTI_CODE, MANAGER_INSTI_NAME, MARGIN_FORMATION, MARGIN_AMT, CLEAR_ACCOUNT_MSG, CLEAR_ACCOUNT_NAME, BEHALF_ACCOUNT, WHITOUT_ACCOUNT, VI_DATE, FROZEN_LIMIT, ZD_FROZEN_LIMIT, ADD_FROZEN_LIMIT, OVERDRAFT_LIMIT, MRCHNT_VER_IFYSTS, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM MRCHNT] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.101][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.115][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100051, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.119][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.129][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100051, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.134][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.134][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100052, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.135][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.139][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100052, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.143][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.144][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100053, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.150][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.151][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100053, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.152][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.153][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100054, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.153][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.154][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100054, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.155][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.155][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100055, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.157][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.158][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100055, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.159][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.159][DEBUG](qtp379110473-18) Executed query with SQL [SELECT COUNT(*)  FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100056, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.160][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?) [EntityFindBuilder.class]
[16:14:11.162][DEBUG](qtp379110473-18) Executed query with SQL [SELECT NACS_TX_ID, WORK_DATE, CHECK_DATE, BUI_TX_ID, PAY_TX_ID, ORDER_ID, ACCOUNT_TYPE, TRX_CTGY, BUI_STATUS, PAY_STATUS, CORE_STATUS, CORE_ACCT_FLAG, ACCT_DATE, ACCT_SEQ, CUSTOMER_NO, COMPANY_NO, COMPANY_NO_NAME, MRCHNT_SEQ_ID, SUB_MRCHNT_NO, SUB_MRCHNT_NM, CHANNEL_SEQ_ID, TRAN_STAS, TRAN_DESC, TX_STATU_ID, TX_STATU_DSC, REQ_TIME, REQ_DATE, CUST_CODE, TRS_MEMO, TRX_AMT, FEE_AMOUNT, PAYEE_ACCTNO, PAYEE_ACCT_NAME, PAYER_ACCTNO, PAYER_ACCT_NAME, CERT_CODE, CERT_NO, BATCH_NO, INNER_BATCH_NO, USE_REMARK, REMARKS1, REMARKS2, REMARKS3, LAST_UPDATED_STAMP FROM TX_ITEM WHERE (MRCHNT_SEQ_ID = ? AND TRX_CTGY = ? AND PAY_STATUS = ? AND BUI_STATUS = ? AND CORE_STATUS = ? AND TX_STATU_ID = ?)] and parameters [[mrchntSeqId:100056, trxCtgy:000401, payStatus:PAY_STATUS1, buiStatus:BUI_STATUS1, coreStatus:ACCT_TRANS_SUCCESS, txStatuId:TX_STATU_SUCCESS]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.173][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.174][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name4, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.174][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.174][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name4, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.174][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.175][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Mrchnt Name4, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.184][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.185][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count4, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.185][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.185][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count4, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.186][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.186][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Count4, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.199][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.200][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum4, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.200][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.200][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum4, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.201][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.201][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:Sum4, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.216][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.216][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代付交易统计, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.216][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.217][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代付交易统计, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.217][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.217][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:商户代付交易统计, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.218][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.218][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s44}元  总笔数：${c44}笔, locale:zh_CN]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.218][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.219][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s44}元  总笔数：${c44}笔, locale:zh]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.219][DEBUG](qtp379110473-18) making find PreparedStatement for SQL: SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?) [EntityFindBuilder.class]
[16:14:11.219][DEBUG](qtp379110473-18) Executed query with SQL [SELECT ORIGINAL, LOCALE, LOCALIZED, LAST_UPDATED_STAMP FROM LOCALIZED_MESSAGE WHERE (ORIGINAL = ? AND LOCALE = ?)] and parameters [[original:总金额：${s44}元  总笔数：${c44}笔, locale:default]] in [0] seconds [EntityQueryBuilder.class]
[16:14:11.238][INFO ](qtp379110473-18) apps/nacs-admin/dashboard [] in 2350ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:14:12.556][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:14:12.561][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:12.561][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:14:12.564][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:22.742][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY [EntityFindBuilder.class]
[16:14:22.743][DEBUG](qtp379110473-12) Executed query with SQL [SELECT SEQ_ID, CHANNEL_NO, CHANNEL_NM, CHANNEL_STATUS, FEE_TYPE, PERCENTAGE, AMT, REMARKS1, REMARKS2, REMARKS3, REMARKS4, REMARKS5, LAST_UPDATED_STAMP FROM CHANNEL ORDER BY CHANNEL_NO ASC NULLS LAST OFFSET 0 ROWS FETCH FIRST 20 ROWS ONLY] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:14:22.743][DEBUG](qtp379110473-12) making find PreparedStatement for SQL: SELECT COUNT(*)  FROM CHANNEL [EntityFindBuilder.class]
[16:14:22.743][DEBUG](qtp379110473-12) Executed query with SQL [SELECT COUNT(*)  FROM CHANNEL] and parameters [[]] in [0] seconds [EntityQueryBuilder.class]
[16:14:22.915][INFO ](qtp379110473-12) apps/nacs-admin/Channel/ChannelList [] in 174ms (text/html;charset=utf-8) session node0aylxrf3n1y3q1eez69h4fgk2w0 [ScreenRenderImpl.class]
[16:14:27.554][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:14:27.555][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:27.556][DEBUG](pool-2-thread-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:14:27.556][DEBUG](pool-2-thread-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT (HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, WAS_ERROR, REQUEST_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:14:41.401][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:14:41.401][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:14:41.402][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:14:41.402][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:14:41.403][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:14:41.404][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:15:41.401][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:15:41.402][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:15:41.403][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:15:41.404][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:15:41.405][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:15:41.406][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:16:41.404][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:16:41.405][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:16:41.406][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:16:41.407][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:16:41.408][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:16:41.409][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:17:41.406][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:17:41.407][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:17:41.408][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:17:41.409][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:17:41.410][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:17:41.410][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:18:41.409][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:18:41.410][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:18:41.412][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:18:41.413][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:18:41.414][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:18:41.414][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:19:41.411][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:19:41.412][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:19:41.414][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:19:41.415][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:19:41.416][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:19:41.417][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:20:41.413][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:20:41.414][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:20:41.415][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:20:41.415][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:20:41.417][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:20:41.417][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:21:41.415][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:21:41.416][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:21:41.417][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:21:41.417][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:21:41.418][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:21:41.419][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:22:32.956][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:22:32.958][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:22:32.962][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-10 01:22:32.955, lastUpdatedStamp:2018-04-10 01:22:32.956, visitId:100707]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:22:32.962][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:22:32.962][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:22:32.962][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:22:32.962][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:22:32.963][INFO ](Scheduler-990398217) Closed visit 100707 at 2018-04-10 01:22:32.955 for session node08p9bdr8gccxr1c8ueqikib1rg1 [MoquiSessionListener.class]
[16:22:32.963][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:22:32.963][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:22:32.963][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:22:32.964][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:22:32.964][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:22:32.964][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:22:32.964][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:22:32.964][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:22:32.964][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:22:32.964][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:22:32.964][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:22:32.965][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-10 01:22:32.963, lastUpdatedStamp:2018-04-10 01:22:32.963, visitId:100707]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:22:32.965][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:22:32.965][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:22:32.965][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:22:32.965][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:22:32.966][INFO ](Scheduler-990398217) Closed visit 100707 at 2018-04-10 01:22:32.963 for session node08p9bdr8gccxr1c8ueqikib1rg1 [MoquiSessionListener.class]
[16:22:41.419][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:22:41.420][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:22:41.421][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:22:41.421][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:22:41.422][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:22:41.423][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:23:41.421][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:23:41.422][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:23:41.427][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:23:41.428][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:23:41.430][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:23:41.430][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:24:41.422][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:24:41.423][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:24:41.424][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:24:41.424][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:24:41.425][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:24:41.426][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:25:41.424][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:25:41.426][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:25:41.426][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:25:41.428][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:25:41.429][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:25:41.429][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:25:41.429][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:25:41.430][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:25:41.432][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:25:41.433][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:26:41.427][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:26:41.428][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:26:41.429][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:26:41.430][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:26:41.431][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:26:41.432][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:27:41.429][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:27:41.430][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:27:41.431][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:27:41.431][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:27:41.432][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:27:41.433][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:28:41.431][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:28:41.432][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:28:41.433][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:28:41.433][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:28:41.434][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:28:41.435][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:29:41.433][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:29:41.434][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:29:41.435][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:29:41.435][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:29:41.436][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:29:41.437][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:30:41.435][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:30:41.436][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:30:41.437][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:30:41.437][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:30:41.439][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:30:41.440][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:31:41.437][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:31:41.438][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:31:41.440][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:31:41.446][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:31:41.450][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:31:41.450][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:32:32.998][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:32:32.998][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:32:32.999][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:32:32.999][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:32:32.999][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:32:32.999][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:32:32.999][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:32:33.003][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:32:33.003][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:32:33.003][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:32:33.003][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:32:33.004][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-10 01:32:32.997, lastUpdatedStamp:2018-04-10 01:32:32.998, visitId:100808]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:32:33.004][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:32:33.004][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:32:33.004][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:32:33.004][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:32:33.005][INFO ](Scheduler-990398217) Closed visit 100808 at 2018-04-10 01:32:32.997 for session node0l0uyqswh1o0gl2jh7hdm0b7m0 [MoquiSessionListener.class]
[16:32:33.005][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:32:33.006][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:32:33.006][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:32:33.007][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-10 01:32:33.005, lastUpdatedStamp:2018-04-10 01:32:33.005, visitId:100808]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:32:33.007][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:32:33.007][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:32:33.007][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:32:33.007][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:32:33.008][INFO ](Scheduler-990398217) Closed visit 100808 at 2018-04-10 01:32:33.005 for session node0l0uyqswh1o0gl2jh7hdm0b7m0 [MoquiSessionListener.class]
[16:32:41.441][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:32:41.442][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:32:41.457][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:32:41.461][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:32:41.462][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:32:41.463][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:33:41.443][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:33:41.446][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:33:41.452][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:33:41.457][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:33:41.459][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:33:41.460][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:34:41.445][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:34:41.447][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:34:41.448][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:34:41.449][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:34:41.451][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:34:41.452][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:35:41.447][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:35:41.447][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:35:41.449][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:35:41.449][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:35:41.450][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:35:41.451][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:36:41.449][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:36:41.450][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:36:41.451][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:36:41.451][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:36:41.452][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:36:41.453][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:37:41.451][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:37:41.452][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:37:41.453][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:37:41.453][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:37:41.454][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:37:41.454][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:38:41.453][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:38:41.454][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:38:41.455][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:38:41.455][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:38:41.456][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:38:41.457][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:39:41.455][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:39:41.456][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:39:41.457][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:39:41.458][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:39:41.459][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:39:41.460][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:40:41.457][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:40:41.458][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:40:41.458][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:40:41.461][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:40:41.462][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:40:41.463][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:40:41.463][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:40:41.465][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:40:41.464][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:40:41.466][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:41:41.460][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:41:41.465][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:41:41.466][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:41:41.466][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:41:41.468][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:41:41.468][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:42:41.462][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:42:41.463][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:42:41.464][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:42:41.465][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:42:41.466][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:42:41.467][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:43:41.465][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:43:41.466][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:43:41.467][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:43:41.468][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:43:41.469][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:43:41.470][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:44:41.467][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:44:41.467][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:44:41.469][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:44:41.470][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:44:41.471][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:44:41.472][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:45:41.468][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:45:41.471][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:45:41.473][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:45:41.474][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:45:41.476][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:45:41.477][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:46:41.471][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:46:41.472][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:46:41.473][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:46:41.474][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:46:41.475][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:46:41.476][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:47:41.473][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:47:41.474][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:47:41.476][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:47:41.476][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:47:41.493][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:47:41.493][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:48:41.476][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:48:41.477][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:48:41.478][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:48:41.479][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:48:41.480][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:48:41.481][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:49:41.477][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:49:41.478][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:49:41.479][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:49:41.479][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:49:41.480][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:49:41.480][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:50:41.480][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:50:41.481][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:50:41.482][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:50:41.482][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:50:41.483][DEBUG](pool-2-thread-3) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:50:41.483][DEBUG](pool-2-thread-3) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:51:41.482][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:51:41.483][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:51:41.484][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:51:41.484][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:51:41.485][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:51:41.486][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:52:33.073][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:52:33.075][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:52:33.075][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:52:33.075][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:52:33.075][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:52:33.075][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:52:33.075][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:52:33.075][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:52:33.076][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:52:33.076][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:52:33.077][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:52:33.080][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-10 01:52:33.073, lastUpdatedStamp:2018-04-10 01:52:33.073, visitId:100708]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:52:33.081][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:52:33.081][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:52:33.081][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:52:33.081][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:52:33.090][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:52:33.090][INFO ](Scheduler-990398217) Closed visit 100708 at 2018-04-10 01:52:33.073 for session node02e7b23m1xb09u6mpxsnrja9d0 [MoquiSessionListener.class]
[16:52:33.090][DEBUG](MoquiWorker-3) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更1 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更2 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更4 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更5 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更5.5 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更9 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更10 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 更11 [EntityValueBase.class]
[16:52:33.091][INFO ](Scheduler-990398217) 打SQL！ [EntityValueImpl.class]
[16:52:33.092][DEBUG](Scheduler-990398217) making crud PreparedStatement for SQL: UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=? [EntityQueryBuilder.class]
[16:52:33.092][DEBUG](Scheduler-990398217) Executed update with SQL [UPDATE VISIT SET THRU_DATE=?, LAST_UPDATED_STAMP=? WHERE VISIT_ID=?] and parameters [[thruDate:2018-04-10 01:52:33.09, lastUpdatedStamp:2018-04-10 01:52:33.09, visitId:100708]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:52:33.092][INFO ](Scheduler-990398217) 更12 [EntityValueBase.class]
[16:52:33.092][INFO ](Scheduler-990398217) 更13 [EntityValueBase.class]
[16:52:33.092][INFO ](Scheduler-990398217) 更7 [EntityValueBase.class]
[16:52:33.092][INFO ](Scheduler-990398217) 更8 [EntityValueBase.class]
[16:52:33.094][INFO ](Scheduler-990398217) Closed visit 100708 at 2018-04-10 01:52:33.09 for session node02e7b23m1xb09u6mpxsnrja9d0 [MoquiSessionListener.class]
[16:52:41.485][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:52:41.487][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:52:41.489][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:52:41.490][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:52:41.493][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:52:41.494][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:53:41.486][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:53:41.487][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:53:41.488][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:53:41.488][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:53:41.489][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:53:41.489][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:54:41.488][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:54:41.489][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:54:41.490][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:54:41.491][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:54:41.492][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:54:41.492][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:55:41.493][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:55:41.494][DEBUG](MoquiWorker-4) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:55:41.495][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:55:41.496][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:55:41.497][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:55:41.498][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:55:41.498][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:55:41.499][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:55:41.499][DEBUG](MoquiWorker-2) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[16:55:41.500][DEBUG](MoquiWorker-2) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[16:56:41.493][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:56:41.495][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:56:41.496][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:56:41.497][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:56:41.502][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:56:41.503][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:57:41.508][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:57:41.509][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:57:41.510][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:57:41.511][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:57:41.512][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:57:41.512][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:58:41.497][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:58:41.498][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:58:41.501][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:58:41.501][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:58:41.502][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:58:41.502][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:59:41.499][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:59:41.500][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[16:59:41.501][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:59:41.502][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[16:59:41.503][DEBUG](pool-2-thread-1) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[16:59:41.504][DEBUG](pool-2-thread-1) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[17:00:41.502][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[17:00:41.503][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[17:00:41.504][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[17:00:41.509][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[17:00:41.524][DEBUG](RequireNewTx) making find PreparedStatement for SQL: SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[17:00:41.525][DEBUG](RequireNewTx) Executed query with SQL [SELECT SEQ_NAME, SEQ_NUM, LAST_UPDATED_STAMP FROM SEQUENCE_VALUE_ITEM WHERE SEQ_NAME = ? FOR UPDATE] and parameters [[seqName:moqui.service.job.ServiceJobRun]] in [0] seconds [EntityQueryBuilder.class]
[17:00:41.531][INFO ](RequireNewTx) 更 [EntityValueBase.class]
[17:00:41.531][INFO ](RequireNewTx) 更1 [EntityValueBase.class]
[17:00:41.531][INFO ](RequireNewTx) 更2 [EntityValueBase.class]
[17:00:41.531][INFO ](RequireNewTx) 更4 [EntityValueBase.class]
[17:00:41.531][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[17:00:41.531][INFO ](RequireNewTx) 更5 [EntityValueBase.class]
[17:00:41.531][INFO ](RequireNewTx) 更5.5 [EntityValueBase.class]
[17:00:41.532][INFO ](RequireNewTx) 更9 [EntityValueBase.class]
[17:00:41.532][INFO ](RequireNewTx) 更10 [EntityValueBase.class]
[17:00:41.532][INFO ](RequireNewTx) 更11 [EntityValueBase.class]
[17:00:41.532][INFO ](RequireNewTx) 打SQL！ [EntityValueImpl.class]
[17:00:41.533][DEBUG](RequireNewTx) making crud PreparedStatement for SQL: UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=? [EntityQueryBuilder.class]
[17:00:41.534][DEBUG](RequireNewTx) Executed update with SQL [UPDATE SEQUENCE_VALUE_ITEM SET SEQ_NUM=?, LAST_UPDATED_STAMP=? WHERE SEQ_NAME=?] and parameters [[seqNum:101019, lastUpdatedStamp:2018-04-10 02:00:41.521, seqName:moqui.service.job.ServiceJobRun]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:41.534][INFO ](RequireNewTx) 更12 [EntityValueBase.class]
[17:00:41.534][INFO ](RequireNewTx) 更13 [EntityValueBase.class]
[17:00:41.534][INFO ](RequireNewTx) 更7 [EntityValueBase.class]
[17:00:41.534][INFO ](RequireNewTx) 更8 [EntityValueBase.class]
[17:00:41.560][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[17:00:41.564][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:41.564][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[17:00:41.564][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[17:00:41.564][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[17:00:41.565][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[17:00:41.571][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[17:00:41.572][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100969, lastRunTime:2018-04-10 02:00:41.502, lastUpdatedStamp:2018-04-10 02:00:41.504, jobName:clean_ArtifactData_daily]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:41.572][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[17:00:41.572][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[17:00:41.572][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[17:00:41.572][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[17:00:41.573][INFO ](pool-2-thread-2) Running job clean_ArtifactData_daily run 100969 (last run 2018-04-09 19:42:19.897, schedule 2018-04-10T02:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[17:00:41.797][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ? [EntityFindBuilder.class]
[17:00:41.798][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ?] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[17:00:42.040][INFO ](pool-2-thread-2) Found entities in 20 files in 86ms [EntityFacadeImpl.class]
[17:00:42.040][INFO ](pool-2-thread-2) Found 0 view-entity definitions in database (DbViewEntity records) [EntityFacadeImpl.class]
[17:00:42.052][DEBUG](MoquiWorker-1) making crud PreparedStatement for SQL: INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [EntityQueryBuilder.class]
[17:00:42.053][DEBUG](MoquiWorker-1) Executed update with SQL [INSERT INTO ARTIFACT_HIT_BIN (HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.079][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[17:00:42.080][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[17:00:42.080][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[17:00:42.080][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[17:00:42.081][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[17:00:42.081][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.081][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.081][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.082][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.082][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[17:00:42.082][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[17:00:42.082][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[17:00:42.082][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[17:00:42.082][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[17:00:42.083][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[17:00:42.084][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?) [EntityQueryBuilder.class]
[17:00:42.085][DEBUG](pool-2-thread-2) Executed update with SQL [INSERT INTO SERVICE_JOB_RUN (JOB_RUN_ID, JOB_NAME, LAST_UPDATED_STAMP) VALUES (?, ?, ?)] and parameters [[]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更1 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更2 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更4 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更5 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更5.5 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更9 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更10 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 更11 [EntityValueBase.class]
[17:00:42.085][INFO ](pool-2-thread-2) 打SQL！ [EntityValueImpl.class]
[17:00:42.085][DEBUG](pool-2-thread-2) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[17:00:42.086][DEBUG](pool-2-thread-2) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_RUN_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:100970, lastRunTime:2018-04-10 02:00:41.502, lastUpdatedStamp:2018-04-10 02:00:42.079, jobName:clean_ServiceJobRun_daily]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.086][INFO ](pool-2-thread-2) 更12 [EntityValueBase.class]
[17:00:42.086][INFO ](pool-2-thread-2) 更13 [EntityValueBase.class]
[17:00:42.086][INFO ](pool-2-thread-2) 更7 [EntityValueBase.class]
[17:00:42.086][INFO ](pool-2-thread-2) 更8 [EntityValueBase.class]
[17:00:42.086][INFO ](pool-2-thread-2) Running job clean_ServiceJobRun_daily run 100970 (last run 2018-04-09 19:42:19.897, schedule 2018-04-10T02:00-07:00[US/Pacific]) [ScheduledJobRunner.class]
[17:00:42.088][DEBUG](pool-2-thread-2) making find PreparedStatement for SQL: SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ? [EntityFindBuilder.class]
[17:00:42.088][DEBUG](pool-2-thread-2) Executed query with SQL [SELECT JOB_NAME, PARAMETER_NAME, PARAMETER_VALUE, LAST_UPDATED_STAMP FROM SERVICE_JOB_PARAMETER WHERE JOB_NAME = ?] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
[17:00:42.090][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[17:00:42.094][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-3, startTime:2018-04-10 02:00:42.079, lastUpdatedStamp:2018-04-10 02:00:42.079, jobRunId:100969]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.094][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[17:00:42.094][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[17:00:42.094][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[17:00:42.095][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[17:00:42.095][INFO ](pool-2-thread-2) Ran 2 Service Jobs starting 2018-04-10T02:00:41.502-07:00[US/Pacific] (active: 3, paused: 7) [ScheduledJobRunner.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[17:00:42.096][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[17:00:42.097][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[17:00:42.097][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[17:00:42.097][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[17:00:42.097][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[17:00:42.101][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET HOST_ADDRESS=?, HOST_NAME=?, RUN_THREAD=?, START_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[hostAddress:192.168.191.1, hostName:sq795-PC, runThread:MoquiWorker-4, startTime:2018-04-10 02:00:42.096, lastUpdatedStamp:2018-04-10 02:00:42.096, jobRunId:100970]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.101][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[17:00:42.101][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[17:00:42.101][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[17:00:42.101][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[17:00:42.603][DEBUG](MoquiWorker-4) making find PreparedStatement for SQL: SELECT JOB_RUN_ID, JOB_NAME, USER_ID, PARAMETERS, RESULTS, MESSAGES, HAS_ERROR, ERRORS, HOST_ADDRESS, HOST_NAME, RUN_THREAD, START_TIME, END_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN WHERE START_TIME < ? [EntityFindBuilder.class]
[17:00:42.672][DEBUG](MoquiWorker-4) Executed query with SQL [SELECT JOB_RUN_ID, JOB_NAME, USER_ID, PARAMETERS, RESULTS, MESSAGES, HAS_ERROR, ERRORS, HOST_ADDRESS, HOST_NAME, RUN_THREAD, START_TIME, END_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN WHERE START_TIME < ?] and parameters [[startTime:2018-03-11 03:00:42.502]] in [0] seconds [EntityQueryBuilder.class]
[17:00:42.679][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, ERROR_MESSAGE, REQUEST_URL, REFERRER_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP FROM ARTIFACT_HIT WHERE START_DATE_TIME < ? [EntityFindBuilder.class]
[17:00:42.719][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT HIT_ID, VISIT_ID, USER_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, PARAMETER_STRING, START_DATE_TIME, RUNNING_TIME_MILLIS, IS_SLOW_HIT, OUTPUT_SIZE, WAS_ERROR, ERROR_MESSAGE, REQUEST_URL, REFERRER_URL, SERVER_IP_ADDRESS, SERVER_HOST_NAME, LAST_UPDATED_STAMP FROM ARTIFACT_HIT WHERE START_DATE_TIME < ?] and parameters [[startDateTime:2018-01-10 02:00:42.493]] in [0] seconds [EntityQueryBuilder.class]
[17:00:42.720][DEBUG](MoquiWorker-3) making find PreparedStatement for SQL: SELECT HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP FROM ARTIFACT_HIT_BIN WHERE BIN_END_DATE_TIME < ? [EntityFindBuilder.class]
[17:00:42.722][INFO ](MoquiWorker-4) Removed 0 ServiceJobRun records. [LoggerFacadeImpl.class]
[17:00:42.741][DEBUG](MoquiWorker-3) Executed query with SQL [SELECT HIT_BIN_ID, ARTIFACT_TYPE, ARTIFACT_SUB_TYPE, ARTIFACT_NAME, SERVER_IP_ADDRESS, SERVER_HOST_NAME, BIN_START_DATE_TIME, BIN_END_DATE_TIME, HIT_COUNT, TOTAL_TIME_MILLIS, TOTAL_SQUARED_TIME, MIN_TIME_MILLIS, MAX_TIME_MILLIS, SLOW_HIT_COUNT, LAST_UPDATED_STAMP FROM ARTIFACT_HIT_BIN WHERE BIN_END_DATE_TIME < ?] and parameters [[binEndDateTime:2018-01-10 02:00:42.493]] in [0] seconds [EntityQueryBuilder.class]
[17:00:42.742][INFO ](MoquiWorker-3) Removed 0 ArtifactHit records and 0 ArtifactHitBin records. [LoggerFacadeImpl.class]
[17:00:42.813][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[17:00:42.813][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[17:00:42.813][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[17:00:42.814][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[17:00:42.814][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[17:00:42.814][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[17:00:42.815][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[17:00:42.815][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[17:00:42.815][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[17:00:42.815][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[17:00:42.815][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=? [EntityQueryBuilder.class]
[17:00:42.824][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastUpdatedStamp:2018-04-10 02:00:42.813, jobName:clean_ServiceJobRun_daily]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.824][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[17:00:42.824][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[17:00:42.824][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[17:00:42.824][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[17:00:42.824][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN_LOCK SET JOB_RUN_ID=?, LAST_UPDATED_STAMP=? WHERE JOB_NAME=?] and parameters [[jobRunId:null, lastUpdatedStamp:2018-04-10 02:00:42.813, jobName:clean_ArtifactData_daily]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.824][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[17:00:42.824][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[17:00:42.824][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[17:00:42.824][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[17:00:42.825][INFO ](MoquiWorker-3) 更 [EntityValueBase.class]
[17:00:42.825][INFO ](MoquiWorker-4) 更 [EntityValueBase.class]
[17:00:42.825][INFO ](MoquiWorker-4) 更1 [EntityValueBase.class]
[17:00:42.825][INFO ](MoquiWorker-4) 更2 [EntityValueBase.class]
[17:00:42.825][INFO ](MoquiWorker-4) 更4 [EntityValueBase.class]
[17:00:42.825][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.825][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.825][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.826][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.826][INFO ](MoquiWorker-4) 更5 [EntityValueBase.class]
[17:00:42.826][INFO ](MoquiWorker-4) 更5.5 [EntityValueBase.class]
[17:00:42.826][INFO ](MoquiWorker-4) 更9 [EntityValueBase.class]
[17:00:42.826][INFO ](MoquiWorker-4) 更10 [EntityValueBase.class]
[17:00:42.826][INFO ](MoquiWorker-4) 更11 [EntityValueBase.class]
[17:00:42.826][INFO ](MoquiWorker-4) 打SQL！ [EntityValueImpl.class]
[17:00:42.826][DEBUG](MoquiWorker-4) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更1 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更2 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更4 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更5 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更5.5 [EntityValueBase.class]
[17:00:42.839][INFO ](MoquiWorker-3) 更9 [EntityValueBase.class]
[17:00:42.840][DEBUG](MoquiWorker-4) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{"recordsRemoved":0}, messages:null, hasError:N, errors:null, endTime:2018-04-10 02:00:42.813, lastUpdatedStamp:2018-04-10 02:00:42.825, jobRunId:100970]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.840][INFO ](MoquiWorker-3) 更10 [EntityValueBase.class]
[17:00:42.840][INFO ](MoquiWorker-4) 更12 [EntityValueBase.class]
[17:00:42.840][INFO ](MoquiWorker-3) 更11 [EntityValueBase.class]
[17:00:42.840][INFO ](MoquiWorker-4) 更13 [EntityValueBase.class]
[17:00:42.840][INFO ](MoquiWorker-3) 打SQL！ [EntityValueImpl.class]
[17:00:42.840][INFO ](MoquiWorker-4) 更7 [EntityValueBase.class]
[17:00:42.840][INFO ](MoquiWorker-4) 更8 [EntityValueBase.class]
[17:00:42.844][DEBUG](MoquiWorker-3) making crud PreparedStatement for SQL: UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=? [EntityQueryBuilder.class]
[17:00:42.845][DEBUG](MoquiWorker-3) Executed update with SQL [UPDATE SERVICE_JOB_RUN SET RESULTS=?, MESSAGES=?, HAS_ERROR=?, ERRORS=?, END_TIME=?, LAST_UPDATED_STAMP=? WHERE JOB_RUN_ID=?] and parameters [[results:{"artifactHitBinsRemoved":0,"artifactHitsRemoved":0}, messages:null, hasError:N, errors:null, endTime:2018-04-10 02:00:42.813, lastUpdatedStamp:2018-04-10 02:00:42.825, jobRunId:100969]] in [0] seconds changing [1] rows [EntityQueryBuilder.class]
[17:00:42.845][INFO ](MoquiWorker-3) 更12 [EntityValueBase.class]
[17:00:42.845][INFO ](MoquiWorker-3) 更13 [EntityValueBase.class]
[17:00:42.845][INFO ](MoquiWorker-3) 更7 [EntityValueBase.class]
[17:00:42.845][INFO ](MoquiWorker-3) 更8 [EntityValueBase.class]
[17:01:41.504][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[17:01:41.507][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:HandleChkBeFile]] in [0] seconds [EntityQueryBuilder.class]
[17:01:41.510][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[17:01:41.511][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ArtifactData_daily]] in [0] seconds [EntityQueryBuilder.class]
[17:01:41.514][DEBUG](pool-2-thread-4) making find PreparedStatement for SQL: SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE [EntityFindBuilder.class]
[17:01:41.514][DEBUG](pool-2-thread-4) Executed query with SQL [SELECT JOB_NAME, JOB_RUN_ID, LAST_RUN_TIME, LAST_UPDATED_STAMP FROM SERVICE_JOB_RUN_LOCK WHERE JOB_NAME = ? FOR UPDATE] and parameters [[jobName:clean_ServiceJobRun_daily]] in [0] seconds [EntityQueryBuilder.class]
